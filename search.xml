<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Laravel Seeders</title>
      <link href="/2021/10/27/Laravel_Seeder/"/>
      <url>/2021/10/27/Laravel_Seeder/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-Seeders"><a href="#Laravel-Seeders" class="headerlink" title="Laravel Seeders"></a>Laravel Seeders</h1><h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>Laravel 可以使用 seed 類別，填充測試用的資料，或者是說這個資料表的資料都是固定的不會更動，也可以使用 seed 來創建資料</p><h2 id="撰寫-seeder"><a href="#撰寫-seeder" class="headerlink" title="撰寫 seeder"></a>撰寫 seeder</h2><p>首先透過 artisan 指令來生成 seeder 檔案，命名規則也應遵守大小寫，類似<code>UserTableSeeder</code> 。</p><p><code>php artisan make:seeder UserTableSeeder</code></p><p>創建完成後開啟，會看到只有一個預設的方法:run。當執行<code>db:seed</code>就會跑 run 底下的程式碼，在 run 方法中可以新增你想新增進資料庫的數據，可以使用 DB 或是 Eloquent ORM 對資料進行新增。</p><p>laravel 有預先有一個<code>DatabaseSeeder</code>的檔案，在<code>database\seeds</code>底下，可以在 run 裡面新增程式碼。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Seeder</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseSeeder</span> <span class="keyword">extends</span> <span class="title">Seeder</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the database seeds.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        DB::table(<span class="string">&#x27;users&#x27;</span>)-&gt;insert([</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;joe&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;email&#x27;</span> =&gt; <span class="string">&#x27;joe@gmail.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; bcrypt(<span class="string">&#x27;secret&#x27;</span>),</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-factory-創建假資料"><a href="#使用-factory-創建假資料" class="headerlink" title="使用 factory 創建假資料"></a>使用 factory 創建假資料</h3><p>手動為 seed 要一一指定屬性是很麻煩的，可以使用 factory 這個輔助方法函式來新增數據到資料庫中，當一開始資料庫沒有資料，要測試的時候可以這麼做。</p><p>舉例創建 50 個 user 並與 post 關聯。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    factory(App\User::class, <span class="number">50</span>)-&gt;create()-&gt;each(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$u</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$u</span>-&gt;posts()-&gt;save(factory(App\Post::class)-&gt;make());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="呼叫其他-Seeders"><a href="#呼叫其他-Seeders" class="headerlink" title="呼叫其他 Seeders"></a>呼叫其他 Seeders</h3><p>在<code>DatabaseSeeder</code>類別，可以使用 call 方法執行其他的 seed 類別。<br>這樣可以避免單一個 seeders 過於龐大。</p><p>只需要傳遞你想要 run 的 seeder 類別名稱就好</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Run the database seeds.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Model::unguard();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;call(UsersTableSeeder::class);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;call(PostsTableSeeder::class);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;call(CommentsTableSeeder::class);</span><br><span class="line"></span><br><span class="line">    Model::reguard();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="執行-seeders"><a href="#執行-seeders" class="headerlink" title="執行 seeders"></a>執行 seeders</h2><p>一旦撰寫完成 seeder 類別，可以使用<code>db:seed</code>的 artisan 指令對資料庫進行填充，<code>db:seed</code>將會運行<code>DatabaseSeeder</code>類別，透過他來呼叫其他 seeders，但也可以使用—class 來單獨運行指定的 seeder 類別:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan db:seed</span><br><span class="line"></span><br><span class="line">php artisan db:seed --<span class="class"><span class="keyword">class</span>=<span class="title">UserTableSeeder</span></span></span><br></pre></td></tr></table></figure><p>你也可以使用 migrate:refresh 指令來對資料庫進行資料填充，它會推回所有 migration(遷移檔案)並再次執行所有遷移並執行所有 seeder。在完全重建你的資料庫時這個指令是非常有用的：</p><p><code>php artisan migrate:refresh --seed</code></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DATE、TIME、DATETIME 和 TIMESTAMP 類型之間有什麼區別</title>
      <link href="/2021/10/27/SQL_time_type_difference/"/>
      <url>/2021/10/27/SQL_time_type_difference/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DATE、TIME、DATETIME-和-TIMESTAMP-類型之間有什麼區別"><a href="#DATE、TIME、DATETIME-和-TIMESTAMP-類型之間有什麼區別" class="headerlink" title="DATE、TIME、DATETIME 和 TIMESTAMP 類型之間有什麼區別"></a>DATE、TIME、DATETIME 和 TIMESTAMP 類型之間有什麼區別</h1><h3 id="DATE："><a href="#DATE：" class="headerlink" title="DATE："></a>DATE：</h3><p>具有日期部分但沒有時間部分的值。<br>MySQL 以<strong>YYYY-MM-DD</strong>格式檢索和顯示 DATE 值。支持的範圍是 1000-01-01 到 9999-12-31。</p><h3 id="DATETIME："><a href="#DATETIME：" class="headerlink" title="DATETIME："></a>DATETIME：</h3><p>用於包含日期和時間部分的值。<br>MySQL 以<strong>YYYY-MM-DD HH:MM:SS</strong>格式顯示 DATETIME 值。<br>支持的範圍是 1000-01-01 00:00:00 到 9999-12-31 23:59:59。</p><h3 id="TIMESTAMP："><a href="#TIMESTAMP：" class="headerlink" title="TIMESTAMP："></a>TIMESTAMP：</h3><p>包含日期和時間部分的值，並包括時區。<br>TIMESTAMP 的範圍是 1970-01-01 00:00:01UTC 到 2038-01-19 03:14:07UTC。</p><h3 id="TIME："><a href="#TIME：" class="headerlink" title="TIME："></a>TIME：</h3><p>其值採用<strong>HH:MM:SS</strong>格式（或 HHH:MM:SS 格式用於大小時值）。<br>TIME 值範圍從-838:59:59 到 838:59:59。小時部分可能如此之大，因為 TIME 類型不僅可以用於表示一天中的某個時間（必須小於 24 小時），還可以表示經過的時間或兩個事件之間的時間間隔（可能遠大於 24 小時，甚至是負的）。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel csrf token mismatch for ajax POST Request</title>
      <link href="/2021/10/25/Laravel%E4%BD%BF%E7%94%A8AJAX_POST%E5%95%8F%E9%A1%8C/"/>
      <url>/2021/10/25/Laravel%E4%BD%BF%E7%94%A8AJAX_POST%E5%95%8F%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-csrf-token-mismatch-for-ajax-POST-Request"><a href="#Laravel-csrf-token-mismatch-for-ajax-POST-Request" class="headerlink" title="Laravel csrf token mismatch for ajax POST Request"></a>Laravel csrf token mismatch for ajax POST Request</h1><p>在 laravel 裡使用 ajax post 方法遇到 CSRF Token 不符問題</p><p><strong>In header</strong></p><p><code>&lt;meta name=&quot;csrf-token&quot; content=&quot;&#123;&#123; csrf_token() &#125;&#125;&quot; /&gt;</code></p><p><strong>In script</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">$.ajaxSetup(&#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;X-CSRF-TOKEN&#x27;</span>: $(<span class="string">&#x27;meta[name=&quot;csrf-token&quot;]&#x27;</span>).attr(<span class="string">&#x27;content&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> AJAX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解決 json_encode 格式化的數據出現反斜杠的問題</title>
      <link href="/2021/10/25/%E8%A7%A3%E6%B1%BA%20json_encode%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%95%8F%E9%A1%8C/"/>
      <url>/2021/10/25/%E8%A7%A3%E6%B1%BA%20json_encode%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%95%8F%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="解決-json-encode-格式化的數據出現反斜杠的問題"><a href="#解決-json-encode-格式化的數據出現反斜杠的問題" class="headerlink" title="解決 json_encode 格式化的數據出現反斜杠的問題"></a>解決 json_encode 格式化的數據出現反斜杠的問題</h1><p>在上傳多個圖片檔案使用 json_encode 格式化完成時發現</p><p>原先陣列資料：<code>[&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;]</code></p><p>陣列路徑被轉換以下<br><code>[&quot;\/img\/store\/1635141776.png&quot;,&quot;\/img\/store\/1635141776.png&quot;,&quot;\/img\/store\/1635141776.png&quot;]</code><br>只要有” / “就會變成” \/ “，這樣無法讀取到檔案</p><p>可以使用以下兩種解決辦法<br><code>$data = [&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;]</code></p><ol><li><p>使用 PHP 自帶的參數：JSON_UNESCAPED_SLASHES<br><code>json_encode($data, JSON_UNESCAPED_SLASHES);</code></p></li><li><p>字串替換<br><code>str_replace(&quot;\\&quot;, &quot;/&quot;, json_encode($data))</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel use notification when some data add</title>
      <link href="/2021/10/14/laravel_storeAdd_notification_to_user/"/>
      <url>/2021/10/14/laravel_storeAdd_notification_to_user/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-use-notification-when-some-data-add"><a href="#Laravel-use-notification-when-some-data-add" class="headerlink" title="Laravel use notification when some data add"></a>Laravel use notification when some data add</h1><h4 id="今天就舉一個例子，如果有商家新增了，將通知給使用者"><a href="#今天就舉一個例子，如果有商家新增了，將通知給使用者" class="headerlink" title="今天就舉一個例子，如果有商家新增了，將通知給使用者"></a>今天就舉一個例子，如果有商家新增了，將通知給使用者</h4><h3 id="1-下載-laravel-notofocation-資料表"><a href="#1-下載-laravel-notofocation-資料表" class="headerlink" title="1. 下載 laravel notofocation 資料表"></a>1. 下載 laravel notofocation 資料表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan notifications:table</span><br><span class="line"></span><br><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><h3 id="2-創建-notification"><a href="#2-創建-notification" class="headerlink" title="2. 創建 notification"></a>2. 創建 notification</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan make:notification StoreAdded</span><br></pre></td></tr></table></figure><h3 id="3-撰寫-StoreAdded-php-回傳程式碼"><a href="#3-撰寫-StoreAdded-php-回傳程式碼" class="headerlink" title="3. 撰寫 StoreAdded.php 回傳程式碼"></a>3. 撰寫 StoreAdded.php 回傳程式碼</h3><p>toarray 函式，就是我們要發送的資料，會是一個 json。<br>因為是使用 database，所以要將 via 裡改成 database</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>\<span class="title">Queueable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Queue</span>\<span class="title">ShouldQueue</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Messages</span>\<span class="title">MailMessage</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notification</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StoreAdded</span> <span class="keyword">extends</span> <span class="title">Notification</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Queueable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new notification instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the notification&#x27;s delivery channels.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $notifiable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">via</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;database&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the mail representation of the notification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $notifiable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Notifications\Messages\MailMessage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toMail</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> MailMessage)</span><br><span class="line">            -&gt;line(<span class="string">&#x27;The introduction to the notification.&#x27;</span>)</span><br><span class="line">            -&gt;action(<span class="string">&#x27;Notification Action&#x27;</span>, url(<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">            -&gt;line(<span class="string">&#x27;Thank you for using our application!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the array representation of the notification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $notifiable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="keyword">$this</span>-&gt;store-&gt;name . <span class="string">&#x27;加入囉！&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span> =&gt; Carbon::now()-&gt;format(<span class="string">&#x27;m-d H:i&#x27;</span>),</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-在-User-模型加入-Notifiable"><a href="#4-在-User-模型加入-Notifiable" class="headerlink" title="4. 在 User 模型加入 Notifiable"></a>4. 在 User 模型加入 Notifiable</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Notifications</span>\<span class="title">StoreAdded</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span> <span class="keyword">implements</span> <span class="title">MustVerifyEmail</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that are mass assignable.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendStoreAddedNotification</span>(<span class="params"><span class="variable">$store</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;notify(<span class="keyword">new</span> StoreAdded(<span class="variable">$store</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-新增商家發送通知"><a href="#5-新增商家發送通知" class="headerlink" title="5. 新增商家發送通知"></a>5. 新增商家發送通知</h3><p>將發送通知程式碼接在 save 後面，當新增成功才將通知加到資料庫，user 可以設定要傳給哪些人</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 找到所有使用者發送</span></span><br><span class="line"><span class="variable">$users</span> = User::all();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$users</span> <span class="keyword">as</span> <span class="variable">$user</span>) &#123;</span><br><span class="line">    <span class="variable">$user</span>-&gt;sendStoreAddedNotification(<span class="variable">$store</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-讀取通知"><a href="#6-讀取通知" class="headerlink" title="6. 讀取通知"></a>6. 讀取通知</h3><p>以下為讀取所有通知</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span>=App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span>-&gt;notifications <span class="keyword">as</span> <span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$notification</span>-&gt;type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下為讀取未讀取通知</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span>=App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span>-&gt;unreadNotifications <span class="keyword">as</span> <span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$notification</span>-&gt;type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-將通知變成已讀取"><a href="#7-將通知變成已讀取" class="headerlink" title="7. 將通知變成已讀取"></a>7. 將通知變成已讀取</h3><p>可以一條一條設為已讀取</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span>=App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span>-&gt;unreadNotifications <span class="keyword">as</span> <span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="variable">$notification</span>-&gt;markAsRead();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以一次把撈出來的 user 通知設為已讀取<br><code>$user-&gt;unreadNotifications-&gt;markAsRead();</code></p><p>取出單筆通知(不一定是個好方法)</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span> = App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$notification</span> = <span class="variable">$user</span>-&gt;notifications()-&gt;find(<span class="variable">$notificationid</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="variable">$notification</span>-&gt;markAsRead();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刪除通知<br><code>$user-&gt;notifications()-&gt;delete();</code></p><h3 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h3><p>內建 notification 模型放在這裡，可以使用普通數據庫查詢<br><code>Illuminate\Notifications\DatabaseNotification</code></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS取得目前瀏覽器位置</title>
      <link href="/2021/10/14/js_get_location/"/>
      <url>/2021/10/14/js_get_location/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-取得目前瀏覽器位置"><a href="#JS-取得目前瀏覽器位置" class="headerlink" title="JS 取得目前瀏覽器位置"></a>JS 取得目前瀏覽器位置</h1><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Navigator/geolocation">Navigator.geolocation DOC</a></p><p><code>Navigator.geolocation</code> 回傳一個唯讀的 <code>Geolocation</code> 物件，透過這個物件可以存取設備的位置訊息。同時也允許網站或應用程式根據使用者的位置提供客製化的結果。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getLocation()&quot;</span>&gt;</span>取得您目前所在位置的經緯度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> m = <span class="built_in">document</span>.getElementById(<span class="string">&quot;msg&quot;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">getLocation</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//取得 經緯度</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (navigator.geolocation) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">          navigator.geolocation.getCurrentPosition(showPosition); <span class="comment">//有拿到位置就呼叫 showPosition 函式</span></span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          m.innerHTML =</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;您的瀏覽器不支援 顯示地理位置 API ，請使用其它瀏覽器開啟 這個網址&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">showPosition</span>(<span class="params">position</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        m.innerHTML =</span></span><br><span class="line"><span class="javascript">          <span class="string">&quot; 緯度 (Latitude): &quot;</span> +</span></span><br><span class="line"><span class="javascript">          position.coords.latitude +</span></span><br><span class="line"><span class="javascript">          <span class="string">&quot;&lt;br&gt;經度 (Longitude): &quot;</span> +</span></span><br><span class="line"><span class="javascript">          position.coords.longitude;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下來實測看看</p><p><img src="https://i.imgur.com/Xua1a5u.gif" alt=""></p><p>成功拉!!!</p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel Carbon format now time</title>
      <link href="/2021/10/14/Laravel_Carbon_format_nowTime/"/>
      <url>/2021/10/14/Laravel_Carbon_format_nowTime/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-Carbon-format-now-time"><a href="#Laravel-Carbon-format-now-time" class="headerlink" title="Laravel Carbon format now time"></a>Laravel Carbon format now time</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$date</span> = Carbon::now();</span><br><span class="line"><span class="variable">$formatedDate</span> = <span class="variable">$date</span>-&gt;format(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$formatedDate</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel how to post values from a multiple select</title>
      <link href="/2021/10/13/laravel_post_MultipleSelect_values/"/>
      <url>/2021/10/13/laravel_post_MultipleSelect_values/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-how-to-post-values-from-a-multiple-select"><a href="#Laravel-how-to-post-values-from-a-multiple-select" class="headerlink" title="Laravel how to post values from a multiple select"></a>Laravel how to post values from a multiple select</h1><p>首先，記得在你的 select tag 的 name 後面加上括號[]，這樣子在複選後，傳到後端去的時候才會取得到複選的所有值。</p><p>使用 dd() 函式印出，就可以看到陣列裡面包含選住的值</p><p>First , remember to add parentheses [] after the name of your select tag, so that after the select, all the checked values will be obtained when it is passed to the backend.</p><p>Use the dd() function to print out, you can see that the array contains the selected value.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;number[]&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Chosen JQuery plugin on Laravel</title>
      <link href="/2021/10/13/laravel_use_chosen/"/>
      <url>/2021/10/13/laravel_use_chosen/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="How-to-use-Chosen-JQuery-plugin-on-Laravel"><a href="#How-to-use-Chosen-JQuery-plugin-on-Laravel" class="headerlink" title="How to use Chosen JQuery plugin on Laravel"></a>How to use Chosen JQuery plugin on Laravel</h1><p><a href="https://packagist.org/packages/harvesthq/chosen">chosen packagist</a></p><h3 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h3><pre><code>`composer require harvesthq/chosen`</code></pre><h3 id="2-Import"><a href="#2-Import" class="headerlink" title="2. Import"></a>2. Import</h3><p>Import jquery first, otherwise an error will occur</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-add-form"><a href="#3-add-form" class="headerlink" title="3. add form"></a>3. add form</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;.chosen-select&quot;</span>).chosen(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">no_results_text</span>: <span class="string">&quot;Oops, nothing found!&quot;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://httpbin.org/post&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span></span></span><br><span class="line"><span class="tag">    <span class="attr">data-placeholder</span>=<span class="string">&quot;select your favorite fruit&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">multiple</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;chosen-select&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">&quot;fruit[]&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Banana<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Cherry<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Kiwi fruit<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Mango<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Orange<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Papaya<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Sapota<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Run code</li></ol><p><img src="https://i.imgur.com/PAuSrFF.png" alt=""></p><ol><li>Submit</li></ol><p><img src="https://i.imgur.com/kNCfZCS.jpg" alt=""></p><p>Need more changes see <a href="https://harvesthq.github.io/chosen/">chosen doc</a></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> JQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP學習筆記(持續更新中)</title>
      <link href="/2021/10/05/php_learn/"/>
      <url>/2021/10/05/php_learn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PHP-學習筆記-持續更新中"><a href="#PHP-學習筆記-持續更新中" class="headerlink" title="PHP 學習筆記(持續更新中)"></a>PHP 學習筆記(持續更新中)</h1><h2 id="PHP-的資料型態"><a href="#PHP-的資料型態" class="headerlink" title="PHP 的資料型態"></a>PHP 的資料型態</h2><h3 id="Bollean-布林值"><a href="#Bollean-布林值" class="headerlink" title="Bollean 布林值"></a>Bollean 布林值</h3><p>算是最簡單的資料型態，可以為 true 跟 false 不區分大小寫。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$foo</span> = <span class="literal">true</span>; <span class="comment">// 設置foo變數為true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>常用在判斷式</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 兩個等於代表操作符，檢測兩個遍量是否相等，返回布林值</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$password</span> == <span class="string">&#x27;123&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;pass&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這樣寫是不必要的</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$check</span> == <span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;check in&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用以下方式</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$check</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;check in&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Integer-整數型態"><a href="#Integer-整數型態" class="headerlink" title="Integer 整數型態"></a>Integer 整數型態</h3><p>整型值 int 可以使用十进制，十六进制，八进制或二进制表示，前面可以加上可選的符號（- 或者 +）。 可以用負運算符 来表示一个負的 int。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>; <span class="comment">// 十進位</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">012</span>; <span class="comment">// 八進位 (等於十進位 10)</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">0xa</span>; <span class="comment">// 十六進位 (等于十進制 10)</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">0b1010</span>; <span class="comment">// 二進制数字 (等于十進制 10)</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1_0_1_0</span>_; <span class="comment">// 整型数值 (PHP 7.4.0 以后)輸出1010</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>整數溢出，如果超過 int 範圍會轉換成 float 型態。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var_dump()方法是判斷一個變量的類型與長度,並輸出變量的數值</span></span><br><span class="line"><span class="variable">$large_number</span> = <span class="number">2147483647</span>;</span><br><span class="line">var_dump(<span class="variable">$large_number</span>); <span class="comment">// int(2147483647)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$large_number</span> = <span class="number">2147483648</span>;</span><br><span class="line">var_dump(<span class="variable">$large_number</span>); <span class="comment">// float(2147483648)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Float-符點數"><a href="#Float-符點數" class="headerlink" title="Float 符點數"></a>Float 符點數</h3><p>擁有小數點的正負數值，<br>通常最大值是 1.8e308 並具有 14 位十進制數字的精度。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$num</span> = <span class="number">99.01</span>;</span><br><span class="line"><span class="variable">$num</span> = -<span class="number">50.30</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="string-字符串"><a href="#string-字符串" class="headerlink" title="string 字符串"></a>string 字符串</h3><p>由字符組成，每個字符等同於一個字節。這意味著 PHP 只能支持 256 的字符集，因此不支持 Unicode 。</p><blockquote><p>注意:在 32 位版本中，string 最大可以達到 2GB（最多 2147483647 字節）。</p></blockquote><p>定義一個字符串最簡單就是用’’單引號刮起來。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$text</span> = <span class="string">&#x27;This is test string&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$text</span>; <span class="comment">// 輸出: This is test string</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果包含在雙引號內就可以對特殊字符進行解析。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 可以直接將變數帶入</span></span><br><span class="line"><span class="variable">$food</span> = <span class="string">&#x27;noodles&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hi \n&quot;</span>; <span class="comment">// 換行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;I like to eat <span class="subst">$food</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Array-數組"><a href="#Array-數組" class="headerlink" title="Array 數組"></a>Array 數組</h3><p>PHP 中的 array 實際上是一個有序映射。映射是一種把 values 關聯到 keys 的類型。</p><p>可以用 array() 方法來結構一個 array 。接受任意數量用逗號分隔的 鍵（key） =&gt; 值（value） 。以下範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arry</span> = <span class="keyword">array</span>( <span class="number">0</span> =&gt; <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">               <span class="number">1</span> =&gt; <span class="string">&#x27;tomato&#x27;</span>,</span><br><span class="line">               <span class="number">2</span> =&gt; <span class="string">&#x27;banana&#x27;</span>,);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arry</span>[<span class="number">0</span>]; <span class="comment">// apple</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用以下短數組語法</span></span><br><span class="line"><span class="variable">$arry</span> = [ <span class="number">0</span> =&gt; <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">          <span class="number">1</span> =&gt; <span class="string">&#x27;tomato&#x27;</span>,</span><br><span class="line">          <span class="number">2</span> =&gt; <span class="string">&#x27;banana&#x27;</span>,];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arry</span>[<span class="number">0</span>]; <span class="comment">// apple</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>沒有鍵名的索引數組</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;tomato&quot;</span>, <span class="string">&quot;banana&quot;</span>, );</span><br><span class="line">var_dump(<span class="variable">$array</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;apple&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;tomato&quot;</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;banana&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>數組可以用在許多地方，以下有些範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$map</span> = <span class="keyword">array</span>( <span class="string">&#x27;version&#x27;</span> =&gt; <span class="number">4</span>,</span><br><span class="line">              <span class="string">&#x27;OS&#x27;</span> =&gt; <span class="string">&#x27;Linux&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;lang&#x27;</span> =&gt; <span class="string">&#x27;english&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;short_tags&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"><span class="comment">// . . .完全等同於:</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;version&#x27;</span>] = <span class="number">4</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;os&#x27;</span>] = <span class="string">&#x27;Linux&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;lang&#x27;</span>] = <span class="string">&#x27;english&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;short_tags&#x27;</span>]  = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$a</span>[<span class="string">&#x27;os&#x27;</span>]); <span class="comment">// 刪除 &quot;Linux&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>輸出集合</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$maps</span> = <span class="keyword">array</span>( <span class="string">&#x27;version&#x27;</span> =&gt; <span class="number">4</span>,</span><br><span class="line">              <span class="string">&#x27;OS&#x27;</span> =&gt; <span class="string">&#x27;Linux&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;lang&#x27;</span> =&gt; <span class="string">&#x27;english&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;short_tags&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$maps</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$key</span> is <span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// version is 4</span></span><br><span class="line"><span class="comment">// OS is Linux</span></span><br><span class="line"><span class="comment">// lang is english</span></span><br><span class="line"><span class="comment">// short_tags is 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Array 是有序的。也可以使用不同的排序函数来改變順序。</p><p>數組排序範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">sort(<span class="variable">$files</span>); <span class="comment">// 對value排序</span></span><br><span class="line">print_r(<span class="variable">$files</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Iterable-可迭代對象"><a href="#Iterable-可迭代對象" class="headerlink" title="Iterable 可迭代對象"></a>Iterable 可迭代對象</h3><p>它接受任何 array 或實現了 Traversable(可遍歷) 接口的對象。<br>這些類型都能用 foreach 迭代， 也可以和 生成器 里的 yield from 一起使用。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen</span>(<span class="params"></span>): <span class="title">iterable</span> </span>&#123; <span class="comment">// 建立一個可迭代生成器</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$iterable</span> = gen(); <span class="comment">// 實例化</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$iterable</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 答案相同</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen</span>(<span class="params"></span>): <span class="title">iterable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$iterable</span> = gen();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$iterable</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Object-對象"><a href="#Object-對象" class="headerlink" title="Object 對象"></a>Object 對象</h3><p>要創建一个新的對象 object，使用 new 語句實例化一个類：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SayHi</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">do_sayhi</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">new</span> foo;</span><br><span class="line"><span class="variable">$bar</span>-&gt;do_sayhi(); <span class="comment">// Hello</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果將 Object 轉換成 Object 將不會有任何變化，如果其它任何類型的值被轉換成對象，將會創建一个内置類 stdClass 的實例。如果该值为 null，則新的實例為空。<br>array 轉換成 object 將使 Key 值成為屬性名並具有相對應的值，參考以下範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$obj</span> = (<span class="keyword">object</span>) <span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span> =&gt; <span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">var_dump(<span class="keyword">isset</span>(<span class="variable">$obj</span>-&gt;&#123;<span class="string">&#x27;1&#x27;</span>&#125;)); <span class="comment">// PHP 7.2.0 後輸出 &#x27;bool(true)&#x27;，之前版本會輸出 &#x27;bool(false)&#x27;</span></span><br><span class="line">var_dump(key(<span class="variable">$obj</span>)); <span class="comment">// PHP 7.2.0 後輸出 &#x27;string(1) &quot;1&quot;&#x27;，之前版本輸出  &#x27;int(1)&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>對於其他值，會包含進成員變量名 scalar。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$obj</span> = (<span class="keyword">object</span>) <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;scalar;  <span class="comment">// outputs &#x27;hello&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Null-類型"><a href="#Null-類型" class="headerlink" title="Null 類型"></a>Null 類型</h3><p>特殊的 null 值表示一个變數没有值。NULL 類型唯一可能的值就是 null。</p><p>在下列情况下一个變數被认为是 null：</p><ul><li><p>被賦值为 null。</p></li><li><p>尚未被賦值。</p></li><li><p>被 unset()。</p></li></ul><p>null 類型只有一个值，就是不區分大小寫的常量 null。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$var</span> = <span class="literal">NULL</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PHP-變數命名規則"><a href="#PHP-變數命名規則" class="headerlink" title="PHP 變數命名規則"></a>PHP 變數命名規則</h2><p>PHP 中的變數用一个美元符號後面跟變數名稱来表示。變數名是區分大小寫的。</p><p>變數名與 PHP 中其它的標籤一样遵循相同的規則。一个有效的變量名由字母或者底線開頭，後面加上任意数量的字母，数字，或者底線。 按照正常的正規表示法，他將被表達為：’\^[a-zA-Z_\x80-\xff][a-za-z0-9_\x80-\xff]*$’。</p><blockquote><p>$this 是一個特殊變數，他不能被賦值。</p></blockquote><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$firstName</span> = <span class="string">&#x27;Wang&#x27;</span>;</span><br><span class="line"><span class="variable">$lastName</span> = <span class="string">&#x27;Joe&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$firstName</span>, <span class="subst">$lastName</span>&quot;</span>;      <span class="comment">// 输出 &quot;Wang, Joe&quot;</span></span><br><span class="line"></span><br><span class="line">$<span class="number">4</span>site = <span class="string">&#x27;not yet&#x27;</span>;     <span class="comment">// 非法變數名；以數字開頭</span></span><br><span class="line"><span class="variable">$_4site</span> = <span class="string">&#x27;not yet&#x27;</span>;    <span class="comment">// 合法變數名；以底線開頭</span></span><br><span class="line"><span class="variable">$i</span>站點is = <span class="string">&#x27;TW&#x27;</span>;  <span class="comment">// 合法變數名；可以用中文</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h2><p>可以使用 const 關鍵字或 define() 函數兩種方法來定義一個常量。函數 define() 允許將常量定義為一個表達式，而 const 關鍵字有一些限制。一個常量一旦被定義，就不能再改變或者取消定義。</p><p>使用 const 關鍵字定義常量時，只能包含標量數據（bool、int、float 、string）。可以將常量定義為一個表達式，也可以定義為一個 array。還可以定義 resource 為常量，但應盡量避免，因為可能會造成不可預料的結果。</p><p>可以簡單的通過指定其名字來取得常量的值，與變量不同，不應該在常量前面加上 $ 符號。如果常量名是動態的，也可以用函數 constant() 來獲取常量的值。用 get_defined_constants() 可以獲得所有已定義的常量列表。</p><p>以下為定義常量範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;CONSTANT&quot;</span>, <span class="string">&quot;Hello world.&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> CONSTANT; <span class="comment">// 輸出 &quot;Hello world.&quot;</span></span><br><span class="line"><span class="keyword">echo</span> Constant; <span class="comment">// 拋出錯誤：未定義的常量 &quot;Constant&quot;</span></span><br><span class="line">               <span class="comment">// 在 PHP 8.0.0 之前，输出 &quot;Constant&quot; 會併發出一個提示級別錯誤訊息</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下範例為使用關鍵字 const 定義常量</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 簡單的標量值</span></span><br><span class="line"><span class="keyword">const</span> CONSTANT = <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> CONSTANT;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 標量表達式</span></span><br><span class="line"><span class="keyword">const</span> ANOTHER_CONST = CONSTANT.<span class="string">&#x27;; Goodbye World&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> ANOTHER_CONST;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ANIMALS = <span class="keyword">array</span>(<span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;bird&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> ANIMALS[<span class="number">1</span>]; <span class="comment">// 將輸出 &quot;cat&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量數組</span></span><br><span class="line">define(<span class="string">&#x27;ANIMALS&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;dog&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cat&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bird&#x27;</span></span><br><span class="line">));</span><br><span class="line"><span class="keyword">echo</span> ANIMALS[<span class="number">1</span>]; <span class="comment">// 將輸出 &quot;cat&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>魔術常量</p><div class="table-container"><table><thead><tr><th>名字</th><th>說明</th></tr></thead><tbody><tr><td>__LINE__</td><td>文件中的當前行號</td></tr><tr><td>__FILE__</td><td>文件的完整路徑和文件名。如果用在被包含文件中，則返回被包含的文件名。</td></tr><tr><td>__DIR__</td><td>文件所在的目錄。如果用在被包括文件中，則返回被包括的文件所在的目錄。它等價於 dirname(__FILE__)。除非是根目錄，否則目錄中名不包括末尾的斜杠。</td></tr><tr><td>__FUNCTION__</td><td>當前函數的名稱。匿名函數則為 {closure}。</td></tr><tr><td>__CLASS__</td><td>當前類的名稱。類名包括其被聲明的作用域（例如 Foo\Bar）。當用在 trait 方法中時，__CLASS__ 是調用 trait 方法的類的名字</td></tr><tr><td>__TRAIT__</td><td>Trait 的名字。 Trait 名包括其被聲明的作用域（例如 Foo\Bar）。</td></tr><tr><td>__METHOD__</td><td>class 的方法名</td></tr><tr><td>__NAMESPACE__</td><td>當前命名空間名稱</td></tr><tr><td>ClassName::class</td><td>完整的 class 名稱</td></tr></tbody></table></div><p>以下為魔術常量範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UserModel</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">User</span> &#123;</span><br><span class="line">        <span class="title">public</span> <span class="title">function</span> <span class="title">__construct</span>() &#123;</span><br><span class="line">            <span class="title">echo</span> &#x27;<span class="title">I</span> <span class="title">am</span> <span class="title">in</span> &#x27;.<span class="title">__CLASS__</span>.&quot;\<span class="title">n</span>&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;I am in &#x27;</span>.<span class="keyword">__METHOD__</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> User;</span><br><span class="line">    <span class="variable">$obj</span>-&gt;showData();</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">__NAMESPACE__</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// I am in UserModel\User</span></span><br><span class="line"><span class="comment">// I am in UserModel\User::showData</span></span><br><span class="line"><span class="comment">// UserModel</span></span><br></pre></td></tr></table></figure><h2 id="PHP-運算符"><a href="#PHP-運算符" class="headerlink" title="PHP 運算符"></a>PHP 運算符</h2><h3 id="算數運算符"><a href="#算數運算符" class="headerlink" title="算數運算符"></a>算數運算符</h3><p>跟國中小數學基本數學知識相同。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> + <span class="number">1</span> * <span class="variable">$b</span>; <span class="comment">// output: 3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下圖表為算術運算符</p><div class="table-container"><table><thead><tr><th>例子</th><th>名称</th><th>结果</th></tr></thead><tbody><tr><td>+$a</td><td>標識</td><td>根據情况將 $a 轉化為 int 或 float。</td></tr><tr><td>-$a</td><td>取反</td><td>$a 的負值。</td></tr><tr><td>$a + $b</td><td>加法</td><td>$a 和 $b 的和。</td></tr><tr><td>$a - $b</td><td>减法</td><td>$a 和 $b 的差。</td></tr><tr><td>$a * $b</td><td>乘法</td><td>$a 和 $b 的積。</td></tr><tr><td>$a / $b</td><td>除法</td><td>$a 除以 $b 的商。</td></tr><tr><td>$a % $b</td><td>取模</td><td>$a 除以 $b 的餘數。</td></tr><tr><td>$a ** $b</td><td>求幂</td><td>$a 的 $b 次方的值。</td></tr></tbody></table></div><hr><h3 id="賦值運算符"><a href="#賦值運算符" class="headerlink" title="賦值運算符"></a>賦值運算符</h3><p>基本的賦值運算符是“=”。一開始可能會以為它是“等於”，其實不是的。它實際上意味著把右邊表達式的值賦給左邊的運算數</p><p>下圖為算術賦值運算符</p><div class="table-container"><table><thead><tr><th>例子</th><th>等同於</th><th>操作</th></tr></thead><tbody><tr><td>$a += $b</td><td>$a = $a + $b</td><td>加法</td></tr><tr><td>$a -= $b</td><td>$a = $a - $b</td><td>减法</td></tr><tr><td>$a *= $b</td><td>$a = $a * $b</td><td>乘法</td></tr><tr><td>$a /= $b</td><td>$a = $a / $b</td><td>除法</td></tr><tr><td>$a %= $b</td><td>$a = $a % $b</td><td>取餘數</td></tr><tr><td>$a **= $b</td><td>$a = $a ** $b</td><td>指數</td></tr></tbody></table></div><p>下圖為其他賦值運算符</p><div class="table-container"><table><thead><tr><th>例子</th><th>等同於</th><th>操作</th></tr></thead><tbody><tr><td>$a .= $b</td><td>$a = $a . $b</td><td>字符串拼接</td></tr><tr><td>$a ?? $b</td><td>$a = $a ?? $b</td><td>NULL 合併</td></tr></tbody></table></div><hr><h3 id="位元運算"><a href="#位元運算" class="headerlink" title="位元運算"></a>位元運算</h3><p>位運算符允許對整型數中指定的位進行求值和操作。</p><p>下圖為位元運算符號<br>| 例子 | 名稱 | 结果 |<br>| ———— | —————————- | ———————————————————————————— |<br>| $a &amp; $b | And（按位與） | 將把 $a 和 $b 中都為 1 的位設為 1。 |<br>| $a | $b | Or（按位或） | 將把 $a 和 $b 中任何一個為 1 的位設為 1。 |<br>| $a ^ $b | Xor（按位異或） | 將把 $a 和 $b 中一個為 1 另一個為 0 的位設為 1。 |<br>| ~ $a | Not（按位取反） | 將 $a 中為 0 的位設為 1，反之亦然。 |<br>| $a &lt;&lt; $b | Shift left（左移） | 將 $a 中的位向左移動 $b 次（每一次移動都表示“乘以 2”）。 |<br>| $a &gt;&gt; $b | Shift right（右移） | 將 $a 中的位向右移動 $b 次（每一次移動都表示“除以 2”）。 |</p><hr><h3 id="比較運算符"><a href="#比較運算符" class="headerlink" title="比較運算符"></a>比較運算符</h3><p>比較運算符，如同它們名稱所暗示的，允許對兩個值進行比較。</p><div class="table-container"><table><thead><tr><th>例子</th><th>名稱</th><th>結果</th></tr></thead><tbody><tr><td>$a == $b</td><td>等於</td><td>true，如果類型轉換後 $a 等於 $b。</td></tr><tr><td>$a === $b</td><td>全等於</td><td>true，如果 $a 等於 $b，並且它們的類型也相同。</td></tr><tr><td>$a != $b</td><td>不等於</td><td>true，如果類型轉換後 $a 不等於 $b。</td></tr><tr><td>$a &lt;&gt; $b</td><td>不等於</td><td>true，如果類型轉換後 $a 不等於 $b。</td></tr><tr><td>$a !== $b</td><td>不全等</td><td>true，如果 $a 不等於 $b，或者它們的類型不同。</td></tr><tr><td>$a &lt; $b</td><td>小於</td><td>true，如果 $a 嚴格小於 $b。</td></tr><tr><td>$a &gt; $b</td><td>大於</td><td>true，如果 $a 嚴格大於 $b。</td></tr><tr><td>$a &lt;= $b</td><td>小於等於</td><td>true，如果 $a 小於或者等於 $b。</td></tr><tr><td>$a &gt;= $b</td><td>大於等於</td><td>true，如果 $a 大於或者等於 $b。</td></tr><tr><td>$a &lt;=&gt; $b</td><td>太空船運算符（組合比較符）</td><td>當$a 小於、等於、大於 $b 時 分别返回一個小於、等於、大於 0 的 int 值。</td></tr></tbody></table></div><hr><h3 id="執行運算符"><a href="#執行運算符" class="headerlink" title="執行運算符"></a>執行運算符</h3><p>PHP 支持一個執行運算符：反引號（``）。注意這不是單引號！ PHP 將嘗試將反引號中的內容作為 shell 命令來執行，並將其輸出信息返回（即，可以賦給一個變量而不是簡單地丟棄到標準輸出）。使用反引號運算符“`”的效果與函數 shell_exec() 相同。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$output</span> = `ipconfig /all`;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">$output</span>&lt;/pre&gt;&quot;</span>; <span class="comment">// 輸出所有IP資訊</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="遞增-遞減運算符"><a href="#遞增-遞減運算符" class="headerlink" title="遞增/遞減運算符"></a>遞增/遞減運算符</h3><p>:::warning<br>注意: 遞增／遞減運算符不影響布爾值。遞減 null 值也沒有效果，但是遞增 null 的結果是 1。:zap:<br>:::</p><div class="table-container"><table><thead><tr><th>例子</th><th>名称</th><th>效果</th></tr></thead><tbody><tr><td>++$a</td><td>先加</td><td>$a 的值加一，然後返回 $a。</td></tr><tr><td>$a++</td><td>後加</td><td>返回 $a，然後將 $a 的值加一。</td></tr><tr><td>—$a</td><td>先减</td><td>$a 的值减一， 然后返回 $a。</td></tr><tr><td>$a—</td><td>後减</td><td>返回 $a，然後將 $a 的值减一。</td></tr></tbody></table></div><p>簡易的範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;後增量(PostIncrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 5: &quot;</span> . <span class="variable">$a</span>++ . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 6: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;先增量(PreIncrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 6: &quot;</span> . ++<span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 6: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;後減(PostDecrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 5: &quot;</span> . <span class="variable">$a</span>-- . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 4: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;先減(Predecrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 4: &quot;</span> . --<span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 4: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="邏輯運算符"><a href="#邏輯運算符" class="headerlink" title="邏輯運算符"></a>邏輯運算符</h3><div class="table-container"><table><thead><tr><th>例子</th><th>名稱</th><th>结果</th></tr></thead><tbody><tr><td>$a and $b</td><td>And（和）</td><td>true，如果 $a 和 $b 都為 true。</td></tr><tr><td>$a or $b</td><td>Or（或）</td><td>true，如果 $a 或 $b 任一為 true。</td></tr><tr><td>$a xor $b</td><td>Xor（異或）</td><td>true，如果 $a 或 $b 任一為 true，但不同時是。</td></tr><tr><td>! $a</td><td>Not（非）</td><td>true，如果 $a 不為 true。</td></tr><tr><td>$a &amp;&amp; $b</td><td>And（與）</td><td>true，如果 $a 和 $b 都為 true。</td></tr><tr><td>$a \</td><td>\</td><td>$b</td><td>Or（或）</td><td>true，如果 $a 或 $b 任一為 true。</td></tr></tbody></table></div><hr><h3 id="字符串運算符"><a href="#字符串運算符" class="headerlink" title="字符串運算符"></a>字符串運算符</h3><p>有兩個字符串（string）運算符。第一個是連接運算符（“.”），它返回其左右參數連接後的字符串。第二個是連接賦值運算符（“.=”），它將右邊參數附加到左邊的參數之後。</p><p>範例程式碼</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$a</span> . <span class="string">&quot;World!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>; <span class="comment">// output &quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="variable">$a</span> .= <span class="string">&quot;World!&quot;</span>;     <span class="comment">// output &quot;Hello World!&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="數組運算符"><a href="#數組運算符" class="headerlink" title="數組運算符"></a>數組運算符</h3><div class="table-container"><table><thead><tr><th>例子</th><th>名稱</th><th>结果</th></tr></thead><tbody><tr><td>$a + $b</td><td>聯合</td><td>$a 和 $b 的联合。</td></tr><tr><td>$a == $b</td><td>相等</td><td>如果 $a 和 $b 具有相同的键／值，則為 true。</td></tr><tr><td>$a === $b</td><td>全等</td><td>如果 $a 和 $b 具有相同的键／值，並且順序和類型都相同則為 true。</td></tr><tr><td>$a != $b</td><td>不等於</td><td>如果 $a 不等於 $b 則為 true。</td></tr><tr><td>$a &lt;&gt; $b</td><td>不等於</td><td>如果 $a 不等於 $b 則為 true。</td></tr><tr><td>$a !== $b</td><td>不相等</td><td>如果 $a 不全等於 $b 則為 true。</td></tr></tbody></table></div><p>如果是運用運算符將數組相加，會把加號右邊的附加到加號左邊數組，<br>兩個數組中都有的鍵名，則只用左邊數組中的，右邊的被忽略</p><p>以下簡單範例示範:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;banana&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;strawberry&quot;</span>, <span class="string">&quot;c&quot;</span> =&gt; <span class="string">&quot;cherry&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> + <span class="variable">$b</span>; <span class="comment">// Union of $a and $b</span></span><br><span class="line">var_dump(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$b</span> + <span class="variable">$a</span>; <span class="comment">// Union of $b and $a</span></span><br><span class="line">var_dump(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出:</span></span><br><span class="line"><span class="comment">// array(3) &#123;</span></span><br><span class="line"><span class="comment">//   [&quot;a&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(5) &quot;apple&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;b&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(6) &quot;banana&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;c&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(6) &quot;cherry&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// array(3) &#123;</span></span><br><span class="line"><span class="comment">//   [&quot;a&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(4) &quot;pear&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;b&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(10) &quot;strawberry&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;c&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(6) &quot;cherry&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下示範比較數組</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">array</span>(<span class="number">1</span> =&gt; <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;0&quot;</span> =&gt; <span class="string">&quot;apple&quot;</span>);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span> == <span class="variable">$b</span>); <span class="comment">// bool(true)</span></span><br><span class="line">var_dump(<span class="variable">$a</span> === <span class="variable">$b</span>); <span class="comment">// bool(false)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="類型運算符"><a href="#類型運算符" class="headerlink" title="類型運算符"></a>類型運算符</h3><p>instanceof 方法用於確定一個 PHP 變數是否屬於某一類 class 的實例，<br>也可以用來確認某一個變數，是否繼承自某一父類或子類的實例。</p><p>以下範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotMyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> MyClass;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span> <span class="keyword">instanceof</span> MyClass);</span><br><span class="line">var_dump(<span class="variable">$a</span> <span class="keyword">instanceof</span> NotMyClass);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// bool(True)</span></span><br><span class="line"><span class="comment">// bool(False)</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-流程控制"><a href="#PHP-流程控制" class="headerlink" title="PHP 流程控制"></a>PHP 流程控制</h2><h3 id="If-Else-判斷句"><a href="#If-Else-判斷句" class="headerlink" title="If Else 判斷句"></a>If Else 判斷句</h3><p>If 可以使用在判斷某條件達成時執行語句，else 則是在不滿該條下執行。</p><p>以下使用範例示範</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span> &gt; <span class="variable">$b</span>)&#123;</span><br><span class="line">console.log(<span class="string">&quot;a win&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">console.log(<span class="string">&quot;b win&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="else-if-判斷句"><a href="#else-if-判斷句" class="headerlink" title="else if 判斷句"></a>else if 判斷句</h3><p>是 if 語句的延伸，可以在原來的 if 表達式值為 false 時執行不同語句。但是和 else 不一樣的是，它僅在 elseif 的條件表達式值為 true 時執行語句。</p><p>以下使用範例示範:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &gt; <span class="variable">$b</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a is bigger than b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$a</span> == <span class="variable">$b</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a is equal to b&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a is smaller than b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="while-迴圈"><a href="#while-迴圈" class="headerlink" title="while 迴圈"></a>while 迴圈</h3><p>只要條件成立就會重複執行語句，表達式在每次開始循環前檢查，所以即使值在循環語句中改變，語句也不會停止執行，值到此次循環結束。</p><p>如果 while 表達式一開始的值為 false，則循環語句一次都不會執行。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span> &lt;= <span class="number">10</span>) &#123; <span class="comment">// i &gt; 10停止迴圈</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>++; <span class="comment">// 先輸出 i 後再加一</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="do-while-迴圈"><a href="#do-while-迴圈" class="headerlink" title="do-while 迴圈"></a>do-while 迴圈</h3><p>和 while 迴圈相似，差別在於表達式的檢查是在循環結束時才檢查，所以 do-while 語句一定會執行循環語句一次。</p><p>以下範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125; <span class="keyword">while</span>(<span class="variable">$i</span>&lt;<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>剛好執行一次後停下，因為條件不符合。</p><hr><h3 id="for-迴圈"><a href="#for-迴圈" class="headerlink" title="for 迴圈"></a>for 迴圈</h3><p>for 迴圈的語法是:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (expr1; expr2; expr3)</span><br><span class="line"></span><br><span class="line">    statement</span><br></pre></td></tr></table></figure><p>expr1:此表達式會在執行前，無條件執行一次。</p><p>expr2:在每次循環開始前求值。如果值為 true，則繼續循環，執行 statement 的循環語句。如果值為 false，則終止循環。</p><p>expr3:在循環之後，賦值(並執行)</p><p>以下所有範例為顯示 1~10 數字:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* example 1 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">10</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* example 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; ; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span>　(<span class="variable">$i</span> &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* example 3 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (;;)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* example 4 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>, <span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">10</span>; <span class="variable">$j</span> += <span class="variable">$i</span>, <span class="keyword">print</span> <span class="variable">$i</span>, <span class="variable">$i</span>++);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><p>foreach 語法結構提供了可以遍歷 array 的簡單方式，foreach 只能用於 array 和 object，用於其他數據類型的變數，會發出錯誤。</p><p>foreach 語法如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foreach (iterable_expression as $value)</span><br><span class="line">statement</span><br><span class="line"></span><br><span class="line">foreach (iterable_expression as $key =&gt; $value)</span><br><span class="line">statement</span><br></pre></td></tr></table></figure><p>第一種格式遍歷，會將 iterable_expression 內的值賦予給$value。</p><p>第二種格式遍歷與第一種相似，但會在每次循環將當前的鍵值賦予給$key。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* foreach example 1: value only */</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;value = <span class="subst">$value</span> \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* foreach example 2: key and value */</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;joe&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cel&quot;</span> =&gt; <span class="number">1234567</span>,</span><br><span class="line">    <span class="string">&quot;address&quot;</span> =&gt; <span class="string">&quot;Taiwan&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$key</span> =&gt; <span class="subst">$value</span> \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* foreach example 3: dynamic arrays */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>) <span class="keyword">as</span> <span class="variable">$v</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用 list() 給嵌套的數組解包</p><p>可以遍歷一個數組的數組並且把嵌套的數組解包到循環變量中，只需將 list() 作為值提供。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = [</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="keyword">list</span>(<span class="variable">$a</span>, <span class="variable">$b</span>)) &#123;</span><br><span class="line">    <span class="comment">// $a contains the first element of the nested array,</span></span><br><span class="line">    <span class="comment">// and $b contains the second element.</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;A: <span class="subst">$a</span>; B: <span class="subst">$b</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>範例輸出:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A: 1; B: 2</span><br><span class="line">A: 3; B: 4</span><br></pre></td></tr></table></figure><p>list() 中的單元可以少於嵌套數組的，此時多出來的數組單元將被忽略，如果 list 中單元多於嵌套數組，則會報錯：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = [</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="keyword">list</span>(<span class="variable">$a</span>)) &#123;</span><br><span class="line">    <span class="comment">// Note that there is no $b here.</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;A: <span class="subst">$a</span>;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A: 1;</span><br><span class="line">A: 3;</span><br></pre></td></tr></table></figure><hr><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>break 結束當前 for，foreach，while，do-while 或者 switch 結構的執行。</p><p>break 可以接受一個可選參數，來決定要跳出幾層迴圈。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>, <span class="string">&#x27;stop&#x27;</span>, <span class="string">&#x27;five&#x27;</span>);</span><br><span class="line"><span class="comment">// 使用each() 和list() 結合用來遍歷數組</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">list</span> (, <span class="variable">$val</span>) = each(<span class="variable">$arr</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$val</span> == <span class="string">&#x27;stop&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;    <span class="comment">/* You could also write &#x27;break 1;&#x27; here. */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$val</span>&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用可選参数 */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (++<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;At 5&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span> <span class="number">1</span>;  <span class="comment">/* 只退出 switch. */</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;At 10; quitting&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span> <span class="number">2</span>;  <span class="comment">/* 退出 switch 和 while 循环 */</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p>continue 在循環結構用用來跳過本次循環中剩餘的代碼並在條件求值為真時開始執行下一次循環。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span>&lt;<span class="number">5</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$i</span>==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$i</span>\n&quot;</span>;  <span class="comment">// outputs: 1 3 4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>switch 語句類似於具有同一個表達式的一系列 if 語句。很多情況下需要把同一個變數（或表達式）與很多不同的值比較，並根據它等於哪個值來執行不同的代碼。</p><p>以下為範例，利用 if/else if 和 switch 實現不同方法實現相同的事:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;i equals 0&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;i equals 1&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;i equals 2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 0&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 1&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 2&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一個 case 的特例是 default。它匹配了任何和其它 case 都不匹配的情況。例如：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 0&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 1&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 2&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i is not equal to 0, 1 or 2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="match"><a href="#match" class="headerlink" title="match"></a>match</h3><p>與 switch 語句類似， match 表達式具有與多個備選方案進行比較的主題表達式，與 switch 不同，它將計算為一個很像三元表達式的值。與 switch 不同的是，比較的是強型別相等檢查 (\=\==) 而不是弱型別相等檢查 (==)。匹配表達式從 PHP 8.0.0 開始可用。</p><p>範例如下:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$age</span> = <span class="number">23</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="keyword">match</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="variable">$age</span> &gt;= <span class="number">65</span> =&gt; <span class="string">&#x27;senior&#x27;</span>,</span><br><span class="line">    <span class="variable">$age</span> &gt;= <span class="number">25</span> =&gt; <span class="string">&#x27;adult&#x27;</span>,</span><br><span class="line">    <span class="variable">$age</span> &gt;= <span class="number">18</span> =&gt; <span class="string">&#x27;young adult&#x27;</span>,</span><br><span class="line">    <span class="keyword">default</span> =&gt; <span class="string">&#x27;kid&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs:</span></span><br><span class="line"><span class="comment">// string(11) &quot;young adult&quot;</span></span><br><span class="line"><span class="comment">// young adult</span></span><br></pre></td></tr></table></figure><hr><h3 id="declare"><a href="#declare" class="headerlink" title="declare"></a>declare</h3><blockquote><p>declare 不是一個函數，算是一個語言結構</p></blockquote><p>declare 用來設定一段 code 的執行指令。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> (directive)</span><br><span class="line">statement</span><br></pre></td></tr></table></figure><p>directive 的部分允許設定 declare 代碼段的行為。</p><p>如果 declare 語句後面沒有括號，則該指令適用於文件中的其餘代碼。<br>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 兩個相等：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以這樣用：</span></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// 這裡寫腳本</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以這樣用：</span></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 這裡寫腳本</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>declare 指令是在文件編譯時處理的，所以指令只接受字面量的值。 無法使用變量和常量。下面為範例程式碼:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 有效程式碼：</span></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 無效，無法指定常量：</span></span><br><span class="line"><span class="keyword">const</span> TICK_VALUE = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">declare</span>(ticks=TICK_VALUE);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以聲明三個指令：ticks,encoding 和 strict_types.</p><p>ticks 每次執行指定數量(N)可計時的指令時，該指令都會發送一個 tick 事件。可以使用 register_tick_function() ，它會在每次 event 事件觸發時運行。</p><p>不是所有語句都可計時。通常條件表達式和參數表達式都不可計時。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每次 tick 事件都會調用此函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick_handler</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;tick_handler() called\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">register_tick_function(<span class="string">&#x27;tick_handler&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="variable">$a</span> += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">print</span>(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>該 encoding 指令用於指示文件使用的字符編碼。它不能用於塊，它必須應用於整個文件。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">declare</span>(encoding=<span class="string">&#x27;ISO-8859-1&#x27;</span>);</span><br><span class="line"><span class="comment">// code here</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>當 strict_types 指令設置，錯誤類型傳遞到函數參數時不會被強制轉換為正確的類型，而是拋出致命錯誤。</p><p>範例如下:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正常情況下</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span>, <span class="keyword">int</span> <span class="variable">$b</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(add(<span class="number">1.0</span>, <span class="number">1.0</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="comment">// int(2)</span></span><br></pre></td></tr></table></figure><p>當使用 strict_types 後，變成強型別</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);    <span class="comment">//加入这句</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span>, <span class="keyword">int</span> <span class="variable">$b</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(add(<span class="number">1.0</span>, <span class="number">1.0</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拋出TypeError:必須為integer整數</span></span><br></pre></td></tr></table></figure><hr><h3 id="return"><a href="#return" class="headerlink" title="return"></a>return</h3><p>return 將程序控制返還給調用模塊。將在調用模塊中執行的下一句表達式中繼續。</p><p>如果在一個函數中調用 return 語句，將立即結束此函數的執行並將它的參數作為函數的值返回。 return 也會終止 eval() 語句或者腳本文件的執行</p><p>eval(): 把字符串作為 PHP 代碼執行</p><hr><h3 id="require"><a href="#require" class="headerlink" title="require"></a>require</h3><p>require 和 include 幾乎完全一樣，除了處理失敗的方式不同之外。 require 在出錯時產生 E_COMPILE_ERROR 級別的錯誤。換句話說將導致腳本中止而 include 只產生警告（E_WARNING），腳本會繼續運行。</p><hr><h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><p>include 語句包含並運行指定文件。</p><p>以下也適用於 require。</p><p>被包含文件先按參數給出的路徑尋找，如果沒有給出目錄（只有文件名）時則按照 include_path 指定的目錄尋找。如果在 include_path 下沒找到該文件則 include 最後才在調用腳本文件所在的目錄和當前工作目錄下尋找。如果最後仍未找到文件則 include 結構會發出一條警告；這一點和 require 不同，後者會發出一個致命錯誤。</p><p>基本 include 用法:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">vars.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$color</span> = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"><span class="variable">$car</span> = <span class="string">&#x27;vovlo&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">test.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;A <span class="subst">$color</span> <span class="subst">$car</span>&quot;</span>; <span class="comment">// A</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;vars.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;A <span class="subst">$color</span> <span class="subst">$car</span>&quot;</span>; <span class="comment">// A red vovlo</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>include 和 return 語句</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span>.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$var</span> = <span class="string">&#x27;PHP&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$var</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">noreturn.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$var</span> = <span class="string">&#x27;PHP&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">testreturns.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">include</span> <span class="string">&#x27;return.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$foo</span>; <span class="comment">// 輸出 &#x27;PHP&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">include</span> <span class="string">&#x27;noreturn.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$bar</span>; <span class="comment">// 輸出 1(因為成功返回true = 1)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="require-once"><a href="#require-once" class="headerlink" title="require_once"></a>require_once</h3><p>require_once 語句和 require 語句完全相同，唯一區別是 PHP 會檢查該文件是否已經被包含過，如果是則不會再次包含。</p><hr><h3 id="include-once"><a href="#include-once" class="headerlink" title="include_once"></a>include_once</h3><p>include_once 語句在腳本執行期間包含並運行指定文件。此行為和 include 語句類似，唯一區別是如果該文件中已經被包含過，則不會再次包含，且 include_once 會返回 true。如同此語句名字暗示的那樣，該文件只會包含一次。 include_once 可以用於在腳本執行期間同一個文件有可能被包含超過一次的情況下，想確保它只被包含一次以避免函數重定義，變量重新賦值等問題。</p><h2 id="PHP-函數"><a href="#PHP-函數" class="headerlink" title="PHP 函數"></a>PHP 函數</h2><h3 id="自定義函數"><a href="#自定義函數" class="headerlink" title="自定義函數"></a>自定義函數</h3><p>函數可用以下語法來定義</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$arg_1</span>, <span class="variable">$arg_2</span>, <span class="comment">/* ..., */</span> <span class="variable">$arg_n</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Example function.\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$retval</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>函數不需要在使用之前被定義，除非是函數是有條件被定義時，才必須在使用前定義</p><p>舉以下範例</p><ol><li>有條件的函數:</li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$makefoo</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不能在此處調用foo()函數，</span></span><br><span class="line"><span class="comment"> 因為它還不存在，但可以調用bar()函數。*/</span></span><br><span class="line"></span><br><span class="line">bar();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$makefoo</span>) &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I don&#x27;t exist until program execution reaches me.\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 現在可以安全調用函數 foo()</span></span><br><span class="line"><span class="comment">   因為 $makefoo 值為真true */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$makefoo</span>) foo();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;I exist immediately upon program start.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol><li>函數中的函數</li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I don&#x27;t exist until foo() is called.\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 現在還不能調用 bar() 函數，因為它還不存在 */</span></span><br><span class="line"></span><br><span class="line">foo();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 現在可以調用 bar() 函數了，因為 foo() 函數的執行使得 bar() 函數變為已定義的函數 */</span></span><br><span class="line"></span><br><span class="line">bar();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>:::warning<br>PHP 中的所有函數和類都具有全局作用域，可以定義在一個函數之內而在之外調用，反之亦然。<br>PHP 不支持函數重載，也不可能取消定義或者重定義已聲明的函數。<br>:::</p><p>還有遞迴函數，也就是自己呼叫自己</p><p>舉個費氏數列的例子(從 0,1 開始，後面的數是前兩個數相加)</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params"><span class="variable">$n</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span> == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> fib(<span class="variable">$n</span>-<span class="number">1</span>) + fib(<span class="variable">$n</span> - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">5</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> fib(<span class="string">&quot;<span class="subst">$i</span> &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// 0,1,1,2,3,5</span></span><br></pre></td></tr></table></figure><p>:::danger<br>注意: 但是要避免遞歸函數／方法調用超過 100-200 層，因為可能會使堆積崩潰從而使當前腳本終止。無限遞歸可視為編程錯誤<br>:::</p><hr><h3 id="函數的參數"><a href="#函數的參數" class="headerlink" title="函數的參數"></a>函數的參數</h3><p>通過給予函數參數，傳遞訊息給函數，可以放入多個參數用逗號分隔，也可以設置參數默認的值。</p><h4 id="1-向函數傳遞-array"><a href="#1-向函數傳遞-array" class="headerlink" title="1. 向函數傳遞 array:"></a>1. 向函數傳遞 array:</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">takes_array</span>(<span class="params"><span class="variable">$nums</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;$nums[0] + $nums[1] = &#x27;</span>, <span class="variable">$nums</span>[<span class="number">0</span>] + <span class="variable">$nums</span>[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 php8 開始參數尾巴逗號是會被忽略的</p><h4 id="2-使用尾巴逗號"><a href="#2-使用尾巴逗號" class="headerlink" title="2. 使用尾巴逗號"></a>2. 使用尾巴逗號</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">takes_many_args</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$first_name</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$last_name</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$age</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$gender</span> = <span class="number">1</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$cellphone</span> = <span class="literal">null</span>, // 在 <span class="number">8.0</span>.<span class="number">0</span> 之前，尾部逗號是不允许的。</span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>從 PHP 8.0.0 開始，不推薦在可選參數之後傳遞強制參數。 這通常可以通過刪除默認值來解決。 此規則的一個例外是 Type $param = null 形式的參數，其中 null 默認值使類型隱式可為空。 這種用法仍然被允許，但建議改用顯式可為空類型。</p><h4 id="3-在強制參數之後傳遞可選參數"><a href="#3-在強制參數之後傳遞可選參數" class="headerlink" title="3. 在強制參數之後傳遞可選參數"></a>3. 在強制參數之後傳遞可選參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$a</span> = [], <span class="variable">$b</span></span>) </span>&#123;&#125; <span class="comment">// 之前</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;&#125;      <span class="comment">// 之後</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">A <span class="variable">$a</span> = <span class="literal">null</span>, <span class="variable">$b</span></span>) </span>&#123;&#125; <span class="comment">// 同時可用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">?A <span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;&#125;       <span class="comment">// 官方推薦</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-在函數中使用默認參數"><a href="#4-在函數中使用默認參數" class="headerlink" title="4. 在函數中使用默認參數"></a>4. 在函數中使用默認參數</h4><p>PHP 還允許使用數組 array 和特殊類型 null 作為默認參數。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makecoffee</span>(<span class="params"><span class="variable">$type</span> = <span class="string">&quot;cappuccino&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Making a cup of <span class="subst">$type</span>.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> makecoffee();</span><br><span class="line"><span class="keyword">echo</span> makecoffee(<span class="literal">null</span>);</span><br><span class="line"><span class="keyword">echo</span> makecoffee(<span class="string">&quot;espresso&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Making a cup of cappuccino.</span></span><br><span class="line"><span class="comment">// Making a cup of .</span></span><br><span class="line"><span class="comment">// Making a cup of espresso.</span></span><br></pre></td></tr></table></figure><h4 id="5-函數默認參數的不正確用法"><a href="#5-函數默認參數的不正確用法" class="headerlink" title="5. 函數默認參數的不正確用法"></a>5. 函數默認參數的不正確用法</h4><p>默認值必須是常量表達式，不能是，如變量，類成員，或者函數調用等。 注意當使用默認參數時，任何默認參數必須放在任何非默認參數的右側；否則，函數將不會按照預期的情況工作。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeyogurt</span>(<span class="params"><span class="variable">$type</span> = <span class="string">&quot;acidophilus&quot;</span>, <span class="variable">$flavour</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Making a bowl of <span class="subst">$type</span> <span class="subst">$flavour</span>.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> makeyogurt(<span class="string">&quot;raspberry&quot;</span>);   <span class="comment">// won&#x27;t work as expected</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Warning: Missing argument 2 in call to makeyogurt()</span></span><br></pre></td></tr></table></figure><h4 id="6-函數默認參數正確用法"><a href="#6-函數默認參數正確用法" class="headerlink" title="6. 函數默認參數正確用法"></a>6. 函數默認參數正確用法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeyogurt</span>(<span class="params"><span class="variable">$flavour</span>, <span class="variable">$type</span> = <span class="string">&quot;acidophilus&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Making a bowl of <span class="subst">$type</span> <span class="subst">$flavour</span>.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> makeyogurt(<span class="string">&quot;raspberry&quot;</span>);   <span class="comment">// works as expected</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Making a bowl of acidophilus raspberry.</span></span><br></pre></td></tr></table></figure><h4 id="7-使用-…-來訪問變量參數"><a href="#7-使用-…-來訪問變量參數" class="headerlink" title="7. 使用 … 來訪問變量參數"></a>7. 使用 … 來訪問變量參數</h4><p>PHP 在用戶自定義函數中支持可變數量的參數列表。由 … 語法實現。</p><p>包含 … 的參數，會轉換為指定參數變量的一個數組(類似字典)，以下示例：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...<span class="variable">$numbers</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$acc</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$numbers</span> <span class="keyword">as</span> <span class="variable">$n</span>) &#123;</span><br><span class="line">        <span class="variable">$acc</span> += <span class="variable">$n</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$acc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10</span></span><br></pre></td></tr></table></figure><h4 id="8-使用…來傳遞參數"><a href="#8-使用…來傳遞參數" class="headerlink" title="8. 使用…來傳遞參數"></a>8. 使用…來傳遞參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> add(...[<span class="number">1</span>, <span class="number">2</span>]).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">echo</span> add(...<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h4 id="9-輸入提示的變量參數"><a href="#9-輸入提示的變量參數" class="headerlink" title="9. 輸入提示的變量參數"></a>9. 輸入提示的變量參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">total_intervals</span>(<span class="params"><span class="variable">$unit</span>, DateInterval ...<span class="variable">$intervals</span></span>) </span>&#123; <span class="comment">// 必須傳遞DateInterval類的參數</span></span><br><span class="line">    <span class="variable">$time</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$intervals</span> <span class="keyword">as</span> <span class="variable">$interval</span>) &#123;</span><br><span class="line">        <span class="variable">$time</span> += <span class="variable">$interval</span>-&gt;<span class="variable">$unit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$time</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> DateInterval(<span class="string">&#x27;P1D&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> DateInterval(<span class="string">&#x27;P2D&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> total_intervals(<span class="string">&#x27;d&#x27;</span>, <span class="variable">$a</span>, <span class="variable">$b</span>).<span class="string">&#x27; days&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This will fail, since null isn&#x27;t a DateInterval object.</span></span><br><span class="line"><span class="keyword">echo</span> total_intervals(<span class="string">&#x27;d&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// 3 days</span></span><br><span class="line"><span class="comment">// Catchable fatal error: Argument 2 passed to total_intervals() must be an instance of DateInterval,</span></span><br><span class="line"><span class="comment">// null given, called in - on line 14 and defined in - on line 2</span></span><br></pre></td></tr></table></figure><h4 id="命名函數"><a href="#命名函數" class="headerlink" title="命名函數"></a>命名函數</h4><p>PHP 8.0.0 開始引入了命名參數作為現有位置參數的擴展。命名參數允許根據參數名而不是參數位置向函數傳參。這使得參數的含義自成體系，參數與順序無關，並允許任意跳過默認值。</p><p>命名參數通過在參數名前加上冒號來傳遞。允許使用保留關鍵字作為參數名。參數名必須是一個標識符，不允許動態指定。</p><h4 id="10-命名參數語法"><a href="#10-命名參數語法" class="headerlink" title="10. 命名參數語法"></a>10. 命名參數語法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"><span class="variable">$paramName</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$paramName</span>;</span><br><span class="line">&#125;</span><br><span class="line">myFunction(paramName: <span class="variable">$value</span>);  <span class="comment">// $value指定給予paramName這個參數</span></span><br><span class="line">array_foobar(<span class="keyword">array</span>: <span class="variable">$value</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// NOT supported.</span></span><br><span class="line">function_name(<span class="variable">$variableStoringParamName</span>: <span class="variable">$value</span>); <span class="comment">// 不能動態指定</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="11-通過位置傳參與命名參數的對比"><a href="#11-通過位置傳參與命名參數的對比" class="headerlink" title="11. 通過位置傳參與命名參數的對比"></a>11. 通過位置傳參與命名參數的對比</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 使用順序傳遞：</span></span><br><span class="line">array_fill(<span class="number">0</span>, <span class="number">100</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用命名參數：</span></span><br><span class="line">array_fill(start_index: <span class="number">0</span>, count: <span class="number">100</span>, value: <span class="number">50</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>順序不重要，下面輸出跟上面一樣</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">array_fill(value: <span class="number">50</span>, count: <span class="number">100</span>, start_index: <span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="12-不可多次傳遞給同一個參數"><a href="#12-不可多次傳遞給同一個參數" class="headerlink" title="12. 不可多次傳遞給同一個參數"></a>12. 不可多次傳遞給同一個參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$param</span></span>) </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line">foo(param: <span class="number">1</span>, param: <span class="number">2</span>);</span><br><span class="line"><span class="comment">// Error: Named parameter $param overwrites previous argument</span></span><br><span class="line">foo(<span class="number">1</span>, param: <span class="number">2</span>);</span><br><span class="line"><span class="comment">// Error: Named parameter $param overwrites previous argument</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="返回值-return"><a href="#返回值-return" class="headerlink" title="返回值 return"></a>返回值 return</h3><p>值通過使用可選的返回語句返回。可以返回包括數組和對象的任意類型。返回語句會立即中止函數的運行，並且將控制權交回調用該函數的代碼行</p><p>:::warning<br>如果省略了 return，則返回值為 null。<br>:::</p><h4 id="1-基礎語法"><a href="#1-基礎語法" class="headerlink" title="1. 基礎語法"></a>1. 基礎語法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params"><span class="variable">$num</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span> * <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> square(<span class="number">5</span>);   <span class="comment">// outputs &#x27;25&#x27;.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-返回一個數組以得到多個返回值"><a href="#2-返回一個數組以得到多個返回值" class="headerlink" title="2. 返回一個數組以得到多個返回值"></a>2. 返回一個數組以得到多個返回值</h4><p>函數不能返回多個值，但可以通過返回一個數組來得到類似的效果。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">small_numbers</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用短數組語法將数组中的值賦给一組變數</span></span><br><span class="line">[<span class="variable">$zero</span>, <span class="variable">$one</span>, <span class="variable">$two</span>] = small_numbers();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 7.1.0 之前，唯一相等的選擇是使用 list() 結構</span></span><br><span class="line"><span class="keyword">list</span>(<span class="variable">$zero</span>, <span class="variable">$one</span>, <span class="variable">$two</span>) = small_numbers();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-返回一個引用"><a href="#3-返回一個引用" class="headerlink" title="3. 返回一個引用"></a>3. 返回一個引用</h4><p>從函數返回一個引用，必須在函數聲明和指派返回值給一個變量時都使用引用運算符 &amp;</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">returns_reference</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$someref</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$newref</span> =&amp; returns_reference();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="可變函數"><a href="#可變函數" class="headerlink" title="可變函數"></a>可變函數</h3><p>PHP 支持可變函數的概念。就是說如果一個變量名後有圓括號，PHP 就會先去尋找這個變數名稱的函數執行。可變函數可以用來實現包括回調函數，以及函數表在內的一些用途。</p><p>來看看範例</p><h4 id="1-可變函數示例"><a href="#1-可變函數示例" class="headerlink" title="1. 可變函數示例"></a>1. 可變函數示例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;In foo()&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="variable">$arg</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;In bar(); argument was &#x27;<span class="subst">$arg</span>&#x27;.&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用名為 echo 的函數</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">echoit</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;foo&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>();        <span class="comment">// This calls foo()</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;bar&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>(<span class="string">&#x27;test&#x27;</span>);  <span class="comment">// This calls bar()</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;echoit&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>(<span class="string">&#x27;test&#x27;</span>);  <span class="comment">// This calls echoit()</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-可變方法範例"><a href="#2-可變方法範例" class="headerlink" title="2. 可變方法範例"></a>2. 可變方法範例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Variable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$name</span> = <span class="string">&#x27;Bar&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$name</span>(); <span class="comment">// This calls the Bar() method</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;This is Bar&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="variable">$funcname</span> = <span class="string">&quot;Variable&quot;</span>;</span><br><span class="line"><span class="variable">$foo</span>-&gt;<span class="variable">$funcname</span>();  <span class="comment">// This calls $foo-&gt;Variable()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-Variable-方法和靜態屬性範例"><a href="#3-Variable-方法和靜態屬性範例" class="headerlink" title="3. Variable 方法和靜態屬性範例"></a>3. Variable 方法和靜態屬性範例</h4><p>當調用靜態方法時，函數調用要比靜態屬性優先</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$variable</span> = <span class="string">&#x27;static property&#x27;</span>;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Variable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Method Variable called&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Foo::<span class="variable">$variable</span>; <span class="comment">// This prints &#x27;static property&#x27;. It does need a $variable in this scope.</span></span><br><span class="line"><span class="variable">$variable</span> = <span class="string">&quot;Variable&quot;</span>;</span><br><span class="line">Foo::<span class="variable">$variable</span>();  <span class="comment">// This calls $foo-&gt;Variable() reading $variable in this scope.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-複雜的可調用對象"><a href="#4-複雜的可調用對象" class="headerlink" title="4. 複雜的可調用對象"></a>4. 複雜的可調用對象</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;bar\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;baz\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="keyword">array</span>(<span class="string">&quot;Foo&quot;</span>, <span class="string">&quot;bar&quot;</span>);</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// prints &quot;bar&quot;</span></span><br><span class="line"><span class="variable">$func</span> = <span class="keyword">array</span>(<span class="keyword">new</span> Foo, <span class="string">&quot;baz&quot;</span>);</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// prints &quot;baz&quot;</span></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&quot;Foo::bar&quot;</span>;</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// prints &quot;bar&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 這樣可是會出錯的哦，沒有先實體化類別</span></span><br><span class="line"><span class="variable">$func</span> = <span class="keyword">array</span>(<span class="string">&quot;Foo&quot;</span>, <span class="string">&quot;baz&quot;</span>);</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// Uncaught Error: Non-static method Foo::baz() cannot be called statically in ....</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="内部（内置）函数"><a href="#内部（内置）函数" class="headerlink" title="内部（内置）函数"></a>内部（内置）函数</h3><p>PHP 有很多標準的函數和結構。還有一些函數需要和特定地 PHP 擴展模塊一起編譯，否則在使用它們的時候就會得到一個致命的“未定義函數”錯誤。</p><p>例如要連接 MySQL，要使用 mysqli_connect() 函數，就需要在編譯 PHP 的時候加上 MySQLi 支持。可以使用 phpinfo() 或者 get_loaded_extensions() 可以得知 PHP 加載了那些擴展庫</p><hr><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>匿名函數（Anonymous functions），也稱作閉包函數（closures），它允許臨時創建一個沒有指定名稱的函數。最經常用作回調函數 callable 參數的值。當然，也有其它應用的情況。</p><h4 id="1-匿名函數範例"><a href="#1-匿名函數範例" class="headerlink" title="1. 匿名函數範例"></a>1. 匿名函數範例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 使用回調執行正則表達式搜索和替換</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace_callback(<span class="string">&#x27;~-([a-z])~&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$match</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strtoupper(<span class="variable">$match</span>[<span class="number">1</span>]);  <span class="comment">// 將所選的變成大寫，從index: 1開始過濾掉原先&quot;-&quot;</span></span><br><span class="line">&#125;, <span class="string">&#x27;hello-world&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出 helloWorld</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>閉包函數也可以作為變量的值來使用。 PHP 會自動把此種表達式轉換成內置類 Closure 的對象實例。把一個 closure 對象賦值給一個變量的方式與普通變量賦值的語法是一樣的，最後也要加上分號 ；</p><h4 id="2-匿名函數變量賦值示例"><a href="#2-匿名函數變量賦值示例" class="headerlink" title="2. 匿名函數變量賦值示例"></a>2. 匿名函數變量賦值示例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$sayHi</span> = <span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello <span class="subst">$name</span>&quot;</span>;</span><br><span class="line">&#125;; <span class="comment">// 記得加上分號</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sayHi</span>(<span class="string">&#x27;joe&#x27;</span>);</span><br><span class="line"><span class="variable">$sayHi</span>(<span class="string">&#x27;cherry&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-從父作用域繼承變數"><a href="#3-從父作用域繼承變數" class="headerlink" title="3. 從父作用域繼承變數"></a>3. 從父作用域繼承變數</h4><p>閉包可以從父作用域中繼承變量。任何此類變量都應該用 use 語言結構傳遞進去。</p><p>PHP 7.1 起，不能傳入此類變量： superglobals(超全局便量)、 $this 或者和參數重名。</p><p>從 PHP 8.0.0 開始，作用域繼承的變量列表可能包含一個尾部的逗號，這個逗號將被忽略</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有 &quot;use&quot; php會不知道這變數從哪來</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 繼承父作用域 $message</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Inherited variable&#x27;s value is from when the function</span></span><br><span class="line"><span class="comment">// is defined, not when called</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="variable">$example</span>();  <span class="comment">// 不會受到改變因為已經在上面先調用了(14行)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Reset message</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Inherit by-reference</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params">&amp;<span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// The changed value in the parent scope</span></span><br><span class="line"><span class="comment">// is reflected inside the function call</span></span><br><span class="line"><span class="comment">// 父作用域更改值，影響函式回調</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Closures can also accept regular arguments</span></span><br><span class="line"><span class="comment">// 閉包可使用常規變數</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$arg</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$arg</span> . <span class="string">&#x27; &#x27;</span> . <span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Notice: Undefined variable: ...</span></span><br><span class="line"><span class="comment">// NULL</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// string(5) &quot;world&quot;</span></span><br><span class="line"><span class="comment">// string(11) &quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><hr><h3 id="箭頭函數"><a href="#箭頭函數" class="headerlink" title="箭頭函數"></a>箭頭函數</h3><p>箭頭函數是更簡潔的匿名函數，都是屬於 Closure 類(閉包)的實現</p><p>箭頭函數的語法為 <code>fn (argument_list) =&gt; expr。</code></p><p>箭頭函數支持與 匿名函數 相同的功能，只是其父作用域的變量總是自動的。 當表達式中使用的變量是在父作用域中定義的，它將被隱式地按值捕獲。</p><p>在下面的例子中，函數 $fn1 和 $fn2 的行為是一樣的</p><h4 id="1-箭頭函數自動捕捉變數的值"><a href="#1-箭頭函數自動捕捉變數的值" class="headerlink" title="1. 箭頭函數自動捕捉變數的值"></a>1. 箭頭函數自動捕捉變數的值</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$y</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fn1</span> = <span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span> + <span class="variable">$y</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相當於 using $y by value:</span></span><br><span class="line"><span class="variable">$fn2</span> = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$y</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$x</span> + <span class="variable">$y</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// var_export -- 輸出或返回一個變量的字串表示</span></span><br><span class="line">var_export(<span class="variable">$fn1</span>(<span class="number">3</span>)); <span class="comment">// 4</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-箭頭函數自動捕捉變量的值，即使在嵌套的情況下"><a href="#2-箭頭函數自動捕捉變量的值，即使在嵌套的情況下" class="headerlink" title="2. 箭頭函數自動捕捉變量的值，即使在嵌套的情況下"></a>2. 箭頭函數自動捕捉變量的值，即使在嵌套的情況下</h4><p>通常在 A 程序執行中，尚未結束前又開始執行 B 程序，B 程序結束後，繼續執行 A 程序，就稱為嵌套。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$z</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$fn</span> = <span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span></span>) =&gt;</span> <span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$y</span></span>) =&gt;</span> <span class="variable">$x</span> * <span class="variable">$y</span> + <span class="variable">$z</span>;</span><br><span class="line"><span class="comment">// 輸出 21</span></span><br><span class="line">var_export(<span class="variable">$fn</span>(<span class="number">5</span>)(<span class="number">4</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-箭頭函數有效用法例子"><a href="#3-箭頭函數有效用法例子" class="headerlink" title="3. 箭頭函數有效用法例子"></a>3. 箭頭函數有效用法例子</h4><p>和匿名函數一樣，箭頭函數語法同樣允許標準的函數聲明，包括參數和返回類型、缺省值、變量，以及通過引用傳遞和返回。以下都是箭頭函數的有效例子。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">fn</span>(<span class="params"></span>): <span class="title">int</span> =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span> = <span class="number">42</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params">&amp;<span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>&amp;(<span class="params"><span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span>, ...<span class="variable">$rest</span></span>) =&gt;</span> <span class="variable">$rest</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-來自外部範圍的值不能在箭頭函數內修改"><a href="#4-來自外部範圍的值不能在箭頭函數內修改" class="headerlink" title="4. 來自外部範圍的值不能在箭頭函數內修改"></a>4. 來自外部範圍的值不能在箭頭函數內修改</h4><p>箭頭函數會自動綁定上下文變量，這相當於對箭頭函數內部使用的每一個變量 $x 執行了一個 use($x)。這意味著不可能修改外部作用域的任何值，若要實現對值的修改，可以使用 匿名函數 來替代。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$fn</span> = <span class="function"><span class="keyword">fn</span>(<span class="params"></span>) =&gt;</span> <span class="variable">$x</span>++; <span class="comment">// 不會影響 x 的值</span></span><br><span class="line"><span class="variable">$fn</span>();</span><br><span class="line">var_export(<span class="variable">$x</span>);  <span class="comment">// 輸出 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="class-類"><a href="#class-類" class="headerlink" title="class 類"></a>class 類</h2><h3 id="class-基本"><a href="#class-基本" class="headerlink" title="class 基本"></a>class 基本</h3><p>每個類的定義都以關鍵字 class 開頭，後面跟著類的名，再一個括號，裡面包含有類的屬性與方法的定義。</p><p>一個類可以包含有屬於自己的 常量，變量（稱為“屬性”）以及函數（稱為“方法”）。</p><p>當要調用內部屬性或方法時可以使用$this，$this 是一個到當前對象的引用。</p><h5 id="1-簡單的類定義"><a href="#1-簡單的類定義" class="headerlink" title="1. 簡單的類定義"></a>1. 簡單的類定義</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 聲明屬性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span> = <span class="string">&#x27;a default value&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">displayVar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;var;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="new"><a href="#new" class="headerlink" title="new"></a>new</h4><p>要創建一個類的實例，必須使用 new 關鍵字。當創建新對象時該對象總是被賦值，除非該對象定義了 構造函數 並且在出錯時拋出了一個 異常。</p><p>構造函數 : 類中的一個特殊函數，當使用 new 操作符創建一個類的實例時，構造函數將會自動調用。當函數與類同名時，這個函數將成為構造函數。如果一個類沒有構造函數，則調用基類的構造函數，如果有的話</p><p>類應在被實例化之前定義（某些情況下則必須這樣）。</p><p>如果在 new 之後跟著的是一個包含有類名的字符串 string，則該類的一個實例被創建。如果該類屬於一個命名空間，則必須使用其完整名稱。</p><p>:::warning<br>如果沒有參數要傳遞給類的構造函數，類名後的括號則可以省略掉。<br>:::</p><h5 id="2-創建實例"><a href="#2-創建實例" class="headerlink" title="2. 創建實例"></a>2. 創建實例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$instance</span> = <span class="keyword">new</span> SimpleClass();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以這樣做：</span></span><br><span class="line"><span class="variable">$className</span> = <span class="string">&#x27;SimpleClass&#x27;</span>;</span><br><span class="line"><span class="variable">$instance</span> = <span class="keyword">new</span> <span class="variable">$className</span>(); <span class="comment">// new SimpleClass()</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-創建新對象"><a href="#3-創建新對象" class="headerlink" title="3. 創建新對象"></a>3. 創建新對象</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNew</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">static</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj1</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">new</span> <span class="variable">$obj1</span>;</span><br><span class="line">var_dump(<span class="variable">$obj1</span> !== <span class="variable">$obj2</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj3</span> = Test::getNew();</span><br><span class="line">var_dump(<span class="variable">$obj3</span> <span class="keyword">instanceof</span> Test);</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj4</span> = Child::getNew();</span><br><span class="line">var_dump(<span class="variable">$obj4</span> <span class="keyword">instanceof</span> Child);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// bool(true)</span></span><br><span class="line"><span class="comment">// bool(true)</span></span><br><span class="line"><span class="comment">// bool(true)</span></span><br></pre></td></tr></table></figure><h4 id="屬性和方法"><a href="#屬性和方法" class="headerlink" title="屬性和方法"></a>屬性和方法</h4><p>類的屬性和方法存在於不同的“命名空間”中，這代表說同一個類的屬性和方法可以使用同樣的名字。在類中訪問屬性和調用方法使用同樣的操作符，那到底是訪問一個屬性還是調用一個方法，取決於你的上下文，即用法是變數的訪問還是函數的調用。</p><h5 id="4-訪問類屬性-vs-調用類方法"><a href="#4-訪問類屬性-vs-調用類方法" class="headerlink" title="4. 訪問類屬性 vs. 調用類方法"></a>4. 訪問類屬性 vs. 調用類方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bar</span> = <span class="string">&#x27;property&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;method&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;bar, PHP_EOL, <span class="variable">$obj</span>-&gt;bar(), PHP_EOL; <span class="comment">// PHP_EOL: php換行符號</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// property</span></span><br><span class="line"><span class="comment">// method</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-類屬性被賦值為匿名函數時的調用示例"><a href="#5-類屬性被賦值為匿名函數時的調用示例" class="headerlink" title="5. 類屬性被賦值為匿名函數時的調用示例"></a>5. 類屬性被賦值為匿名函數時的調用示例</h5><p>如果你的類屬性被分配給一個 匿名函數 你將無法直接調用它。因為訪問 class 類屬性的優先級要更高，在此場景下需要用括號括起來使用。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bar</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;bar = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$obj</span>-&gt;bar)(), PHP_EOL; <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><h4 id="extends-繼承"><a href="#extends-繼承" class="headerlink" title="extends 繼承"></a>extends 繼承</h4><p>一個類可以在聲明中用 extends 關鍵字繼承另一個類的方法和屬性。 PHP 不支持多重繼承，一個類只能繼承一個基類。</p><p>被繼承的方法和屬性可以通過用同樣的名字重新聲明被覆蓋。但是如果父類定義方法時使用了 final 關鍵字，則該方法不可被覆蓋。可以通過 parent:: 來訪問被覆蓋的方法或屬性</p><h5 id="6-簡單的類繼承範例"><a href="#6-簡單的類繼承範例" class="headerlink" title="6. 簡單的類繼承範例"></a>6. 簡單的類繼承範例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExtendClass</span> <span class="keyword">extends</span> <span class="title">SimpleClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 同樣名稱的方法，將會覆蓋父類的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">displayVar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Extending class\n&quot;</span>;</span><br><span class="line">        <span class="built_in">parent</span>::displayVar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$extended</span> = <span class="keyword">new</span> ExtendClass();</span><br><span class="line"><span class="variable">$extended</span>-&gt;displayVar();</span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Extending class</span></span><br><span class="line"><span class="comment">// a default value</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="簽名兼容性規則"><a href="#簽名兼容性規則" class="headerlink" title="簽名兼容性規則"></a>簽名兼容性規則</h4><p>當覆蓋（override）方法時，簽名必須兼容父類方法。否則會導致 Fatal 錯誤（PHP 8.0.0 之前是 E_WARNING 級錯誤）。兼容簽名是指：遵守協變與逆變規則； 強制參數可以改為可選參數；新參數為可選參數。這就是著名的里氏替換原則（Liskov Substitution Principle），簡稱 LSP。不過構造器和 私有（private）方法不需要遵循簽名兼容規則， 哪怕簽名不匹配也不會導致 Fatal(致命) 錯誤</p><h5 id="7-兼容子類方法"><a href="#7-兼容子類方法" class="headerlink" title="7. 兼容子類方法"></a>7. 兼容子類方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Valid\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Extend1</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span> = <span class="number">5</span></span>) // 新參數為可選參數</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::foo(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Extend2</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span>, <span class="variable">$b</span> = <span class="number">5</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::foo(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$extended1</span> = <span class="keyword">new</span> Extend1();</span><br><span class="line"><span class="variable">$extended1</span>-&gt;foo();</span><br><span class="line"><span class="variable">$extended2</span> = <span class="keyword">new</span> Extend2();</span><br><span class="line"><span class="variable">$extended2</span>-&gt;foo(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// Valid</span></span><br><span class="line"><span class="comment">// Valid</span></span><br></pre></td></tr></table></figure><h5 id="8-子類方法移除參數后，導致-Fatal-致命-錯誤"><a href="#8-子類方法移除參數后，導致-Fatal-致命-錯誤" class="headerlink" title="8.子類方法移除參數后，導致 Fatal(致命) 錯誤"></a>8.子類方法移除參數后，導致 Fatal(致命) 錯誤</h5><p>演示子類與父類方法不兼容的例子：通過移除參數、修改可選參數為必填參數。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span> = <span class="number">5</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Valid\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Extend</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::foo(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 聲明必須與Base class 的foo方法兼容</span></span><br><span class="line"><span class="comment">//Fatal error: Declaration of Extend::foo() must be compatible with Base::foo(int $a = 5)</span></span><br></pre></td></tr></table></figure><h4 id="class"><a href="#class" class="headerlink" title="::class"></a>::class</h4><p>關鍵詞 class 也可用於類名的解析。使用 ClassName::class 可以獲取包含類 ClassName 的完全限定名稱。這對使用了 命名空間 的類尤其有用。</p><h5 id="9-類名的解析"><a href="#9-類名的解析" class="headerlink" title="9. 類名的解析"></a>9. 類名的解析</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">NS</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ClassName</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title">echo</span> <span class="title">ClassName</span>::<span class="title">class</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// NS\ClassName</span></span><br></pre></td></tr></table></figure><p>:::warning<br>使用 ::class 解析類名操作會在底層編譯時進行。這意味著在執行該操作時，類還沒有被加載。因此，即使要調用的類不存在，類名也會被展示。在此種場景下，並不會發生錯誤。</p><h5 id="10-解析不存在的類名"><a href="#10-解析不存在的類名" class="headerlink" title="10. 解析不存在的類名"></a>10. 解析不存在的類名</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">print</span> Does\Not\Exist::class;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>輸出: <code>Does\Not\Exist</code><br>:::</p><h5 id="11-類名解析"><a href="#11-類名解析" class="headerlink" title="11. 類名解析"></a>11. 類名解析</h5><p>自 PHP 8.0.0 起，與上述情況不同，此時解析將會在運行時進行。此操作的運行結果和 get_class() 函數一致</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">NS</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ClassName</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$<span class="title">c</span> = <span class="title">new</span> <span class="title">ClassName</span>();</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$c</span>::class;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// NS\ClassName</span></span><br></pre></td></tr></table></figure><h4 id="Nullsafe-方法和屬性"><a href="#Nullsafe-方法和屬性" class="headerlink" title="Nullsafe 方法和屬性"></a>Nullsafe 方法和屬性</h4><p>自 PHP 8.0.0 起，類屬性和方法可以通過”nullsafe” 操作符訪問：除了一處不同，nullsafe 操作符和以上原來的屬性、方法訪問是一致的： 對象引用解析（dereference）為 並且如果是鍊式調用中的一部分，剩餘鏈條會直接跳過。?-&gt;nullnull</p><p>此操作的結果，類似於在每次訪問前使用</p><h5 id="12-Nullsafe-操作符"><a href="#12-Nullsafe-操作符" class="headerlink" title="12. Nullsafe 操作符"></a>12. Nullsafe 操作符</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自 PHP 8.0.0 起可用</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$repository</span>?-&gt;getUser(<span class="number">5</span>)?-&gt;name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上面的code和下面相同</span></span><br><span class="line"><span class="keyword">if</span> (is_null(<span class="variable">$repository</span>)) &#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="literal">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$repository</span>-&gt;getUser(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (is_null(<span class="variable">$user</span>)) &#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$user</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>:::warning<br>注意</p><p>僅當 null 被認為是屬性或方法返回的有效和預期的可能值時，才推薦使用 nullsafe 操作符。如果業務中需要明確指示錯誤，拋出異常會是更好的處理方式。<br>:::</p><hr><h3 id="class-屬性"><a href="#class-屬性" class="headerlink" title="class 屬性"></a>class 屬性</h3><p>類的變量成員叫做“屬性”，或者叫“字段”、“特徵”，在 PHP 文檔統一稱為“屬性”。屬性聲明是由關鍵字 public(公開)，protected(非公開) 或者 private(私有) 開頭，然後跟一個普通的變量聲明來組成。屬性中的變量可以初始化，但是初始化的值必須是常數，這裡的常數是指 PHP 腳本在編譯階段時就可以得到其值，而不依賴於運行時的信息才能求值。</p><p>在類的成員方法裡面，可以用 -&gt;（對象運算符）：$this-&gt;property（其中 property 是該屬性名）這種方式來訪問非靜態屬性。</p><p>靜態屬性則是用 ::（雙冒號）：self::$property 來訪問。</p><p>以下為屬性聲明範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="comment">// 錯誤的屬性聲明</span></span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var1</span> = <span class="string">&#x27;hello &#x27;</span> . <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var2</span> = <span class="string">&lt;&lt;&lt;EOD</span></span><br><span class="line"><span class="string">hello world</span></span><br><span class="line"><span class="string">EOD</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var3</span> = <span class="number">1</span>+<span class="number">2</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var4</span> = <span class="built_in">self</span>::myStaticMethod();</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var5</span> = <span class="variable">$myVar</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 正確的屬性聲明</span></span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var6</span> = myConstant;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var7</span> = <span class="keyword">array</span>(<span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//在 PHP 5.3.0 及之後，下面的聲明也正確</span></span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var8</span> = &lt;&lt;&lt;<span class="string">&#x27;EOD&#x27;</span></span><br><span class="line">hello world</span><br><span class="line">EOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="類常量"><a href="#類常量" class="headerlink" title="類常量"></a>類常量</h3><p>可以把在類中始終保持不變的值定義為常量。在定義和使用常量的時候不需要使用 $ 符號。 常量的值必須是一個定值，不能是變量，類屬性，數學運算的結果或函數調用。</p><p>如何定義和使用類常量，查看以下範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> constant = <span class="string">&#x27;constant value&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showConstant</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="built_in">self</span>::constant . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> MyClass::constant . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&quot;MyClass&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$classname</span>::constant . <span class="string">&quot;\n&quot;</span>; <span class="comment">// 自 5.3.0 起</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> MyClass();</span><br><span class="line"><span class="variable">$class</span>-&gt;showConstant();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>::constant.<span class="string">&quot;\n&quot;</span>; <span class="comment">// 自 PHP 5.3.0 起</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="類的自動加載"><a href="#類的自動加載" class="headerlink" title="類的自動加載"></a>類的自動加載</h3><p>在編寫有關於對象（OOP） 程序時，很多開發者為每個類新建一個 PHP 文件。這會帶來一個煩惱：每個腳本的開頭，都需要包含（include）一個長長的列表（每個類都有個文件）。</p><p>在 PHP 5 中，已經不再需要這樣了。 spl_autoload_register() 函數可以註冊任意數量的自動加載器，當使用尚未被定義的類（class）和接口（interface）時自動去加載。通過註冊自動加載器，腳本引擎在 PHP 出錯失敗前有了最後一個機會加載所需的類。</p><p>:::info<br>儘管 <strong>autoload() 函數也能自動加載類和接口，但更建議使用 spl_autoload_register() 函數。 spl_autoload_register() 提供了一種更加靈活的方式來實現類的自動加載（同一個應用中，可以支持任意數量的加載器，比如第三方庫中的）。因此，不再建議使用 </strong>autoload() 函數，在以後的版本中它可能被棄用<br>:::</p><h5 id="1-自動加載範例"><a href="#1-自動加載範例" class="headerlink" title="1. 自動加載範例"></a>1. 自動加載範例</h5><p>本例嘗試分別從 MyClass1.php 和 MyClass2.php 文件中加載 MyClass1 和 MyClass2 類。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$class_name</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">require_once</span> <span class="variable">$class_name</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span>  = <span class="keyword">new</span> MyClass1();</span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">new</span> MyClass2();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-自動加載在-PHP-5-3-0-中的異常處理"><a href="#2-自動加載在-PHP-5-3-0-中的異常處理" class="headerlink" title="2. 自動加載在 PHP 5.3.0+ 中的異常處理"></a>2. 自動加載在 PHP 5.3.0+ 中的異常處理</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Want to load <span class="subst">$name</span>.\n&quot;</span>;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Unable to load <span class="subst">$name</span>.&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> NonLoadableClass();</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;getMessage(), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Want to load NonLoadableClass.</span></span><br><span class="line"><span class="comment">// Unable to load NonLoadableClass.</span></span><br></pre></td></tr></table></figure><h3 id="構造函數和析構函數"><a href="#構造函數和析構函數" class="headerlink" title="構造函數和析構函數"></a>構造函數和析構函數</h3><h4 id="構造函數"><a href="#構造函數" class="headerlink" title="構造函數"></a>構造函數</h4><p><code>__construct(mixed ...$values = &quot;&quot;): void</code></p><p>PHP 允許開發者在一個類中定義一個方法作為構造函數。具有構造函數的類會在每次創建新對象時先調用此方法，所以非常適合在使用對象之前做一些初始化工作</p><p>:::warning<br>注意: 如果子類中定義了構造函數則不會隱式調用其父類的構造函數。要執行父類的構造函數，需要在子類的構造函數中調用 parent::__construct()。如果子類沒有定義構造函數則會如同一個普通的類方法一樣從父類繼承（假如沒有被定義為 private 的話）。<br>:::</p><h5 id="1-繼承中的構造函數"><a href="#1-繼承中的構造函數" class="headerlink" title="1. 繼承中的構造函數"></a>1. 繼承中的構造函數</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;In BaseClass constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct();</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;In SubClass constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherSubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 繼承 BaseClass 的構造函數</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// In BaseClass constructor</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> BaseClass();</span><br><span class="line"></span><br><span class="line"><span class="comment">// In BaseClass constructor</span></span><br><span class="line"><span class="comment">// In SubClass constructor</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> SubClass();</span><br><span class="line"></span><br><span class="line"><span class="comment">// In BaseClass constructor</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> OtherSubClass();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-構造器函數"><a href="#2-構造器函數" class="headerlink" title="2. 構造器函數"></a>2. 構造器函數</h5><p>因此可以定義任何數量的參數，可以是必選、可以有類型、可以有默認值。構造器的參數放在類名後的括號裡調用。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> <span class="variable">$x</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> <span class="variable">$y</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$x</span>, <span class="keyword">int</span> <span class="variable">$y</span> = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;x = <span class="variable">$x</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;y = <span class="variable">$y</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 兩個參數都傳入</span></span><br><span class="line"><span class="variable">$p1</span> = <span class="keyword">new</span> Point(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">// 僅傳入必填的參數。 $y 會默認為0。</span></span><br><span class="line"><span class="variable">$p2</span> = <span class="keyword">new</span> Point(<span class="number">4</span>);</span><br><span class="line"><span class="comment">// 使用命名參數（PHP 8.0 起）:</span></span><br><span class="line"><span class="variable">$p3</span> = <span class="keyword">new</span> Point(y: <span class="number">5</span>, x: <span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果一個類沒有構造函數，以及構造函數的參數不是必填項時，括號就可以省略。</p><h4 id="析構函數"><a href="#析構函數" class="headerlink" title="析構函數"></a>析構函數</h4><p><code>__destruct(): void</code></p><h5 id="1-析構函數範例"><a href="#1-析構函數範例" class="headerlink" title="1. 析構函數範例"></a>1. 析構函數範例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDestructableClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;In constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Destroying &quot;</span> . <span class="keyword">__CLASS__</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> MyDestructableClass();</span><br></pre></td></tr></table></figure><p>和構造函數一樣，父類的析構函數不會被引擎暗中調用。要執行父類的析構函數，必須在子類的析構函數體中顯式調用 parent::__destruct()。</p><p>此外也和構造函數一樣，子類如果自己沒有定義析構函數則會繼承父類的。 析構函數即使在使用 exit() 終止腳本運行時也會被調用。</p><p>在析構函數中調用 exit() 將會中止其餘關閉操作的運行。</p><p>:::warning<br>注意: 析構函數在腳本關閉時調用，此時所有的 HTTP 頭信息已經發出。腳本關閉時的工作目錄有可能和在 SAPI（如 apache）中時不同<br>:::</p><p>:::warning<br>注意: 試圖在析構函數（在腳本終止時被調用）中拋出一個異常會導致致命錯誤。<br>:::</p><hr><h3 id="訪問控制-可見性"><a href="#訪問控制-可見性" class="headerlink" title="訪問控制(可見性)"></a>訪問控制(可見性)</h3><p>對屬性或方法的訪問控制（PHP 7.1.0 以後支持常量），通過在前面添加關鍵字 public（公有），protected（受保護）或 private（私有）來實現的。</p><p>被定義為公有的類成員可以在任何地方被訪問。被定義為受保護的類成員則可以被其自身以及其子類和父類訪問。被定義為私有的類成員則只能被其定義所在的類訪問。</p><h4 id="屬性的訪問控制"><a href="#屬性的訪問控制" class="headerlink" title="屬性的訪問控制"></a>屬性的訪問控制</h4><h5 id="1-屬性聲明"><a href="#1-屬性聲明" class="headerlink" title="1. 屬性聲明"></a>1. 屬性聲明</h5><p>類屬性必須定義為公有，受保護，私有之一。如果用 var 定義，則被視為公有</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$public</span> = <span class="string">&#x27;Public&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$protected</span> = <span class="string">&#x27;Protected&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$private</span> = <span class="string">&#x27;Private&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> MyClass();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;public; <span class="comment">// 這行能被正常執行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;protected; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;private; <span class="comment">// 這行也會產生一個致命錯誤</span></span><br><span class="line"><span class="variable">$obj</span>-&gt;printHello(); <span class="comment">// 輸出 Public、Protected 和 Private</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 可以對 public 和 protected 進行重定義，但 private 而不能</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$public</span> = <span class="string">&#x27;Public2&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$protected</span> = <span class="string">&#x27;Protected2&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">new</span> MyClass2();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj2</span>-&gt;public; <span class="comment">// 這行能被正常執行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj2</span>-&gt;protected; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj2</span>-&gt;private; <span class="comment">// 未定義 private</span></span><br><span class="line"><span class="variable">$obj2</span>-&gt;printHello(); <span class="comment">// 輸出 Public2、Protected2 和 Undefined</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法的訪問控制"><a href="#方法的訪問控制" class="headerlink" title="方法的訪問控制"></a>方法的訪問控制</h4><h5 id="方法聲明"><a href="#方法聲明" class="headerlink" title="方法聲明"></a>方法聲明</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 聲明一個公有的構造函數</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明一個公有的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPublic</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明一個受保護的方法</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">MyProtected</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明一個私有的方法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPrivate</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 預設為公開方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPublic();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyProtected();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPrivate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass</span> = <span class="keyword">new</span> MyClass;</span><br><span class="line"><span class="variable">$myclass</span>-&gt;MyPublic(); <span class="comment">// 這行能被正常執行</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;MyProtected(); <span class="comment">// 會出現致命錯誤</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;MyPrivate(); <span class="comment">// 會出現致命錯誤</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;Foo(); <span class="comment">// 公有，受保護，私有都可以執行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 為公開的函數</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Foo2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPublic();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyProtected();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPrivate(); <span class="comment">// 會發生錯誤</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass2</span> = <span class="keyword">new</span> MyClass2;</span><br><span class="line"><span class="variable">$myclass2</span>-&gt;MyPublic(); <span class="comment">// 这行能被正常执行</span></span><br><span class="line"><span class="variable">$myclass2</span>-&gt;Foo2(); <span class="comment">// 公有，受保護，私有不可執行只能在原class裡執行</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;testPrivate();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;testPublic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Bar::testPublic\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Bar::testPrivate\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> <span class="keyword">extends</span> <span class="title">Bar</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Foo::testPublic\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Foo::testPrivate\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myFoo</span> = <span class="keyword">new</span> foo();</span><br><span class="line"><span class="variable">$myFoo</span>-&gt;test(); <span class="comment">// Bar::testPrivate</span></span><br><span class="line">                <span class="comment">// Foo::testPublic</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="常量的控制訪問"><a href="#常量的控制訪問" class="headerlink" title="常量的控制訪問"></a>常量的控制訪問</h4><h5 id="php-7-1-up-中常量聲明"><a href="#php-7-1-up-中常量聲明" class="headerlink" title="php 7.1 up 中常量聲明"></a>php 7.1 up 中常量聲明</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 公有常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> MY_PUBLIC = <span class="string">&#x27;public&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 受保護的常量</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">const</span> MY_PROTECTED = <span class="string">&#x27;protected&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有常量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> MY_PRIVATE = <span class="string">&#x27;private&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PUBLIC;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PROTECTED;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PRIVATE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass</span> = <span class="keyword">new</span> MyClass();</span><br><span class="line">MyClass::MY_PUBLIC; <span class="comment">// 這行可以正常執行</span></span><br><span class="line">MyClass::MY_PROTECTED; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line">MyClass::MY_PRIVATE; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;foo(); <span class="comment">// 將會輸出：Public Protected Private</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// This is public</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PUBLIC;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PROTECTED;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PRIVATE; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass2</span> = <span class="keyword">new</span> MyClass2;</span><br><span class="line"><span class="keyword">echo</span> MyClass2::MY_PUBLIC; <span class="comment">// 這行可以正常執行</span></span><br><span class="line"><span class="variable">$myclass2</span>-&gt;foo2(); <span class="comment">// 將會輸出：Public Protected，MY_PRIVATE 是私有常量，無法輸出</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="其他對象的訪問控制"><a href="#其他對象的訪問控制" class="headerlink" title="其他對象的訪問控制"></a>其他對象的訪問控制</h4><h5 id="訪問同一個對像類型的私有成員"><a href="#訪問同一個對像類型的私有成員" class="headerlink" title="訪問同一個對像類型的私有成員"></a>訪問同一個對像類型的私有成員</h5><p>同一個類的對象即使不是同一個實例也可以互相訪問對方的私有與受保護成員。這是由於在這些對象的內部具體實現的細節都是已知的</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$foo</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$foo</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;foo = <span class="variable">$foo</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Accessed the private method.&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Test <span class="variable">$other</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// We can change the private property:</span></span><br><span class="line">        <span class="variable">$other</span>-&gt;foo = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">        var_dump(<span class="variable">$other</span>-&gt;foo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We can also call the private method:</span></span><br><span class="line">        <span class="variable">$other</span>-&gt;bar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> Test(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span>-&gt;baz(<span class="keyword">new</span> Test(<span class="string">&#x27;other&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// Accessed the private method.</span></span><br></pre></td></tr></table></figure><h3 id="範圍解析操作符"><a href="#範圍解析操作符" class="headerlink" title="範圍解析操作符(::)"></a>範圍解析操作符(::)</h3><p>php 可以利用這一對冒號來訪問靜態成員，類常量，還可以用於覆蓋類中的屬性和方法</p><h5 id="在類的外部使用-操作符"><a href="#在類的外部使用-操作符" class="headerlink" title="在類的外部使用 :: 操作符"></a>在類的外部使用 :: 操作符</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> CONST_VALUE = <span class="string">&#x27;A constant value&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;MyClass&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$classname</span>::CONST_VALUE; <span class="comment">// 自 PHP 5.3.0 起</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> MyClass::CONST_VALUE;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>self，parent 和 static 這三個特殊的關鍵字是用於在類定義的內部對其屬性或方法進行訪問的。</p><h5 id="在類定義內部使用"><a href="#在類定義內部使用" class="headerlink" title="在類定義內部使用 ::"></a>在類定義內部使用 ::</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherClass</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$my_static</span> = <span class="string">&#x27;static var&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">doubleColon</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">parent</span>::CONST_VALUE . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;OtherClass&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$classname</span>::doubleColon(); <span class="comment">// 自 PHP 5.3.0 起</span></span><br><span class="line"></span><br><span class="line">OtherClass::doubleColon();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>當一個子類覆蓋其父類中的方法時，PHP 不會調用父類中已被覆蓋的方法。是否調用父類的方法取決於子類。這種機制也作用於構造函數和析構函數，重載以及魔術方法。</p><h5 id="調用父類的方法"><a href="#調用父類的方法" class="headerlink" title="調用父類的方法"></a>調用父類的方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;MyClass::myFunc()\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherClass</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 覆蓋了父類定義</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 但還是可以調用父類中被覆盖的方法</span></span><br><span class="line">        <span class="built_in">parent</span>::myFunc();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;OtherClass::myFunc()\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> OtherClass();</span><br><span class="line"><span class="variable">$class</span>-&gt;myFunc();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="靜態-static-關鍵字"><a href="#靜態-static-關鍵字" class="headerlink" title="靜態(static)關鍵字"></a>靜態(static)關鍵字</h3><p>聲明類屬性或方法為靜態，就可以不實例化類而直接訪問。靜態屬性不能通過一個類已實例化的對象來訪問（但靜態方法可以）</p><h4 id="靜態方法"><a href="#靜態方法" class="headerlink" title="靜態方法"></a>靜態方法</h4><h5 id="靜態方法示例"><a href="#靜態方法示例" class="headerlink" title="靜態方法示例"></a>靜態方法示例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">aStaticMethod</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Foo::aStaticMethod();</span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;Foo&#x27;</span>;</span><br><span class="line"><span class="variable">$classname</span>::aStaticMethod();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="靜態屬性"><a href="#靜態屬性" class="headerlink" title="靜態屬性"></a>靜態屬性</h4><p>靜態屬性不可以由對象通過 -&gt; 操作符來訪問。 就像其它所有的 PHP 靜態變量一樣，靜態屬性在初始化時遵循和 const 表達式一樣的規則： 有一些特定的表達式是可行的，取決於它們是否能在編譯時就計算出值。 通過變量來引用一個類是可行的，但這個變量的值不能是一個保留字 （例如 self，parent 和 static）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$my_static</span> = <span class="string">&#x27;foo&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">staticValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$my_static</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span> <span class="keyword">extends</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fooStatic</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parent</span>::<span class="variable">$my_static</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> Foo::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$foo</span>-&gt;staticValue() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$foo</span>-&gt;my_static . <span class="string">&quot;\n&quot;</span>;      <span class="comment">// 未定義的 &quot;屬性&quot; my_static</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$foo</span>::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;Foo&#x27;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$classname</span>::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> Bar::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">new</span> Bar();</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$bar</span>-&gt;fooStatic() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="抽象類"><a href="#抽象類" class="headerlink" title="抽象類"></a>抽象類</h3><p>PHP 也支援抽象類的和抽象方法，被定義為抽象類的方法不能被實體化，在任何一個類別中，<br>如果他至少有一個方法被聲明為抽象，那這個類必須要被聲明為抽象類。被定義為抽象類的方法只能聲明他該怎麼使用，不能定義具體功能實現。</p><p>當有類別繼承抽象類別時，子類別必須要定義父類別中的所以抽象方法，另外，這些方法的訪問控制必須和父類中一樣（或者更為寬鬆）。例如某個抽象方法是被聲明為受保護的，那麼子類中實現的方法就應該聲明為受保護的或者公有的，而不能定義為私有的。</p><p>此外方法的調用方式必須匹配，即類型和所需參數數量必須一致。例如，子類定義了一個可選參數，而父類抽象方法的聲明里沒有，則兩者的聲明並無衝突。</p><blockquote><p>這也適用於 PHP 5.4 起的構造函數。在 PHP 5.4 之前的構造函數聲明可以不一樣的。</p></blockquote><h4 id="1-抽象類範例-1"><a href="#1-抽象類範例-1" class="headerlink" title="1. 抽象類範例 1"></a>1. 抽象類範例 1</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"> <span class="comment">// 子類必須定義這些方法，否則會出錯</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span>(<span class="params"><span class="variable">$prefix</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 普通方法（非抽象方法）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printOut</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="keyword">$this</span>-&gt;getValue() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass1</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ConcreteClass1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span>(<span class="params"><span class="variable">$prefix</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$prefix&#125;</span>ConcreteClass1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass2</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ConcreteClass2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span>(<span class="params"><span class="variable">$prefix</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$prefix&#125;</span>ConcreteClass2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class1</span> = <span class="keyword">new</span> ConcreteClass1;</span><br><span class="line"><span class="variable">$class1</span>-&gt;printOut();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class1</span>-&gt;prefixValue(<span class="string">&#x27;FOO_&#x27;</span>) .<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class2</span> = <span class="keyword">new</span> ConcreteClass2;</span><br><span class="line"><span class="variable">$class2</span>-&gt;printOut();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class2</span>-&gt;prefixValue(<span class="string">&#x27;FOO_&#x27;</span>) .<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// ConcreteClass1</span></span><br><span class="line"><span class="comment">// FOO_ConcreteClass1</span></span><br><span class="line"><span class="comment">// ConcreteClass2</span></span><br><span class="line"><span class="comment">// FOO_ConcreteClass2</span></span><br></pre></td></tr></table></figure><h4 id="2-抽象類範例-2"><a href="#2-抽象類範例-2" class="headerlink" title="2. 抽象類範例 2"></a>2. 抽象類範例 2</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 我们的抽象方法仅需要定义需要的参数</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixName</span>(<span class="params"><span class="variable">$name</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子類的方法可以定義父類方法中不存在的可選參數，不衝突</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixName</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$separator</span> = <span class="string">&quot;.&quot;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$name</span> == <span class="string">&quot;Pacman&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$prefix</span> = <span class="string">&quot;Mr&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$name</span> == <span class="string">&quot;Pacwoman&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$prefix</span> = <span class="string">&quot;Mrs&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$prefix</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$prefix&#125;</span><span class="subst">&#123;$separator&#125;</span> <span class="subst">&#123;$name&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> ConcreteClass;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>-&gt;prefixName(<span class="string">&quot;Pacman&quot;</span>), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>-&gt;prefixName(<span class="string">&quot;Pacwoman&quot;</span>), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Mr. Pacman</span></span><br><span class="line"><span class="comment">// Mrs. Pacwoman</span></span><br></pre></td></tr></table></figure><h3 id="Interface-對象接口也稱介面"><a href="#Interface-對象接口也稱介面" class="headerlink" title="Interface 對象接口也稱介面"></a>Interface 對象接口也稱介面</h3><p>使用介面（interface），可以指定某個類必須實現哪些方法，但不需要定義這些方法的具體內容。由於介面（interface）和類（class）、trait 共享了命名空間，所以它們不能重名。介面就像定義一個標準的類一樣，通過 interface 關鍵字替換掉 class 關鍵字來定義，但其中所有的方法都是空的。介面中定義的所有方法都必須是公有，這是介面的特性。在實踐中，往往出於兩個輔助目的使用介面： 因為實現了同一個介面，所以開發者創建的對象雖然源自不同的類，但可能可以交換使用。常用於多個數據庫的服務訪問、多個支付網關、不同的緩存策略等。可能不需要任何代碼修改，就能切換不同的實現方式。能夠讓函數與方法接受一個符合介面的參數，而不需要關心對像如何做、如何實現。這些介面常常命名成類似 Iterable、Cacheable、Renderable， 以便於體現出功能的含義。</p><p>:::warning<br>注意: 雖然沒有禁止，但是強烈建議不要在接口中使用 構造器。因為這樣在對象實現接口時，會大幅降低靈活性。此外，也不能強制確保構造器遵守繼承規則，將導致不可預料的行為結果。<br>:::</p><h4 id="實現-implements"><a href="#實現-implements" class="headerlink" title="實現 implements"></a>實現 implements</h4><p>要使用一個介面，使用 implements 操作符。類中必須使用介面中定義的所有方法，否則會報一個致命錯誤。類可以實現多個接口，用逗號來分隔多個接口的名稱。</p><p>:::danger<br>警告：類使用（implement）兩個接口時，如果它們定義了相同名稱的方法，只有簽名相同的時候才是允許的。<br>:::</p><p>:::danger<br>警告：使用介面的時候，class 中的參數名稱不必和介面完全一致。然而， PHP 8.0 起語法開始支持命名參數， 也就是說調用方會依賴介面中參數的名稱。因此，強烈建議開發者的參數的命名，在類和介面中保持一致。<br>:::</p><p>:::warning<br>注意:接口也可以通過 extends 操作符繼承<br>:::</p><p>:::warning<br>注意:類實現介面時，必須以兼容的簽名定義介面中所有方法。<br>:::</p><h5 id="1-介面範例"><a href="#1-介面範例" class="headerlink" title="1. 介面範例"></a>1. 介面範例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 聲明一個&#x27;Template&#x27;介面</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Template</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$var</span></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span>(<span class="params"><span class="variable">$template</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用介面</span></span><br><span class="line"><span class="comment">// 正確寫法如下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkingTemplate</span> <span class="keyword">implements</span> <span class="title">Template</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vars</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;vars[<span class="variable">$name</span>] = <span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span>(<span class="params"><span class="variable">$template</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;vars <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$template</span> = str_replace(<span class="string">&#x27;&#123;&#x27;</span> . <span class="variable">$name</span> . <span class="string">&#x27;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$template</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$template</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面的寫法是錯誤的，會報錯，因為沒有使用到該介面方法 getHtml()：</span></span><br><span class="line"><span class="comment">// Fatal error: Class BadTemplate contains 1 abstract methods</span></span><br><span class="line"><span class="comment">// and must therefore be declared abstract (Template::getHtml)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BadTemplate</span> <span class="keyword">implements</span> <span class="title">Template</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vars</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;vars[<span class="variable">$name</span>] = <span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-可擴充介面"><a href="#2-可擴充介面" class="headerlink" title="2. 可擴充介面"></a>2. 可擴充介面</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Baz <span class="variable">$baz</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確寫法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Baz <span class="variable">$baz</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 錯誤寫法導致致命錯誤</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">implements</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Foo <span class="variable">$foo</span></span>) // 參考錯誤</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-拓展多介面"><a href="#3-拓展多介面" class="headerlink" title="3. 拓展多介面"></a>3. 拓展多介面</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">A</span>, <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">implements</span> <span class="title">C</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-使用介面常量"><a href="#4-使用介面常量" class="headerlink" title="4. 使用介面常量"></a>4. 使用介面常量</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> B = <span class="string">&#x27;Interface constant&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出接口常量</span></span><br><span class="line"><span class="keyword">echo</span> A::B;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 錯誤寫法，因為常量不能被覆蓋。接口常量的概念和類常量是一樣的。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> B = <span class="string">&#x27;Class constant&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-抽象（abstract）類的介面使用"><a href="#5-抽象（abstract）類的介面使用" class="headerlink" title="5. 抽象（abstract）類的介面使用"></a>5. 抽象（abstract）類的介面使用</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$s</span></span>): <span class="title">string</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$i</span></span>): <span class="title">int</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  抽象類可能僅實現了接口的一部分。</span></span><br><span class="line"><span class="comment">// 擴展該抽象類時必須實現剩餘部分</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    pubic <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$s</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$s</span> . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$i</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$i</span> * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="6-同時使用繼承和介面"><a href="#6-同時使用繼承和介面" class="headerlink" title="6. 同時使用繼承和介面"></a>6. 同時使用繼承和介面</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">One</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Usable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Updatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 關鍵字順序至關重要： &#x27;extends&#x27; 必須在前面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Two</span> <span class="keyword">extends</span> <span class="title">One</span> <span class="keyword">implements</span> <span class="title">Usable</span>, <span class="title">Updatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>資料來源: <a href="https://www.php.net/">https://www.php.net/</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html select選單設定&#39;disabled&#39; =&gt; &#39;true&#39;無法submit解法</title>
      <link href="/2021/09/10/Html_select_can_not_submit/"/>
      <url>/2021/09/10/Html_select_can_not_submit/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Html-select-選單設定’disabled’-gt-‘true’無法-submit-解法"><a href="#Html-select-選單設定’disabled’-gt-‘true’無法-submit-解法" class="headerlink" title="Html select 選單設定’disabled’ =&gt; ‘true’無法 submit 解法"></a>Html select 選單設定’disabled’ =&gt; ‘true’無法 submit 解法</h1><p>設定成’disabled’ =&gt; ‘true’代表不能更改，但在傳送表單時無法傳遞出去</p><p>可以使用 Jquery 解法，在表單 submit 時將 disabled 設成 false</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">jQuery(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;form&quot;</span>).bind(<span class="string">&quot;submit&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).find(<span class="string">&quot;:input&quot;</span>).prop(<span class="string">&quot;disabled&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel起步走</title>
      <link href="/2021/09/10/Laravel_start/"/>
      <url>/2021/09/10/Laravel_start/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-起步走"><a href="#Laravel-起步走" class="headerlink" title="Laravel 起步走"></a>Laravel 起步走</h1><p>Laravel 是一個 MVC 架構的 PHP 框架，分別是 model(資料處理)，controller(控制器)，view(呈現畫面)，</p><p>Laravel 還有提供了驗證(authentication)、路由(routing)、sessions、快取(caching) 等開發過程中經常用到的工具或功能。是一個強大的網頁開發框架。</p><p>那要怎麼使用 laravel 呢?</p><h3 id="1-安裝-composer"><a href="#1-安裝-composer" class="headerlink" title="1. 安裝 composer"></a>1. 安裝 composer</h3><p>首先先下載 composer<a href="https://getcomposer.org/download/">官方載點</a><br>我是 window 開發用戶<br><img src="https://i.imgur.com/25RWxuX.jpg" alt=""><br>安裝後選擇本機 php 位置安裝，安裝完畢後可以在命令提示字元(簡稱 cmd)確認是否安裝完成<br>輸入:<code>composer -v</code><br><img src="https://i.imgur.com/r7BBnRM.jpg" alt=""><br>看到這畫面代表成功囉</p><h3 id="2-下載-laravel"><a href="#2-下載-laravel" class="headerlink" title="2. 下載 laravel"></a>2. 下載 laravel</h3><p>cmd 輸入:<code>composer global require laravel/installer</code></p><h3 id="3-新增-laravel-專案"><a href="#3-新增-laravel-專案" class="headerlink" title="3. 新增 laravel 專案"></a>3. 新增 laravel 專案</h3><p>cmd 輸入: <code>laravel new &quot;專案名稱&quot;</code><br><img src="https://i.imgur.com/b8yq4v6.jpg" alt=""></p><h3 id="4-開啟-laravel"><a href="#4-開啟-laravel" class="headerlink" title="4. 開啟 laravel"></a>4. 開啟 laravel</h3><p>首先先進入 laravel 專案<br>cmd 輸入: <code>cd &quot;專案名稱&quot;</code><br>cmd 輸入: <code>php artisan serve</code><br>網址輸入: <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a><br>就可以看到預設的 laravel 畫面囉<br><img src="https://i.imgur.com/c4AmTOo.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux遇到資料夾權限問題</title>
      <link href="/2021/09/10/Linux_fix_authority/"/>
      <url>/2021/09/10/Linux_fix_authority/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux-遇到資料夾權限問題"><a href="#Linux-遇到資料夾權限問題" class="headerlink" title="Linux 遇到資料夾權限問題"></a>Linux 遇到資料夾權限問題</h1><p>問題:<br><code>laravel - The stream or file &quot;/storage/logs/laravel.log&quot; could not be opened in append mode: failed to open stream: Permission denied</code></p><p>解法:<br><code>sudo chown apache:apache -R dir</code></p><p><code>sudo chmod u+w,g+w -R dir</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel排程下載外部Url檔案，及更新進資料庫資料</title>
      <link href="/2021/09/10/laravel_auto_download/"/>
      <url>/2021/09/10/laravel_auto_download/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="laravel-排程下載外部-Url-檔案，及更新進資料庫資料"><a href="#laravel-排程下載外部-Url-檔案，及更新進資料庫資料" class="headerlink" title="laravel 排程下載外部 Url 檔案，及更新進資料庫資料"></a>laravel 排程下載外部 Url 檔案，及更新進資料庫資料</h1><h2 id="如何下載外部公開-URL"><a href="#如何下載外部公開-URL" class="headerlink" title="如何下載外部公開 URL"></a>如何下載外部公開 URL</h2><p>首先利用 Client 套件下載外部 url 的 csv 檔案。</p><p>本文撰寫使用抓取此網址<code>https://od.cdc.gov.tw/acute/幼兒常規疫苗接種時間試算表.csv</code>為範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$client</span> = <span class="keyword">new</span> \GuzzleHttp\Client();</span><br><span class="line">    <span class="variable">$a</span> = <span class="variable">$client</span>-&gt;get(<span class="string">&#x27;https:/example/example.csv&#x27;</span>, [<span class="string">&#x27;save_to&#x27;</span> =&gt; resource_path() . <span class="string">&#x27;/download/file.csv&#x27;</span>]);</span><br><span class="line">    <span class="keyword">return</span> response(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何將下載檔案匯進資料庫"><a href="#如何將下載檔案匯進資料庫" class="headerlink" title="如何將下載檔案匯進資料庫"></a>如何將下載檔案匯進資料庫</h2><p>使用 laravel-excel 套件將下載的檔案 import 進資料庫</p><p><a href="https://docs.laravel-excel.com/3.1/getting-started/installation.html">laravel-excel 安裝</a></p><p>因為等等會用到先說說 laravel ORM 的 firstOrCreate 方法</p><p>功能 : 將嘗試使用給定的列/值對定位數據庫記錄。如果在數據庫中找不到模型，則會插入一條記錄，其中包含將第一個數組參數與可選的第二個數組參數合併後的屬性</p><p>以下為文檔範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Flight</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieve flight by name or create it if it doesn&#x27;t exist...</span></span><br><span class="line"><span class="variable">$flight</span> = Flight::firstOrCreate([</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;London to Paris&#x27;</span></span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieve flight by name or create it with the name, delayed, and arrival_time attributes...</span></span><br><span class="line"><span class="variable">$flight</span> = Flight::firstOrCreate(</span><br><span class="line">    [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;London to Paris&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;delayed&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;arrival_time&#x27;</span> =&gt; <span class="string">&#x27;11:30&#x27;</span>]</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再來先創建要傳遞的類<br>檔案可以放在 app/imports/ExampleImport.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Imports</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Vaccination</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Collection</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Maatwebsite</span>\<span class="title">Excel</span>\<span class="title">Concerns</span>\<span class="title">ToCollection</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VaccinationImport</span> <span class="keyword">implements</span> <span class="title">ToCollection</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">collection</span>(<span class="params">Collection <span class="variable">$rows</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$rows</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$row</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$k</span> &lt; <span class="number">1</span>) <span class="keyword">continue</span>; <span class="comment">// 跳過標題</span></span><br><span class="line"></span><br><span class="line">            Vaccination::firstOrCreate([ <span class="comment">//</span></span><br><span class="line">            <span class="string">&#x27;age&#x27;</span> =&gt; <span class="variable">$row</span>[<span class="number">0</span>], <span class="string">&#x27;kind&#x27;</span> =&gt; <span class="variable">$row</span>[<span class="number">1</span>], <span class="string">&#x27;remark&#x27;</span> =&gt; <span class="variable">$row</span>[<span class="number">3</span>]</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>將 VaccinationImport 對像傳遞給 Excel::import()方法，將告訴包如何導入作為第二個參數傳遞的文件，第二個參數的文件就是上面程式碼下載下來的 csv 檔案放置位置。</p><p>該文件應該位於您的默認文件系統磁盤中（參考資料 config/filesystems.php）。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">import</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 我沒有讓它找默認的，讓他尋找resource資料夾底下檔案</span></span><br><span class="line">    Excel::import(<span class="keyword">new</span> VaccinationImport, resource_path(<span class="string">&#x27;/download/file.csv&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="功能合併新增排程"><a href="#功能合併新增排程" class="headerlink" title="功能合併新增排程"></a>功能合併新增排程</h2><p>在 cmd 輸入以下指令，創建 command 檔案，算是一個可以自己寫命令(shell)的檔案</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan make:command DownloadCSV</span><br></pre></td></tr></table></figure><p>接著在 DownloadCSV.php 中修改</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Console</span>\<span class="title">Commands</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Console</span>\<span class="title">Command</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Imports</span>\<span class="title">VaccinationImport</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Maatwebsite</span>\<span class="title">Excel</span>\<span class="title">Facades</span>\<span class="title">Excel</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadCSV</span> <span class="keyword">extends</span> <span class="title">Command</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The name and signature of the console command.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$signature</span> = <span class="string">&#x27;download:vaccination&#x27;</span>;  <span class="comment">// 定義一個命令</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The console command description.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$description</span> = <span class="string">&#x27;排程自動下載資料，對比資料庫寫入&#x27;</span>;  <span class="comment">// 一些介紹</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new command instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute the console command.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>) // 主要程式碼</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;download(); <span class="comment">// 下載外部csv</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;import(); <span class="comment">// 對比資料庫更新及新增</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$client</span> = <span class="keyword">new</span> \GuzzleHttp\Client();</span><br><span class="line">        <span class="variable">$client</span>-&gt;get(<span class="string">&#x27;https:/example/example.csv&#x27;</span>, [<span class="string">&#x27;save_to&#x27;</span> =&gt; resource_path() . <span class="string">&#x27;/download/file.csv&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> response(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">import</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Excel::import(<span class="keyword">new</span> VaccinationImport, resource_path(<span class="string">&#x27;/download/file.csv&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改完成接下來到 app/Console/Kernel.php</p><p>修改及導入命令程式碼</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Console</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Console</span>\<span class="title">Commands</span>\<span class="title">DownloadCSV</span>; <span class="comment">// 導入</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Console</span>\<span class="title">Scheduling</span>\<span class="title">Schedule</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>\<span class="title">Kernel</span> <span class="title">as</span> <span class="title">ConsoleKernel</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Kernel</span> <span class="keyword">extends</span> <span class="title">ConsoleKernel</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The Artisan commands provided by your application.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$commands</span> = [</span><br><span class="line">        DownloadCSV::class</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define the application&#x27;s command schedule.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  \Illuminate\Console\Scheduling\Schedule  $schedule</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 定義要排程的指令或流程</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">schedule</span>(<span class="params">Schedule <span class="variable">$schedule</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 這邊就會跑command檔案handle函式</span></span><br><span class="line">        <span class="comment">// 設定為一個小時跑一次</span></span><br><span class="line">        <span class="variable">$schedule</span>-&gt;command(<span class="string">&#x27;download:vaccination&#x27;</span>)-&gt;hourly();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register the commands for the application.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">commands</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/Commands&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">require</span> base_path(<span class="string">&#x27;routes/console.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程式碼部分就算完成了，接下來就是要設定排程工作</p><p>我是在 Linux 上面做開發，如要要讓它排程就要加入 CronJob</p><p>在 Linux 上輸入</p><p><code>crontab -e</code></p><p>按 i 編輯，輸入以下這行，它是告訴這個 package 每一分鐘 run 一次<code>php artisan schedule:run</code> 就是跑排程的意思。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * cd /path-to-your-project &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><code>path-to-your-project</code>改成你的專案路徑</p><p>輸入完畢按下 esc，然後輸入:wq 離開並儲存，跑出以下這行表示成功拉</p><p><code>crontab: installing new crontab</code></p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p>更多相關排程時間參考<a href="https://laravel.com/docs/8.x/scheduling#schedule-frequency-options">這裡</a></p><p>更多排程相關資料請參照<a href="https://laravel.com/docs/8.x/scheduling">laravel Task Scheduling 文檔</a></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實現部分區域全螢幕即退出</title>
      <link href="/2021/09/10/js_screen/"/>
      <url>/2021/09/10/js_screen/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-實現部分區域全螢幕即退出"><a href="#JS-實現部分區域全螢幕即退出" class="headerlink" title="JS 實現部分區域全螢幕即退出"></a>JS 實現部分區域全螢幕即退出</h1><h2 id="1-首先找出要全螢幕區域"><a href="#1-首先找出要全螢幕區域" class="headerlink" title="1. 首先找出要全螢幕區域"></a>1. 首先找出要全螢幕區域</h2><pre><code>`var elem = document.getElementById(&quot;game&quot;);`</code></pre><h2 id="2-建立全螢幕-function"><a href="#2-建立全螢幕-function" class="headerlink" title="2. 建立全螢幕 function"></a>2. 建立全螢幕 function</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 局部全螢幕</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">requestFullScreen</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> requestMethod =</span><br><span class="line">    element.requestFullScreen ||</span><br><span class="line">    element.webkitRequestFullScreen ||</span><br><span class="line">    element.mozRequestFullScreen ||</span><br><span class="line">    element.msRequestFullScreen;</span><br><span class="line">  <span class="keyword">if</span> (requestMethod) &#123;</span><br><span class="line">    requestMethod.call(element);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span>.ActiveXObject !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> wscript = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;WScript.Shell&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (wscript !== <span class="literal">null</span>) &#123;</span><br><span class="line">      wscript.SendKeys(<span class="string">&quot;&#123;F11&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-將選到-element-區塊全螢幕"><a href="#3-將選到-element-區塊全螢幕" class="headerlink" title="3. 將選到 element 區塊全螢幕"></a>3. 將選到 element 區塊全螢幕</h2><pre><code>`requestFullScreen(elem);`</code></pre><h2 id="4-退出全螢幕函數"><a href="#4-退出全螢幕函數" class="headerlink" title="4. 退出全螢幕函數"></a>4. 退出全螢幕函數</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exitFullscreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.exitFullscreen();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msExitFullscreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.msExitFullscreen();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.mozCancelFullScreen();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitExitFullscreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.webkitExitFullscreen();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-監聽按鈕事件"><a href="#5-監聽按鈕事件" class="headerlink" title="5. 監聽按鈕事件"></a>5. 監聽按鈕事件</h2><p>我是設置一個是否為全螢幕的變數去跑，這樣就只需要一個按鈕就可以解決</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>); <span class="comment">// 尋找button id=btn的按鈕</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 監聽btn按鈕click事件</span></span><br><span class="line">　　<span class="keyword">var</span> elem = <span class="built_in">document</span>.getElementById(<span class="string">&quot;content&quot;</span>); <span class="comment">// 要全螢幕的element id</span></span><br><span class="line">　　requestFullScreen(elem); <span class="comment">// 全螢幕</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> close = <span class="built_in">document</span>.getElementById(<span class="string">&quot;close&quot;</span>); <span class="comment">// 尋找button id=close的按鈕</span></span><br><span class="line">close.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 監聽close按鈕click事件</span></span><br><span class="line">    exitFullscreen(); <span class="comment">// 關閉全螢幕</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下由一個button完成</span></span><br><span class="line"><span class="keyword">var</span> fullscreen = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> elem = <span class="built_in">document</span>.getElementById(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fullscreen)&#123;</span><br><span class="line">        exitFullscreen();</span><br><span class="line">        fullscreen = <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">　　    requestFullScreen(elem);</span><br><span class="line">        fullscreen = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel目錄結構</title>
      <link href="/2021/09/10/laravel_folder/"/>
      <url>/2021/09/10/laravel_folder/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-目錄結構"><a href="#Laravel-目錄結構" class="headerlink" title="Laravel 目錄結構"></a>Laravel 目錄結構</h1><p>先來說說各個目錄及資料夾裡面放置檔案，並沒有強制規定</p><h2 id="根目錄"><a href="#根目錄" class="headerlink" title="根目錄"></a>根目錄</h2><h4 id="app-目錄"><a href="#app-目錄" class="headerlink" title="app 目錄"></a>app 目錄</h4><p>app 資料夾都是應用程式的核心程式碼，大部分程式碼都放在這。</p><h4 id="Bootstarp-目錄"><a href="#Bootstarp-目錄" class="headerlink" title="Bootstarp 目錄"></a>Bootstarp 目錄</h4><p>bootstrap 目錄包含的檔案用來啟動框架和設定自動載入；以及包含一個 cache 資料夾，其中內有框架對效能最佳化所產生的檔案，例如 route 和 services 的快取檔案。</p><h4 id="Config-目錄"><a href="#Config-目錄" class="headerlink" title="Config 目錄"></a>Config 目錄</h4><p>config 目錄底下包含所有應用程式的配置檔案。</p><h4 id="Database-目錄"><a href="#Database-目錄" class="headerlink" title="Database 目錄"></a>Database 目錄</h4><p>裡面放置資料庫遷移檔案以及填充檔案</p><h4 id="Pulic-目錄"><a href="#Pulic-目錄" class="headerlink" title="Pulic 目錄"></a>Pulic 目錄</h4><p>public 目錄存放著<code>index.php</code>，此檔案是應用程式的 HTTP 請求入口點。還包含了前端資源，如圖片，JavaScript 和 css</p><h4 id="Resources-目錄"><a href="#Resources-目錄" class="headerlink" title="Resources 目錄"></a>Resources 目錄</h4><p>目錄包含要使用的 view，原始資源檔(LESS,SASS,CoffeeScript)以及語言檔</p><h4 id="Routes-目錄"><a href="#Routes-目錄" class="headerlink" title="Routes 目錄"></a>Routes 目錄</h4><p>這個目錄包含所有路由定義，laravel 有預設三個路由檔案，<code>web.php</code>，<code>api.php</code>，<code>console.php</code>。</p><p><code>web.php</code>裡面定義的路由都會被<code>RouteServiceProvider</code>分配到 web 的中介層(middleware)，因此會具備 Session、CSRF 防護以及 Cookie 加密功能，如果應用程式無需提供無狀態的、RESTful 風格的 API，則所有的路由都會定義在 <code>web.php</code> 檔案中。</p><p><code>api.php</code> 檔案裡定義的路由都會在 RouteServiceProvider 中被指配到 api 中介層群組，具備頻率限制功能，這些路由是無狀態的，所以經由這些路由進入應用程式需要 token 進行認證，並且不能訪問 Session 狀態。</p><p><code>console.php</code> 檔案用於定義所有基於閉包的控制台指令，每個閉包都被繫結到一個控制台指令並且允許與指令列 IO 方法進行互動，儘管這個檔案並不定義 HTTP 路由，但是它定義了基於指令列的應用程式入口（路由）。</p><h4 id="Storage-目錄"><a href="#Storage-目錄" class="headerlink" title="Storage 目錄"></a>Storage 目錄</h4><p>storage 目錄包含編譯後的 Blade 模板、基於檔案的 session、檔案快取和其它框架生成的檔案。底下資料夾分隔成 app、framework，及 logs 目錄。app 目錄可用於儲存應用程式使用的任何檔案。framework 目錄被用於儲存框架生成的檔案及快取。最後，logs 目錄包含了應用程式的日誌檔案。</p><p><code>storage/app/public</code> 可以用來存放使用者上傳檔案（例如個人大頭照）。為了能公開訪問，需要建立 <code>public/storage</code> 連結（symbolic link），然後指到 <code>storage/app/public</code> 這個資料夾，你可以使用 <code>php artisan storage:link</code> 來建立連結。</p><h4 id="Tests-目錄"><a href="#Tests-目錄" class="headerlink" title="Tests 目錄"></a>Tests 目錄</h4><p>tests 目錄包含自動化測試的檔案。有預設一個現成的 PHPUnit 範例。每一個測試類都需要新增 Test 字首，你可以使用 phpunit 或者 php vendor/bin/phpunit 指令來執行測試。</p><h4 id="Vendor-目錄"><a href="#Vendor-目錄" class="headerlink" title="Vendor 目錄"></a>Vendor 目錄</h4><p>vendor 目錄包含你的 Composer 依賴模組，套件檔案都放這。</p><h2 id="App-目錄"><a href="#App-目錄" class="headerlink" title="App 目錄"></a>App 目錄</h2><p>在 app 目錄中的很多類別都可以透過 Artisan 指令產生，要檢視所有有效的指令，可以在終端機中執行 <code>php artisan list make</code> 指令。</p><h4 id="Console-目錄"><a href="#Console-目錄" class="headerlink" title="Console 目錄"></a>Console 目錄</h4><p>Console 目錄包含應用程式所有自定義的 Artisan 指令，這些指令類別可以使用 make:command 指令產生。</p><h4 id="Events-目錄"><a href="#Events-目錄" class="headerlink" title="Events 目錄"></a>Events 目錄</h4><p>Events 目錄預設不存在，會在你使用 event:generate 或 make:event 指令以後才會被建立。此 Events 目錄是用來放置事件類別的。</p><h4 id="Exceptions-目錄"><a href="#Exceptions-目錄" class="headerlink" title="Exceptions 目錄"></a>Exceptions 目錄</h4><p>Exceptions 目錄包含應用程式的異常處理程序，同時也是個處置應用程式丟擲異常的好位置。如果你想自定義異常的記錄和渲染，你應該修改此目錄下的 Handler 類別。</p><h4 id="Http-目錄"><a href="#Http-目錄" class="headerlink" title="Http 目錄"></a>Http 目錄</h4><p>Http 目錄包含了控制器、中介層以及表單請求等，幾乎所有進入應用程式的請求處理都放在這裡。</p><h4 id="Jobs-目錄"><a href="#Jobs-目錄" class="headerlink" title="Jobs 目錄"></a>Jobs 目錄</h4><p>該目錄預設不存在，可以通過執行 make:job 指令建立，Jobs 目錄用於存放佇列任務，應用程式中的任務可以被佇列化，也可以在當前請求生命週期內同步執行。同步執行的任務有時也被看作指令，因為它們實現了命令模式。</p><h4 id="Listeners-目錄"><a href="#Listeners-目錄" class="headerlink" title="Listeners 目錄"></a>Listeners 目錄</h4><p>這個目錄預設不存在，可以通過執行 event:generate 和 make:listener 指令建立。Listeners 目錄包含處理事件的類別（事件監聽器），事件監聽器接收一個事件並提供對該事件發生後的響應邏輯，例如，UserRegistered 事件可以被 SendWelcomeEmail 監聽器處理。</p><h4 id="Mail-目錄"><a href="#Mail-目錄" class="headerlink" title="Mail 目錄"></a>Mail 目錄</h4><p>這個目錄預設不存在，但是可以通過執行 make:mail 指令產生，Mail 目錄包含郵件傳送類別，郵件物件允許你在一個地方封裝構建郵件所需的所有業務邏輯，然後使用 Mail::send 方法傳送郵件。</p><h4 id="Notifications-目錄"><a href="#Notifications-目錄" class="headerlink" title="Notifications 目錄"></a>Notifications 目錄</h4><p>這個目錄預設不存在，可以通過執行 make:notification 指令建立， Notifications 目錄包含應用程式傳送的所有通知。</p><h4 id="Policies-目錄"><a href="#Policies-目錄" class="headerlink" title="Policies 目錄"></a>Policies 目錄</h4><p>這個目錄預設不存在，可以通過執行 make:policy 指令來建立， Policies 目錄包含了所有的授權策略類別，策略用於判斷某個使用者是否有許可權去訪問指定資源。</p><h4 id="Providers-目錄"><a href="#Providers-目錄" class="headerlink" title="Providers 目錄"></a>Providers 目錄</h4><p>Providers 目錄包含應用程式的服務提供者。服務提供者在啟動應用程式過程中繫結服務到容器、註冊事件，以及執行其他任務，為即將到來的請求處理做準備。</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解決Laravel 讀取不到.env檔案中的參數</title>
      <link href="/2021/09/10/laravel_can_not_read.env/"/>
      <url>/2021/09/10/laravel_can_not_read.env/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="解決-Laravel-讀取不到-env-檔案中的參數"><a href="#解決-Laravel-讀取不到-env-檔案中的參數" class="headerlink" title="解決 Laravel 讀取不到.env 檔案中的參數"></a>解決 Laravel 讀取不到.env 檔案中的參數</h1><p>CMD Run</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">composer dump-autoload</span><br><span class="line">php artisan cache:clear</span><br><span class="line">php artisan config:clear</span><br><span class="line">php artisan view:clear</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 路由</title>
      <link href="/2021/09/10/laravel_route/"/>
      <url>/2021/09/10/laravel_route/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-路由"><a href="#Laravel-路由" class="headerlink" title="Laravel 路由"></a>Laravel 路由</h1><h2 id="基本路由"><a href="#基本路由" class="headerlink" title="基本路由"></a>基本路由</h2><p>首先看到 rotues 資料夾裡的 web.php，會看到這些程式碼</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 使用get方法請求</span></span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;welcome&#x27;</span>); <span class="comment">// 回傳view給他</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>view 的位置就放在<code>resources\views\welcome.blade.php</code></p><p>接下來說說來說說基本路由<br>Laravel 的路由只接受一個 URI 和一個 Closure(閉包)</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;foo&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>laravel 可以使用所有 HTTP 的方法</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::post(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::put(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::patch(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::delete(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::options(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br></pre></td></tr></table></figure><p>可能你這個路由可以響應多個 HTTP 的請求，可以使用 match，或者任何請求都可以就使用 any</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::match([<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;post&#x27;</span>], <span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::any(<span class="string">&#x27;foo&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果有將路由指向任何 HTML 表單 POST，PUT 或 DELETE 放在<code>web.php</code>中，應當包括 CSRF 令牌字段。否則，請求將被拒絕。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/profile&quot;</span>&gt;</span>&#123;&#123; csrf_field() &#125;&#125; ...<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="路由參數"><a href="#路由參數" class="headerlink" title="路由參數"></a>路由參數</h2><h3 id="所需參數"><a href="#所需參數" class="headerlink" title="所需參數"></a>所需參數</h3><p>有時需要捕捉路由中的 URI 字段，可以通過以下方式實現</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;User: <span class="subst">$id</span>&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如下圖所示:<br><img src="https://i.imgur.com/rIkt6kb.jpg" alt=""></p><p>可以根據自己的想法來定義更多的路線參數</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;posts/&#123;post&#125;/comments/&#123;comment&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$postId</span>, <span class="variable">$commentId</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="可選參數"><a href="#可選參數" class="headerlink" title="可選參數"></a>可選參數</h3><p>有時可能需要指定一個路由參數，但將該路由參數的存在設為可選。您可以通過?在參數名稱後放置一個標記來實現。確保給路由對應的變量一個默認值：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;name?&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span> = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;user/&#123;name?&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span> = <span class="string">&#x27;John&#x27;</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="正規表達法約束"><a href="#正規表達法約束" class="headerlink" title="正規表達法約束"></a>正規表達法約束</h3><p>您可以使用 where 路由實例上的方法來限制路由參數的格式。該 where 方法接受參數的名稱和定義參數應如何約束的正則表達式：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;name&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;[A-Za-z]+&#x27;</span>); <span class="comment">// 他就會找出$name這個參數，符合規則的字段</span></span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;/&#123;name&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span>, <span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where([<span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;[0-9]+&#x27;</span>, <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;[a-z]+&#x27;</span>]);</span><br></pre></td></tr></table></figure><h4 id="全局約束"><a href="#全局約束" class="headerlink" title="全局約束"></a>全局約束</h4><p>如果您希望路由參數始終受給定正則表達式的約束，則可以使用該 pattern 方法。您應該在<code>boot</code>您的方法中定義這些模式<code>RouteServiceProvider</code>：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define your route model bindings, pattern filters, etc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Route::pattern(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">parent</span>::boot();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦定義了模式，它就會自動應用於使用該參數名稱的所有路由：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Only executed if &#123;id&#125; is numeric...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h2><p>命名路由允許為特定路由方便地生成 URL 或重定向。您可以通過將 name 方法鏈接到路由定義來為路由指定名稱：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/profile&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;name(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure><p>您還可以為控制器操作指定路由名稱：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/profile&#x27;</span>, <span class="string">&#x27;UserController@showProfile&#x27;</span>)-&gt;name(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure><p>生成命名路由的 URL</p><p>為給定路由指定名稱後，您可以在通過全局 route 函數生成 URL 或重定向時使用該路由的名稱：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Generating URLs...</span></span><br><span class="line"><span class="variable">$url</span> = route(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generating Redirects...</span></span><br><span class="line"><span class="keyword">return</span> redirect()-&gt;route(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure><p>如果命名路由定義了參數，您可以將參數作為第二個參數傳遞給 route 函數。給定的參數將自動插入到 URL 的正確位置：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;/profile&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;name(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$url</span> = route(<span class="string">&#x27;profile&#x27;</span>, [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用vscode Code Runner 跑JS程式碼，出現亂碼問題</title>
      <link href="/2021/09/10/vscode_coderunner/"/>
      <url>/2021/09/10/vscode_coderunner/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用-vscode-Code-Runner-跑-JS-程式碼，出現亂碼問題"><a href="#使用-vscode-Code-Runner-跑-JS-程式碼，出現亂碼問題" class="headerlink" title="使用 vscode Code Runner 跑 JS 程式碼，出現亂碼問題"></a>使用 vscode Code Runner 跑 JS 程式碼，出現亂碼問題</h1><p>問題如下圖:</p><p><img src="https://i.imgur.com/m2pEvA8.jpg" alt=""></p><p>解決方法:</p><p>安裝 node.js<br><a href="https://nodejs.org/en/">官方連結</a></p><hr><p>code runner 套件下載連結</p><p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner">code runner</a></p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jquery網頁離開前向使用者確認</title>
      <link href="/2021/09/09/JS_beforeunload/"/>
      <url>/2021/09/09/JS_beforeunload/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Jquery-網頁離開前向使用者確認"><a href="#Jquery-網頁離開前向使用者確認" class="headerlink" title="Jquery 網頁離開前向使用者確認"></a>Jquery 網頁離開前向使用者確認</h1><p>窗口的 onbeforeunload 屬性可以設置為一個函數，這個函數返回一個字符串，該字符串在對話框中顯示給用戶，以確認用戶想要離開。這是為了防止用戶端在使用過程中丟失數據。不過它經常被用來欺騙用戶。</p><p>所以從 Chrome 51 開始，將不再向用戶顯示自定義字符串。Chrome 仍會顯示一個對話框以防止用戶丟失數據，但其內容將由瀏覽器設置而不是網頁設置。</p><p>通過此更改，Chrome 將與 Safari 9.1 及更高版本以及 Firefox 4 及更高版本保持一致</p><p>以下範例在大多網頁都可以執行</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).on(<span class="string">&quot;beforeunload&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//為防止詐騙已變更為瀏覽器預設</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;你確定要離開嗎&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">window</span>).on(<span class="string">&quot;unload&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  logout();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果有些地方不想經過確認，需要直接跳轉可以關掉</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).unbind(<span class="string">&quot;beforeunload&quot;</span>); <span class="comment">// 關閉離開頁面提示</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel use google map place api輸入地址取得經緯度</title>
      <link href="/2021/09/08/laravel_google_place_api/"/>
      <url>/2021/09/08/laravel_google_place_api/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-use-google-map-place-api-輸入地址取得經緯度"><a href="#Laravel-use-google-map-place-api-輸入地址取得經緯度" class="headerlink" title="Laravel use google map place api 輸入地址取得經緯度"></a>Laravel use google map place api 輸入地址取得經緯度</h1><h2 id="註冊和啟用-PLACE-API"><a href="#註冊和啟用-PLACE-API" class="headerlink" title="註冊和啟用 PLACE API"></a>註冊和啟用 PLACE API</h2><p>先到 GCP 註冊，前三個月免費<br>到<a href="https://console.cloud.google.com/apis/library?project=paybonus">這裡搜尋 PLACE API</a><br><img src="https://i.imgur.com/YTS0zid.jpg" alt=""></p><p>找到之後點選啟用<br><img src="https://i.imgur.com/c5PhDcb.jpg" alt=""></p><h2 id="創建金鑰"><a href="#創建金鑰" class="headerlink" title="創建金鑰"></a>創建金鑰</h2><p>點選 API 和服務-&gt;點選憑證-&gt;建立憑證-&gt;API 金鑰<br><img src="https://i.imgur.com/2RgNHXQ.jpg" alt=""><br>這樣子就建立成功囉</p><p>點選限制金鑰，可以將它選擇只用來使用 place api<br><img src="https://i.imgur.com/jp6Oz2t.jpg" alt=""></p><h2 id="撰寫程式碼"><a href="#撰寫程式碼" class="headerlink" title="撰寫程式碼"></a>撰寫程式碼</h2><p>創建一個 service 檔案，使用 Guzzle 來打 api</p><p><a href="https://guzzle-cn.readthedocs.io/zh_CN/latest/index.html">Guzzle Docs</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Services</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoogleMapService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$client</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;client = <span class="keyword">new</span> Client();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得經緯度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPlaceCoods</span>(<span class="params"><span class="variable">$address</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable">$input</span> = <span class="variable">$address</span>;  <span class="comment">// 輸入的地址</span></span><br><span class="line">            <span class="comment">// 取得名稱，營業時間，評價</span></span><br><span class="line">            <span class="variable">$inputType</span> = <span class="string">&quot;textquery&amp;fields=formatted_address%2Cname%2Crating%2Copening_hours%2Cgeometry&quot;</span>;</span><br><span class="line">            <span class="variable">$api_key</span> = env(<span class="string">&quot;GOOGLE_PLACE_API&quot;</span>); <span class="comment">// 將api key放到.env檔案，取出</span></span><br><span class="line">            <span class="variable">$url</span> = <span class="string">&quot;https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=<span class="subst">$input</span>&amp;inputtype=<span class="subst">$inputType</span>&amp;key=<span class="subst">$api_key</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$response</span> = <span class="keyword">$this</span>-&gt;client-&gt;request(<span class="string">&#x27;GET&#x27;</span>, <span class="variable">$url</span>); <span class="comment">// 打api</span></span><br><span class="line">            <span class="variable">$contents</span> = <span class="variable">$response</span>-&gt;getBody()-&gt;getContents();</span><br><span class="line">            <span class="variable">$contents</span> = json_decode(<span class="variable">$contents</span>, <span class="literal">TRUE</span>); <span class="comment">// 對json編碼</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Throwable</span> <span class="variable">$th</span>) &#123;</span><br><span class="line">            report(<span class="variable">$th</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$url</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判斷此地址有沒有經緯度或錯誤</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$contents</span>[<span class="string">&#x27;candidates&#x27;</span>][<span class="number">0</span>])) &#123;</span><br><span class="line">            <span class="keyword">return</span> response()-&gt;json(<span class="variable">$contents</span>[<span class="string">&#x27;candidates&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;geometry&#x27;</span>][<span class="string">&#x27;location&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://developers.google.com/maps/documentation/places/web-service/search-find-place#maps_http_places_findplacefromtext_mca-txt">google place api docs</a></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL入門筆記</title>
      <link href="/2020/10/24/MySQL/"/>
      <url>/2020/10/24/MySQL/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQ-語法"><a href="#MySQ-語法" class="headerlink" title="MySQ 語法"></a>MySQ 語法</h1><p><hr></p><h3 id="DataBase和Table"><a href="#DataBase和Table" class="headerlink" title="DataBase和Table"></a>DataBase和Table</h3><p>刪掉database</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> database &quot;database名稱&quot;;</span><br></pre></td></tr></table></figure><p>創建 database</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database &quot;database名稱&quot;;</span><br></pre></td></tr></table></figure><p>使用這個 database</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use &quot;database名稱&quot;;</span><br></pre></td></tr></table></figure><h4 id="基本的-CRUD"><a href="#基本的-CRUD" class="headerlink" title="基本的 CRUD"></a>基本的 CRUD</h4><p>導入數據</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">source <span class="operator">/</span>Users<span class="operator">/</span>joe<span class="operator">/</span>Downloads<span class="operator">/</span>data.sql;</span><br></pre></td></tr></table></figure><p>data.sql<br>內容:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee(</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  first_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  last_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  title <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  salary <span class="keyword">DOUBLE</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  hire_date <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  notes TEXT,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (first_name, last_name, title, salary, hire_date) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">5500</span>, <span class="string">&#x27;2001-10-12&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;Software Architect&#x27;</span>, <span class="number">7200</span>, <span class="string">&#x27;2002-09-21&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;Database Administrator&#x27;</span>, <span class="number">6000</span>, <span class="string">&#x27;2012-08-29&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harry&#x27;</span>, <span class="string">&#x27;Clifford&#x27;</span>, <span class="string">&#x27;Database Administrator&#x27;</span>, <span class="number">6800</span>, <span class="string">&#x27;2015-12-10&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Eliza&#x27;</span>, <span class="string">&#x27;Clifford&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">4750</span>, <span class="string">&#x27;1998-10-19&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Nancy&#x27;</span>, <span class="string">&#x27;Newman&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">5100</span>, <span class="string">&#x27;2007-01-23&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Melinda&#x27;</span>, <span class="string">&#x27;Clifford&#x27;</span>, <span class="string">&#x27;Project Manager&#x27;</span>, <span class="number">8500</span>, <span class="string">&#x27;2013-10-29&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Chan&#x27;</span>, <span class="string">&#x27;Test Engineer&#x27;</span>, <span class="number">6500</span>, <span class="string">&#x27;2018-09-07&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;Software Architect&#x27;</span>, <span class="number">8000</span>, <span class="string">&#x27;2000-07-17&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="查看這個-database-有哪些-table"><a href="#查看這個-database-有哪些-table" class="headerlink" title="查看這個 database 有哪些 table"></a>查看這個 database 有哪些 table</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> tables</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_demo <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> employee       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> movie          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> test           <span class="operator">|</span></span><br></pre></td></tr></table></figure><h4 id="描述-table-有哪些屬性-desc-表格名稱"><a href="#描述-table-有哪些屬性-desc-表格名稱" class="headerlink" title="描述 table 有哪些屬性 desc 表格名稱"></a>描述 table 有哪些屬性 desc 表格名稱</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">desc</span> movie;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+--------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field          <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+--------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id             <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> title          <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> title_year     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> director_name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor_1_name   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor_2_name   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> duration       <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> country        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> content_rating <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gross          <span class="operator">|</span> <span class="type">bigint</span>(<span class="number">20</span>)   <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> imdb_score     <span class="operator">|</span> <span class="type">float</span>        <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>       <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+--------------+------+-----+---------+----------------+</span></span><br></pre></td></tr></table></figure><h4 id="查看表格所有數據"><a href="#查看表格所有數據" class="headerlink" title="查看表格所有數據"></a>查看表格所有數據</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> Software Architect     <span class="operator">|</span>   <span class="number">7200</span> <span class="operator">|</span> <span class="number">2002</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span> <span class="number">2012</span><span class="number">-08</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span> <span class="number">2007</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer          <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> Software Architect     <span class="operator">|</span>   <span class="number">8000</span> <span class="operator">|</span> <span class="number">2000</span><span class="number">-07</span><span class="number">-17</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="WHERE-語句過濾"><a href="#WHERE-語句過濾" class="headerlink" title="WHERE 語句過濾"></a>WHERE 語句過濾</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name<span class="operator">=</span>&quot;Clifford&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="WHERE-兩個條件過濾"><a href="#WHERE-兩個條件過濾" class="headerlink" title="WHERE 兩個條件過濾"></a>WHERE 兩個條件過濾</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name<span class="operator">=</span>&quot;Clifford&quot; <span class="keyword">and</span> salary<span class="operator">=</span><span class="number">6800</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h4><p>INSERT INTO yourTABLEname (column1,column2)VALUES(新增項目 1,新增項目 2);<br>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (first_name, last_name, title, salary, hire_date) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">5500</span>, <span class="string">&#x27;2001-10-12&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>update 語句更新數據(先找到要更改資料，再更改比較不會亂掉)<br>!!!注意 update from “table 名子”; 是對整個 table 進行操作<br>update employee set salary=10000,(預更改 coulmn = “更改值”) where title=”Software Architect”;</p><p>更新成功</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> title<span class="operator">=</span>&quot;Software Architect&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+--------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title              <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+--------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> Software Architect <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2002</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> Software Architect <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2000</span><span class="number">-07</span><span class="number">-17</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+--------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="刪除"><a href="#刪除" class="headerlink" title="刪除"></a>刪除</h4><p>delete 語句刪除數據<br>!!!注意 delete from “table 名子”; 是對整個 table 進行操作</p><p>刪除例句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">delet <span class="keyword">from</span> employee <span class="keyword">where</span> title <span class="operator">=</span>&quot;Software Architect&quot;;</span><br></pre></td></tr></table></figure><h3 id="SQL-字符串相關處理方法"><a href="#SQL-字符串相關處理方法" class="headerlink" title="SQL 字符串相關處理方法"></a>SQL 字符串相關處理方法</h3><h4 id="字串拼接-SUBSTRING"><a href="#字串拼接-SUBSTRING" class="headerlink" title="字串拼接 SUBSTRING"></a>字串拼接 SUBSTRING</h4><p>字串拼接 CONCAT(“A”,”B”)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(first_name,&quot;,&quot;,last_name) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> concat(first_name,&quot;,&quot;,last_name) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin,Jackman                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor,Edward                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian,Dickens                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry,Clifford                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza,Clifford                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy,Newman                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda,Clifford                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack,Chan                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley,Gilbert                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+</span></span><br></pre></td></tr></table></figure><p>字串合併取名為 fullname</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">select</span> concat(first_name,&quot;,&quot;,last_name) <span class="keyword">as</span> fullname <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> fullname         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin,Jackman    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor,Edward    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian,Dickens   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry,Clifford   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza,Clifford   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy,Newman     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda,Clifford <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack,Chan        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley,Gilbert   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br></pre></td></tr></table></figure><p>字串合併 CONCAT_WS CONCAT_WS(“這裡輸入拼接字符串”, first_name, last_name)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> CONCAT_WS(&quot;-&quot;,first_name,last_name) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> CONCAT_WS(&quot;-&quot;,first_name,last_name) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin<span class="operator">-</span>Jackman                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor<span class="operator">-</span>Edward                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian<span class="operator">-</span>Dickens                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry<span class="operator">-</span>Clifford                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza<span class="operator">-</span>Clifford                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy<span class="operator">-</span>Newman                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda<span class="operator">-</span>Clifford                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack<span class="operator">-</span>Chan                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley<span class="operator">-</span>Gilbert                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+</span></span><br></pre></td></tr></table></figure><h4 id="字串-SUBSTRING"><a href="#字串-SUBSTRING" class="headerlink" title="　字串 SUBSTRING"></a>　字串 SUBSTRING</h4><p>字串 SUBSTRING 可簡寫 SUBSTR</p><p>第一個字到第四</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">1</span>,<span class="number">4</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Hell                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br></pre></td></tr></table></figure><p>從第七個到結束</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">7</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> Word                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br></pre></td></tr></table></figure><p>從後面數來三個</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;, <span class="number">-3</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;, <span class="number">-3</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> ord                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br></pre></td></tr></table></figure><h4 id="REPLACE-REVERSE-and-CHAR-LENGTH"><a href="#REPLACE-REVERSE-and-CHAR-LENGTH" class="headerlink" title="REPLACE,REVERSE and CHAR_LENGTH"></a>REPLACE,REVERSE and CHAR_LENGTH</h4><h5 id="字符串取代-REPLACE"><a href="#字符串取代-REPLACE" class="headerlink" title="字符串取代 REPLACE"></a>字符串取代 REPLACE</h5><p>select REPLACE(“一段字串”,”想改變的字串”,”改變成甚麼”);</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> REPLACE(&quot;Hello World&quot;, &quot;World&quot;, &quot;MySQL&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> REPLACE(&quot;Hello World&quot;, &quot;World&quot;, &quot;MySQL&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Hello MySQL                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------+</span></span><br></pre></td></tr></table></figure><h5 id="字符反轉-REVERSE"><a href="#字符反轉-REVERSE" class="headerlink" title="字符反轉 REVERSE"></a>字符反轉 REVERSE</h5><p>select REVERSE(“要反轉字串”);</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> REVERSE(&quot;Hello World&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> REVERSE(&quot;Hello World&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> dlroW olleH            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br></pre></td></tr></table></figure><h5 id="查看字符串幾個字-CHAR-LENGTH"><a href="#查看字符串幾個字-CHAR-LENGTH" class="headerlink" title="查看字符串幾個字 CHAR_LENGTH"></a>查看字符串幾個字 CHAR_LENGTH</h5><p>select CHAR_LENGTH(“字串”);</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">CHAR_LENGTH</span>(&quot;Hello World&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">CHAR_LENGTH</span>(&quot;Hello World&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span>                         <span class="number">11</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br></pre></td></tr></table></figure><h5 id="大小寫轉換-LOWER-AND-UPPER"><a href="#大小寫轉換-LOWER-AND-UPPER" class="headerlink" title="大小寫轉換 LOWER AND UPPER"></a>大小寫轉換 LOWER AND UPPER</h5><p>字串變大寫 UPPER</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">UPPER</span>(&quot;Hello MySQL&quot;);</span><br></pre></td></tr></table></figure><p>字串變小寫 LOWER</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">LOWER</span>(&quot;Hello MySQL&quot;);</span><br></pre></td></tr></table></figure><p>大小寫範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">UPPER</span>(first_name) <span class="keyword">as</span> first_name, <span class="built_in">UPPER</span>(last_name) <span class="keyword">as</span> last_name <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> ROBIN      <span class="operator">|</span> JACKMAN   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TAYLOR     <span class="operator">|</span> EDWARD    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> VIVIAN     <span class="operator">|</span> DICKENS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HARRY      <span class="operator">|</span> CLIFFORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ELIZA      <span class="operator">|</span> CLIFFORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> NANCY      <span class="operator">|</span> NEWMAN    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MELINDA    <span class="operator">|</span> CLIFFORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JACK       <span class="operator">|</span> CHAN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HARLEY     <span class="operator">|</span> GILBERT   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br></pre></td></tr></table></figure><h3 id="select-結果的進一步處理"><a href="#select-結果的進一步處理" class="headerlink" title="select 結果的進一步處理"></a>select 結果的進一步處理</h3><h4 id="order-by-對結果進行排序"><a href="#order-by-對結果進行排序" class="headerlink" title="order by 對結果進行排序"></a>order by 對結果進行排序</h4><p>將資料庫資料依據某項要求排序 order by(默認升序) + desc(降序)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> salary;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span> <span class="number">2007</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span> <span class="number">2012</span><span class="number">-08</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer          <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> Software Architect     <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2002</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> Software Architect     <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2000</span><span class="number">-07</span><span class="number">-17</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><p>選擇第三個 column 進行排序</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> first_name, last_name , salary <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> salary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br></pre></td></tr></table></figure><p>先排二在排一</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> first_name, last_name , salary <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span>,<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> salary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br></pre></td></tr></table></figure><h4 id="LIMIT-限制返回結果進行排序"><a href="#LIMIT-限制返回結果進行排序" class="headerlink" title="LIMIT 限制返回結果進行排序"></a>LIMIT 限制返回結果進行排序</h4><p>限制數據返回 + limit 數量</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>限制 index 幾到幾</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit <span class="number">2</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>限制 index 多少到最後一個</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit <span class="number">2</span>,<span class="number">18446744073709551615</span>;</span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/doc/refman/5.7/en/select.html">MySQL limit 補充連結</a></p><h4 id="LIKE-進行字符串搜索過濾"><a href="#LIKE-進行字符串搜索過濾" class="headerlink" title="LIKE 進行字符串搜索過濾"></a>LIKE 進行字符串搜索過濾</h4><p>LIKE 模糊字串搜尋 + LIKE “字串加%” ， %=甚麼都可</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name <span class="keyword">LIKE</span> &quot;C%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer          <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name <span class="keyword">LIKE</span> &quot;%n&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title             <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> Software Engineer <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span> Software Engineer <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span> <span class="number">2007</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer     <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><p>當知道長度為多少可以變成 + LIKE “____“;</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name <span class="keyword">LIKE</span> &quot;____&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+---------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title         <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+---+</span></span><br></pre></td></tr></table></figure><p>當要找的字串包含 “%” , “_“加上\<br>select * from 表格名 where first<em>name LIKE “%\%\</em>_“;</p><h4 id="count-對結果進行比較"><a href="#count-對結果進行比較" class="headerlink" title="count 對結果進行比較"></a>count 對結果進行比較</h4><p>計算資料表有多少筆資料 COUNT(* 或其他 column)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">9</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br></pre></td></tr></table></figure><h4 id="distinct-統計唯一値"><a href="#distinct-統計唯一値" class="headerlink" title="distinct 統計唯一値"></a>distinct 統計唯一値</h4><p>計算這個 column 有幾種 DISTINCT(不同)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> title <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> title                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> Software Engineer      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Architect     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Database Administrator <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Project Manager        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Test Engineer          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br></pre></td></tr></table></figure><p>利用 CONUT 計算</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(<span class="keyword">distinct</span> title) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">COUNT</span>(<span class="keyword">distinct</span> title) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span>                     <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br></pre></td></tr></table></figure><h4 id="GROUP-BY-數據整合"><a href="#GROUP-BY-數據整合" class="headerlink" title="GROUP BY 數據整合"></a>GROUP BY 數據整合</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> title,<span class="built_in">count</span>(first_name) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> title;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> title                  <span class="operator">|</span> <span class="built_in">count</span>(first_name) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> Database Administrator <span class="operator">|</span>                 <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Project Manager        <span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Architect     <span class="operator">|</span>                 <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Engineer      <span class="operator">|</span>                 <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Test Engineer          <span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------------+</span></span><br></pre></td></tr></table></figure><h4 id="MAX-和-MIN-球最大最小值"><a href="#MAX-和-MIN-球最大最小值" class="headerlink" title="MAX 和 MIN 球最大最小值"></a>MAX 和 MIN 球最大最小值</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(salary) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">max</span>(salary) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br></pre></td></tr></table></figure><p>結合 group by</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> title, <span class="built_in">max</span>(salary) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> title;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> title                  <span class="operator">|</span> <span class="built_in">max</span>(salary) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> Database Administrator <span class="operator">|</span>        <span class="number">6800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Project Manager        <span class="operator">|</span>        <span class="number">8500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Architect     <span class="operator">|</span>       <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Engineer      <span class="operator">|</span>        <span class="number">5500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Test Engineer          <span class="operator">|</span>        <span class="number">6500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="SUM-和-AVG-求和平均值"><a href="#SUM-和-AVG-求和平均值" class="headerlink" title="SUM 和 AVG 求和平均值"></a>SUM 和 AVG 求和平均值</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(salary), <span class="built_in">avg</span>(salary) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">sum</span>(salary) <span class="operator">|</span> <span class="built_in">avg</span>(salary)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">63150</span> <span class="operator">|</span> <span class="number">7016.666666666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------------+</span></span><br></pre></td></tr></table></figure><p>使用 max, min, sum, avg 不可這樣寫<br>select sum(salary), title from employee;<br>會報錯</p><h4 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h4><p>（✗）select title,count(<em>) from employee group by title where title=”Test Engineer;<br>(◯) select title,count(</em>) from employee where title=”Test Engineer group by title;</p><p>如果要想在聚合(group by)後過濾，要使用 HAVING</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> title,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> title <span class="keyword">having</span> title<span class="operator">=</span>&quot;Test Engineer&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+----------+</span></span><br><span class="line"><span class="operator">|</span> title         <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Test Engineer <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+----------+</span></span><br></pre></td></tr></table></figure><h3 id="DATA-TYPE-之數值類型"><a href="#DATA-TYPE-之數值類型" class="headerlink" title="DATA TYPE 之數值類型"></a>DATA TYPE 之數值類型</h3><h4 id="Numeric-Tyoe"><a href="#Numeric-Tyoe" class="headerlink" title="Numeric Tyoe"></a>Numeric Tyoe</h4><h5 id="1-整數-絕對值-Integer-Types-Exact-Value-INTEGER-INT-SMALLINT-TINYINT-MEDIUMINT-BIGINT"><a href="#1-整數-絕對值-Integer-Types-Exact-Value-INTEGER-INT-SMALLINT-TINYINT-MEDIUMINT-BIGINT" class="headerlink" title="1. 整數(絕對值) Integer Types (Exact Value) - INTEGER,INT,SMALLINT,TINYINT,MEDIUMINT,BIGINT"></a>1. 整數(絕對值) Integer Types (Exact Value) - INTEGER,INT,SMALLINT,TINYINT,MEDIUMINT,BIGINT</h5><p>如果要使用到 UNSIGNED 要在新增時加入，莫認為 Signed<br>範例:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test(a TINYINT UNSIGNED , b SMALLINT);</span><br></pre></td></tr></table></figure><h5 id="2-定點數-小數點後位數固定-Fixed-Point-Types-Exact-Value-DECIMAL-NUMERIC"><a href="#2-定點數-小數點後位數固定-Fixed-Point-Types-Exact-Value-DECIMAL-NUMERIC" class="headerlink" title="2. 定點數(小數點後位數固定) Fixed-Point Types(Exact Value) - DECIMAL,NUMERIC"></a>2. 定點數(小數點後位數固定) Fixed-Point Types(Exact Value) - DECIMAL,NUMERIC</h5><p>salary DECIMAL(5,2)第一個參數是總共幾位數，第二個參數是指小數點後有幾位，小數點超過會四捨五入<br>範例: -999.99 ~ 999.99</p><h5 id="3-浮點數-無法精確表示-Floating-Point-Types-Approximate-Value-FLOAT-4-bytes-DOUBLE-8-bytes"><a href="#3-浮點數-無法精確表示-Floating-Point-Types-Approximate-Value-FLOAT-4-bytes-DOUBLE-8-bytes" class="headerlink" title="3. 浮點數(無法精確表示) Floating-Point Types(Approximate Value) - FLOAT(4 bytes),DOUBLE(8 bytes)"></a>3. 浮點數(無法精確表示) Floating-Point Types(Approximate Value) - FLOAT(4 bytes),DOUBLE(8 bytes)</h5><p>float(range,小數點後位數)，BIT(M),BIT 由 0 和 1 組成,M can range from 1 to 64。</p><h5 id="4-二進位數位-Bit-Value-Type-BIT"><a href="#4-二進位數位-Bit-Value-Type-BIT" class="headerlink" title="4. 二進位數位 Bit-Value Type - BIT"></a>4. 二進位數位 Bit-Value Type - BIT</h5><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test6(a BIT(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test6 <span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test6 <span class="keyword">values</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--因為輸出是十進位所以不會顯示</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test6;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> a    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--用加0的方式出現</span></span><br><span class="line"><span class="keyword">select</span> a<span class="operator">+</span><span class="number">0</span> <span class="keyword">from</span> test6;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> a<span class="operator">+</span><span class="number">0</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--這樣子就可以輸出二進制</span></span><br><span class="line"><span class="comment">--bin二進制，oct八進制，hex十六進制。</span></span><br><span class="line"><span class="keyword">select</span> bin(a<span class="operator">+</span><span class="number">0</span>) <span class="keyword">from</span> test6;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> bin(a<span class="operator">+</span><span class="number">0</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Data-and-Time-Type"><a href="#Data-and-Time-Type" class="headerlink" title="Data and Time Type"></a>Data and Time Type</h3><h5 id="1-DATE-“YYYY-MM-DD”"><a href="#1-DATE-“YYYY-MM-DD”" class="headerlink" title="1. DATE : “YYYY-MM-DD”"></a>1. DATE : “YYYY-MM-DD”</h5><h5 id="2-TIME-“HH-MM-SS”-“12-10”默認為-12-小時-10-分，”14”默認為-14-秒，”1210”默認為-12-分-10-秒"><a href="#2-TIME-“HH-MM-SS”-“12-10”默認為-12-小時-10-分，”14”默認為-14-秒，”1210”默認為-12-分-10-秒" class="headerlink" title="2. TIME : “HH:MM:SS” “12:10”默認為 12 小時 10 分，”14”默認為 14 秒，”1210”默認為 12 分 10 秒"></a>2. TIME : “HH:MM:SS” “12:10”默認為 12 小時 10 分，”14”默認為 14 秒，”1210”默認為 12 分 10 秒</h5><h5 id="3-YEAR-4-digit-string-number-in-the-range-1901-to-2155"><a href="#3-YEAR-4-digit-string-number-in-the-range-1901-to-2155" class="headerlink" title="3.YEAR : 4-digit string number in the range 1901 to 2155"></a>3.YEAR : 4-digit string number in the range 1901 to 2155</h5><h5 id="4-DATETIME-8bytes-“YYYY-MM-DD-HH-MM-SS”"><a href="#4-DATETIME-8bytes-“YYYY-MM-DD-HH-MM-SS”" class="headerlink" title="4. DATETIME(8bytes) : “YYYY-MM-DD HH:MM:SS”"></a>4. DATETIME(8bytes) : “YYYY-MM-DD HH:MM:SS”</h5><h5 id="5-TIMESTAMP-4bytes-range-“1907-01-01-00-00-01”UTC-to-“2038-01-19-03-14-07”UTC-依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改-TIMEZONE。"><a href="#5-TIMESTAMP-4bytes-range-“1907-01-01-00-00-01”UTC-to-“2038-01-19-03-14-07”UTC-依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改-TIMEZONE。" class="headerlink" title="5. TIMESTAMP(4bytes) : range “1907-01-01 00:00:01”UTC to “2038-01-19 03:14:07”UTC 依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改 TIMEZONE。"></a>5. TIMESTAMP(4bytes) : range “1907-01-01 00:00:01”UTC to “2038-01-19 03:14:07”UTC 依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改 TIMEZONE。</h5><p>此時間是幾號</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select DAYOFMONYH(參數) from tablename;</span><br></pre></td></tr></table></figure><p>此時間是星期幾</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select DAYOFWEEK(參數) from tablename;</span><br></pre></td></tr></table></figure><p>此時間是此年第幾天</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select DAYOFYEAR(參數) from tablename;</span><br></pre></td></tr></table></figure><p>此時間是幾月</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select MONTHNAME(b) from demo;</span><br></pre></td></tr></table></figure><p>現在日期</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select CURDATE();</span><br></pre></td></tr></table></figure><p>現在時間</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select CURTIME();</span><br></pre></td></tr></table></figure><p>現在日期+時間</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> NOW();</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> NOW()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-21</span> <span class="number">15</span>:<span class="number">57</span>:<span class="number">02</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html">資料參考</a></p><p>小練習:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> CONCAT(first_name,&quot; &quot;,last_name,&quot;was hired on&quot;,DATE_FORMAT(hire_date,&quot;%D %M %Y&quot;)) <span class="keyword">as</span> title <span class="keyword">from</span> employee;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> title                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin Jackmanwas hired on12th October <span class="number">2001</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor Edwardwas hired on21st September <span class="number">2002</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian Dickenswas hired on29th August <span class="number">2012</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry Cliffordwas hired on10th December <span class="number">2015</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza Cliffordwas hired on19th October <span class="number">1998</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy Newmanwas hired on23rd January <span class="number">2007</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda Cliffordwas hired on29th October <span class="number">2013</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack Chanwas hired on7th September <span class="number">2018</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley Gilbertwas hired on17th July <span class="number">2000</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="String-Type"><a href="#String-Type" class="headerlink" title="String Type"></a>String Type</h3><h5 id="1-CHAR-and-VARCHAR"><a href="#1-CHAR-and-VARCHAR" class="headerlink" title="1. CHAR and VARCHAR"></a>1. CHAR and VARCHAR</h5><p>VAR(可變的)</p><p>CHAR length string(0~255)<br>char 的 storage 是固定的，bytes 是固定的</p><p>VARCHAR variable-length strings(0~65535)<br>varchar 的 storage 是可變的，字符也算一個 bytes</p><h5 id="2-BINARY-and-VARBINARY"><a href="#2-BINARY-and-VARBINARY" class="headerlink" title="2. BINARY and VARBINARY"></a>2. BINARY and VARBINARY</h5><p><a href="https://dev.mysql.com/doc/refman/5.7/en/binary-varbinary.html">MySQL 文檔</a></p><h5 id="3-BLOB-and-TEXT"><a href="#3-BLOB-and-TEXT" class="headerlink" title="3. BLOB and TEXT"></a>3. BLOB and TEXT</h5><p>通常用來存取大文檔，要排序大文檔通常比較費時，可通過</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set max_sort_length = 2000;</span><br></pre></td></tr></table></figure><p>更改 sql 最大文字長度。</p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/storage-requirements.html">MySQL 文檔</a></p><h5 id="4-ENUM"><a href="#4-ENUM" class="headerlink" title="4. ENUM"></a>4. ENUM</h5><p>選擇的數據類型</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> shirt(</span><br><span class="line">size ENUM(&quot;x-small&quot;,&quot;small&quot;,&quot;medium&quot;,&quot;large&quot;,&quot;x-large&quot;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/doc/refman/5.7/en/enum.html">補充連結</a></p><p>插入時可直接打索引值，速度比 varchar 快。</p><h5 id="5-SET"><a href="#5-SET" class="headerlink" title="5. SET"></a>5. SET</h5><p>最多八個 column(2 的 8 次方)</p><h4 id="修改數據類型，使用-ALTER"><a href="#修改數據類型，使用-ALTER" class="headerlink" title="修改數據類型，使用 ALTER"></a>修改數據類型，使用 ALTER</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(username <span class="type">VARCHAR</span>(<span class="number">10</span>), password <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">table</span> <span class="keyword">user</span> MODIFY username <span class="type">VARCHAR</span>(<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">desc</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">15</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line">成功更改。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SQL-邏輯操作符"><a href="#SQL-邏輯操作符" class="headerlink" title="SQL 邏輯操作符"></a>SQL 邏輯操作符</h3><h4 id="Equal-和-NOT-Equal-等於不等於"><a href="#Equal-和-NOT-Equal-等於不等於" class="headerlink" title="Equal 和 NOT Equal 等於不等於"></a>Equal 和 NOT Equal 等於不等於</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--Equal範例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="operator">=</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--NOT Equal範例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="operator">!=</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="keyword">NOT</span> <span class="number">8000</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="LIKE-和-NOT-LIKE"><a href="#LIKE-和-NOT-LIKE" class="headerlink" title="LIKE 和 NOT LIKE"></a>LIKE 和 NOT LIKE</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--LIKE範例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--LIKE就是模糊搜尋</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name <span class="keyword">like</span> &quot;H%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--NOT LIKE範例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name <span class="keyword">NOT</span> <span class="keyword">like</span> &quot;H%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--嚴格搜尋大小寫BINARY，也可以在創建時加入BINARY</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name <span class="keyword">like</span> <span class="type">BINARY</span> &quot;H%&quot;;</span><br></pre></td></tr></table></figure><h4 id="Greate-Than-和-Less-Than-大於小於"><a href="#Greate-Than-和-Less-Than-大於小於" class="headerlink" title="Greate Than 和 Less Than 大於小於"></a>Greate Than 和 Less Than 大於小於</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--&quot; &gt; &quot;可用運算符號替換</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="number">6000</span>;</span><br></pre></td></tr></table></figure><h4 id="AND-和-OR"><a href="#AND-和-OR" class="headerlink" title="AND 和 OR"></a>AND 和 OR</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--AND範例，條件同時符合</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary<span class="operator">&gt;</span><span class="number">6000</span> <span class="keyword">and</span> first_name <span class="keyword">LIKE</span>&quot;H%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--OR範例，條件其一符合或都符合選項</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary<span class="operator">&gt;</span><span class="number">6000</span> <span class="keyword">or</span> first_name <span class="keyword">LIKE</span>&quot;H%&quot;;</span><br></pre></td></tr></table></figure><h4 id="BETWEEN"><a href="#BETWEEN" class="headerlink" title="BETWEEN"></a>BETWEEN</h4><p>尋找一個 range 之間</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--尋找薪水在6000到8000之間</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> betweeen <span class="number">6000</span> <span class="keyword">and</span> <span class="number">8000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="IN-和-NOT-IN"><a href="#IN-和-NOT-IN" class="headerlink" title="IN 和 NOT IN"></a>IN 和 NOT IN</h4><p>比較精確地找尋</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="keyword">in</span> (<span class="number">5000</span>,<span class="number">6000</span>,<span class="number">7000</span>,<span class="number">8000</span>);</span><br></pre></td></tr></table></figure><h4 id="CASE-Statement"><a href="#CASE-Statement" class="headerlink" title="CASE Statement"></a>CASE Statement</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">    <span class="keyword">case</span></span><br><span class="line">          <span class="keyword">when</span> salary <span class="operator">&gt;=</span><span class="number">7000</span> <span class="keyword">then</span> &quot;high&quot;</span><br><span class="line">          <span class="keyword">else</span> &quot;low&quot;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">as</span> tag</span><br><span class="line"><span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h3 id="MySQL-內建函數"><a href="#MySQL-內建函數" class="headerlink" title="MySQL 內建函數"></a>MySQL 內建函數</h3><h4 id="1-字符函數"><a href="#1-字符函數" class="headerlink" title="1. 字符函數"></a>1. 字符函數</h4><p>字串拼接:CONCAT()，CONCAT_WS。</p><p>字串大小寫:UPPER()，LOWER()。</p><p>從左右邊數來:LEFT()，RIGHT()。</p><p>字串長度:LENGTH()。</p><p>去除特定字符:LTRIM()，RTRIM()，TRIM()</p><p>字串替換:REPLACE()</p><p>獲取特定字串:SUBSTRING(特定字串,起,尾,)</p><h4 id="2-數值函數"><a href="#2-數值函數" class="headerlink" title="2. 數值函數"></a>2. 數值函數</h4><p>無條件進位和捨去:CEIL()，FIOOR()</p><p>除數跟餘數:DIV()，MOD()</p><p>平方:POW()</p><p>四捨五入:ROUND()</p><h4 id="3-日期時間函數"><a href="#3-日期時間函數" class="headerlink" title="3. 日期時間函數"></a>3. 日期時間函數</h4><p>當前時間:NOE()，CURDATE()，CURTIMEE()</p><p>格式化時間:DATE_FORNAT()</p><p>日期增加減少:DASTE_ADD()</p><p>時間差:DATEDIFF(第一個時間,第二個時間)</p><h4 id="4-訊息函數"><a href="#4-訊息函數" class="headerlink" title="4. 訊息函數"></a>4. 訊息函數</h4><p>獲取當前進程 ID:CONNECTION_ID()</p><p>當前 DATABASE 名稱:DATABASE()</p><p>最後一次生成的 ID:LAST_INSERT_ID()</p><p>當前用戶:USER()</p><p>當前版本:VERSION()</p><h4 id="5-聚合函數"><a href="#5-聚合函數" class="headerlink" title="5. 聚合函數"></a>5. 聚合函數</h4><p>平均值 AVG()</p><p>計数 COUNT()</p><p>最大值 MAX()</p><p>最小值 MIN()</p><p>求和 SUM()</p><h4 id="6-加密函數"><a href="#6-加密函數" class="headerlink" title="6. 加密函數"></a>6. 加密函數</h4><p>更改密碼:PASSWORD()</p><p>存取密碼如果資料密要加密時用:MD5()</p><h3 id="RELATIONSHIP-之-ONE-TO-MANY-一對多"><a href="#RELATIONSHIP-之-ONE-TO-MANY-一對多" class="headerlink" title="RELATIONSHIP 之 ONE TO MANY(一對多)"></a>RELATIONSHIP 之 ONE TO MANY(一對多)</h3><p>先新增兩個 table</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(first_name, last_name, email) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;roj@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;taed@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;vidi@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;hgi@gmail.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    order_date <span class="type">DATE</span>,</span><br><span class="line">    amount <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">    customer_id <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> orders(order_date, amount, customer_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;2001-10-12&#x27;</span>, <span class="number">99.12</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-09-21&#x27;</span>, <span class="number">110.99</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-10-13&#x27;</span>, <span class="number">12.19</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-29&#x27;</span>, <span class="number">88.09</span>, <span class="number">3</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-11&#x27;</span>, <span class="number">205.01</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>使用 id 連結兩個 table</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders <span class="keyword">where</span> customer_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> customers <span class="keyword">where</span> email<span class="operator">=</span>&quot;roj@gmail.com&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> order_date <span class="operator">|</span> amount <span class="operator">|</span> customer_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span>  <span class="number">99.12</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-13</span> <span class="operator">|</span>  <span class="number">12.19</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+--------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="使用-Foreign-Key-約束關聯"><a href="#使用-Foreign-Key-約束關聯" class="headerlink" title="使用 Foreign Key 約束關聯"></a>使用 Foreign Key 約束關聯</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(first_name, last_name, email) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;roj@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;taed@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;vidi@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;hgi@gmail.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    order_date <span class="type">DATE</span>,</span><br><span class="line">    amount <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">    customer_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (customer_id) <span class="keyword">REFERENCES</span> customers(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> orders(order_date, amount, customer_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;2001-10-12&#x27;</span>, <span class="number">99.12</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-09-21&#x27;</span>, <span class="number">110.99</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-10-13&#x27;</span>, <span class="number">12.19</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-29&#x27;</span>, <span class="number">88.09</span>, <span class="number">3</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-11&#x27;</span>, <span class="number">205.01</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><h4 id="Inner-Join-結合兩張-table"><a href="#Inner-Join-結合兩張-table" class="headerlink" title="Inner Join 結合兩張 table"></a>Inner Join 結合兩張 table</h4><p>取 table 重複部分</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> customers <span class="keyword">inner</span> <span class="keyword">join</span> orders <span class="keyword">where</span> customers.id<span class="operator">=</span>orders.customer_id;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+----------------+----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> email          <span class="operator">|</span> id <span class="operator">|</span> order_date <span class="operator">|</span> amount <span class="operator">|</span> customer_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+----------------+----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> roj<span class="variable">@gmail</span>.com  <span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span>  <span class="number">99.12</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> roj<span class="variable">@gmail</span>.com  <span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-13</span> <span class="operator">|</span>  <span class="number">12.19</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> taed<span class="variable">@gmail</span>.com <span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="number">110.99</span> <span class="operator">|</span>           <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span> vidi<span class="variable">@gmail</span>.com <span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-11</span><span class="number">-29</span> <span class="operator">|</span>  <span class="number">88.09</span> <span class="operator">|</span>           <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> hgi<span class="variable">@gmail</span>.com  <span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-11</span><span class="number">-11</span> <span class="operator">|</span> <span class="number">205.01</span> <span class="operator">|</span>           <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+----------------+----+------------+--------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="ieft-join"><a href="#ieft-join" class="headerlink" title="ieft join"></a>ieft join</h4><p>過濾條件式寫在 ON 後面，代表是先針對連結前的指定資料表進行過濾</p><p>過濾條件寫在 WHERE 後面，代表是對連結後取得的資料集合再進行過濾</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--取得自己以及重複部分</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> customers <span class="keyword">left</span> <span class="keyword">join</span> orders <span class="keyword">on</span> customers.id<span class="operator">=</span>orders.customer_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--如果總和為null換成0</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> <span class="built_in">SUM</span>(amount) <span class="keyword">is</span> <span class="keyword">NULL</span> <span class="keyword">then</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">SUM</span>(amount)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">as</span> total_amount</span><br><span class="line"><span class="keyword">from</span> customers <span class="keyword">left</span> <span class="keyword">join</span> orders <span class="keyword">on</span> customers.id<span class="operator">=</span>orders.customer_id <span class="keyword">group</span> <span class="keyword">by</span> customers.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--第二種null換成0寫法</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name, IFNULL(<span class="built_in">SUM</span>(amount), <span class="number">0</span>)</span><br><span class="line"><span class="keyword">from</span> customers <span class="keyword">left</span> <span class="keyword">join</span> orders <span class="keyword">on</span> customers.id<span class="operator">=</span>orders.customer_id <span class="keyword">group</span> <span class="keyword">by</span> customers.id;</span><br></pre></td></tr></table></figure><h4 id="rigth-join"><a href="#rigth-join" class="headerlink" title="rigth join"></a>rigth join</h4><p>left join 的相反邊</p><h4 id="ON-DELETE"><a href="#ON-DELETE" class="headerlink" title="ON DELETE"></a>ON DELETE</h4><p>刪除被 FOREIGN KEY 約束的資料</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--刪除使用者資料，會連帶買的商品一起刪除</span></span><br><span class="line"><span class="comment">--建立資料表同時使用foreign key 和on delete</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(first_name, last_name, email) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;roj@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;taed@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;vidi@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;hgi@gmail.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    order_date <span class="type">DATE</span>,</span><br><span class="line">    amount <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">    customer_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(customer_id)</span><br><span class="line">        <span class="keyword">REFERENCES</span> customers(id)</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> orders(order_date, amount, customer_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;2001-10-12&#x27;</span>, <span class="number">99.12</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-09-21&#x27;</span>, <span class="number">110.99</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-10-13&#x27;</span>, <span class="number">12.19</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-29&#x27;</span>, <span class="number">88.09</span>, <span class="number">3</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-11&#x27;</span>, <span class="number">205.01</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><h5 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--兩種方法取小數點後精度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="built_in">AVG</span>(imdb_score), <span class="type">DECIMAL</span>(<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--ROUND方法去取精度</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">select</span> ROUND(<span class="number">7.83232</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">7.83232</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ROUND(<span class="number">7.83232</span>,<span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">7.83232</span>,<span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">7.8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ROUND(<span class="number">7.57232</span>,<span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">7.57232</span>,<span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">7.6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="RELATIONSHIP-之-MANY-to-MANY-多對多"><a href="#RELATIONSHIP-之-MANY-to-MANY-多對多" class="headerlink" title="RELATIONSHIP 之 MANY to MANY(多對多)"></a>RELATIONSHIP 之 MANY to MANY(多對多)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--DATA</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> reviewers (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    title <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    released_year <span class="keyword">YEAR</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">language</span> <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    paperback <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> reviews (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    rating <span class="type">DECIMAL</span>(<span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">    book_id <span class="type">INT</span>,</span><br><span class="line">    reviewer_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(book_id) <span class="keyword">REFERENCES</span> books(id),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(reviewer_id) <span class="keyword">REFERENCES</span> reviewers(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books(title, released_year, <span class="keyword">language</span>, paperback) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Fifty Shades of Grey Series&#x27;</span>, <span class="number">2012</span>, <span class="string">&#x27;English&#x27;</span>, <span class="number">514</span>),</span><br><span class="line">    (<span class="string">&#x27;Civilian Publishing Alif Baa Taa: Learning My Arabic Alphabet&#x27;</span>, <span class="number">2018</span>, <span class="string">&#x27;Arabic&#x27;</span>, <span class="number">30</span>),</span><br><span class="line">    (<span class="string">&#x27;The Hunger Games (Book 3)&#x27;</span>, <span class="number">2014</span>, <span class="string">&#x27;English&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">    (<span class="string">&#x27;Santo Remedio&#x27;</span>, <span class="number">2017</span>, <span class="string">&#x27;Spanish&#x27;</span>, <span class="number">240</span>),</span><br><span class="line">    (<span class="string">&#x27;The Fault in Our Stars&#x27;</span>, <span class="number">2012</span>, <span class="string">&#x27;English&#x27;</span>, <span class="number">318</span>),</span><br><span class="line">    (<span class="string">&#x27;Harry Potter Und der Stein der Weisen (German Edition)&#x27;</span>, <span class="number">2005</span>, <span class="string">&#x27;German&#x27;</span>, <span class="number">334</span>),</span><br><span class="line">    (<span class="string">&#x27;Collection Folio, no. 2&#x27;</span>, <span class="number">1971</span>, <span class="string">&#x27;French&#x27;</span>, <span class="number">185</span>),</span><br><span class="line">    (<span class="string">&#x27;Santo remedio: Ilustrado y a color&#x27;</span>, <span class="number">2018</span>, <span class="string">&#x27;Spanish&#x27;</span>, <span class="number">216</span>),</span><br><span class="line">    (<span class="string">&#x27;Splatoon 2&#x27;</span>, <span class="number">2017</span>, <span class="string">&#x27;Japanese&#x27;</span>, <span class="number">384</span>),</span><br><span class="line">    (<span class="string">&#x27;Minna No Nihongo: Beginner 1, 2nd Edition&#x27;</span>, <span class="number">2012</span>, <span class="string">&#x27;Japanese&#x27;</span>, <span class="number">210</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> reviewers (first_name, last_name) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Thomas&#x27;</span>, <span class="string">&#x27;Stoneman&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Wyatt&#x27;</span>, <span class="string">&#x27;Skaggs&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Kimbra&#x27;</span>, <span class="string">&#x27;Masters&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Domingo&#x27;</span>, <span class="string">&#x27;Cortes&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Colt&#x27;</span>, <span class="string">&#x27;Steele&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Pinkie&#x27;</span>, <span class="string">&#x27;Petit&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Marlon&#x27;</span>, <span class="string">&#x27;Crafford&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> reviews(book_id, reviewer_id, rating) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="number">1</span>,<span class="number">1</span>,<span class="number">8.0</span>),(<span class="number">1</span>,<span class="number">2</span>,<span class="number">7.5</span>),(<span class="number">1</span>,<span class="number">3</span>,<span class="number">8.5</span>),(<span class="number">1</span>,<span class="number">4</span>,<span class="number">7.7</span>),(<span class="number">1</span>,<span class="number">5</span>,<span class="number">8.9</span>),</span><br><span class="line">    (<span class="number">2</span>,<span class="number">1</span>,<span class="number">8.1</span>),(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6.0</span>),(<span class="number">2</span>,<span class="number">3</span>,<span class="number">8.0</span>),(<span class="number">2</span>,<span class="number">6</span>,<span class="number">8.4</span>),(<span class="number">2</span>,<span class="number">5</span>,<span class="number">9.9</span>),</span><br><span class="line">    (<span class="number">3</span>,<span class="number">1</span>,<span class="number">7.0</span>),(<span class="number">3</span>,<span class="number">6</span>,<span class="number">7.5</span>),(<span class="number">3</span>,<span class="number">4</span>,<span class="number">8.0</span>),(<span class="number">3</span>,<span class="number">3</span>,<span class="number">7.1</span>),(<span class="number">3</span>,<span class="number">5</span>,<span class="number">8.0</span>),</span><br><span class="line">    (<span class="number">4</span>,<span class="number">1</span>,<span class="number">7.5</span>),(<span class="number">4</span>,<span class="number">3</span>,<span class="number">7.8</span>),(<span class="number">4</span>,<span class="number">4</span>,<span class="number">8.3</span>),(<span class="number">4</span>,<span class="number">2</span>,<span class="number">7.6</span>),(<span class="number">4</span>,<span class="number">5</span>,<span class="number">8.5</span>),</span><br><span class="line">    (<span class="number">5</span>,<span class="number">1</span>,<span class="number">9.5</span>),(<span class="number">5</span>,<span class="number">3</span>,<span class="number">9.0</span>),(<span class="number">5</span>,<span class="number">4</span>,<span class="number">9.1</span>),(<span class="number">5</span>,<span class="number">2</span>,<span class="number">9.3</span>),(<span class="number">5</span>,<span class="number">5</span>,<span class="number">9.9</span>),</span><br><span class="line">    (<span class="number">6</span>,<span class="number">2</span>,<span class="number">6.5</span>),(<span class="number">6</span>,<span class="number">3</span>,<span class="number">7.8</span>),(<span class="number">6</span>,<span class="number">4</span>,<span class="number">8.8</span>),(<span class="number">6</span>,<span class="number">2</span>,<span class="number">8.4</span>),(<span class="number">6</span>,<span class="number">5</span>,<span class="number">9.1</span>),</span><br><span class="line">    (<span class="number">7</span>,<span class="number">2</span>,<span class="number">9.1</span>),(<span class="number">7</span>,<span class="number">5</span>,<span class="number">9.7</span>),</span><br><span class="line">    (<span class="number">8</span>,<span class="number">4</span>,<span class="number">8.5</span>),(<span class="number">8</span>,<span class="number">2</span>,<span class="number">7.8</span>),(<span class="number">8</span>,<span class="number">6</span>,<span class="number">8.8</span>),(<span class="number">8</span>,<span class="number">5</span>,<span class="number">9.3</span>),</span><br><span class="line">    (<span class="number">9</span>,<span class="number">2</span>,<span class="number">5.5</span>),(<span class="number">9</span>,<span class="number">3</span>,<span class="number">6.8</span>),(<span class="number">9</span>,<span class="number">4</span>,<span class="number">5.8</span>),(<span class="number">9</span>,<span class="number">6</span>,<span class="number">4.3</span>),(<span class="number">9</span>,<span class="number">5</span>,<span class="number">4.5</span>),</span><br><span class="line">    (<span class="number">10</span>,<span class="number">5</span>,<span class="number">9.9</span>);</span><br></pre></td></tr></table></figure><p>練習題</p><p>找出評論者，評論分數最小,最大,平均,次數，如果次數等於 0 設為 INACTIVE，大於 0 設為 ACTIVE</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--case語句也能用if判斷式</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    first_name,</span><br><span class="line">    last_name,</span><br><span class="line">    <span class="built_in">COUNT</span>(rating) <span class="keyword">as</span> COUNT,</span><br><span class="line">    <span class="built_in">MIN</span>(IFNULL(rating, <span class="number">0</span>)) <span class="keyword">as</span> MIN,</span><br><span class="line">    <span class="built_in">MAX</span>(IFNULL(rating, <span class="number">0</span>)) <span class="keyword">as</span> MAX,</span><br><span class="line">    <span class="keyword">CONVERT</span>(IFNULL(<span class="built_in">AVG</span>(rating), <span class="number">0</span>), <span class="type">DECIMAL</span>(<span class="number">3</span>,<span class="number">2</span>)) <span class="keyword">AS</span> AVG,</span><br><span class="line">    IF(<span class="built_in">COUNT</span>(rating)<span class="operator">&gt;</span><span class="number">0</span>, <span class="string">&#x27;ACTIVE&#x27;</span>, <span class="string">&#x27;INACTIVE&#x27;</span>) <span class="keyword">AS</span> NEW_STATUS,</span><br><span class="line">    <span class="keyword">CASE</span></span><br><span class="line">        <span class="keyword">WHEN</span> <span class="built_in">COUNT</span>(rating)<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">THEN</span> <span class="string">&#x27;ACTIVE&#x27;</span></span><br><span class="line">        <span class="keyword">ELSE</span> &quot;INACTIVE&quot;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">AS</span> STATUS</span><br><span class="line"><span class="keyword">FROM</span> reviewers</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> reviews</span><br><span class="line">    <span class="keyword">ON</span> reviewers.id<span class="operator">=</span>reviews.reviewer_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> reviewers.id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> AVG <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML CSS作品</title>
      <link href="/2020/09/08/htmlcss-post/"/>
      <url>/2020/09/08/htmlcss-post/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="名片"><a href="#名片" class="headerlink" title="名片"></a>名片</h3><hr><h5 id="查看code"><a href="#查看code" class="headerlink" title="查看code"></a><a href="https://codepen.io/joe94113/pen/zYqbEvP">查看code</a></h5><p><img src="https://i.imgur.com/rJZnhXe.jpg" alt="business_card"></p><h3 id="個人履歷"><a href="#個人履歷" class="headerlink" title="個人履歷"></a>個人履歷</h3><h5 id="未完成"><a href="#未完成" class="headerlink" title="未完成"></a>未完成</h5><h5 id="查看code-1"><a href="#查看code-1" class="headerlink" title="查看code"></a><a href="https://codepen.io/joe94113/pen/wvGZGLz">查看code</a></h5><p><img src="https://i.imgur.com/ftRf7HG.jpg" alt="Resume"></p><hr>]]></content>
      
      
      <categories>
          
          <category> HTML &amp; CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python line bpt</title>
      <link href="/2020/09/08/linebot-post/"/>
      <url>/2020/09/08/linebot-post/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LineBot-小柴幫你查"><a href="#LineBot-小柴幫你查" class="headerlink" title="LineBot : 小柴幫你查"></a>LineBot : 小柴幫你查</h1><h2 id="加入好友"><a href="#加入好友" class="headerlink" title="加入好友"></a><a href="https://lin.ee/ykVmdHk">加入好友</a></h2><p><img src="https://i.imgur.com/h2vcaHJ.png" alt="Imgur"></p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h3 id="1-普通聊天對話"><a href="#1-普通聊天對話" class="headerlink" title="1. 普通聊天對話"></a>1. 普通聊天對話</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/PiFpmSk.jpg" style="width:400px;"/></div></div><h3 id="2-按-傳送位置訊息，跑出附近餐廳"><a href="#2-按-傳送位置訊息，跑出附近餐廳" class="headerlink" title="2. 按 + 傳送位置訊息，跑出附近餐廳"></a>2. 按 + 傳送位置訊息，跑出附近餐廳</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/UFeujUl.jpg" style="width:400px;"/></div></div><h3 id="3-YAHOO-最新電影"><a href="#3-YAHOO-最新電影" class="headerlink" title="3. YAHOO 最新電影"></a>3. YAHOO 最新電影</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/RHXj0Rx.jpg" style="width:400px;"/></div></div><h3 id="4-KKBOX-隨機單曲"><a href="#4-KKBOX-隨機單曲" class="headerlink" title="4. KKBOX 隨機單曲"></a>4. KKBOX 隨機單曲</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/RZRJduW.jpg" style="width:400px;"/></div></div><h3 id="5-抽美女或。。。"><a href="#5-抽美女或。。。" class="headerlink" title="5. 抽美女或。。。"></a>5. 抽美女或。。。</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/WXuORIs.jpg" style="width:400px;"/></div></div><h3 id="6-聯合報即時新聞"><a href="#6-聯合報即時新聞" class="headerlink" title="6. 聯合報即時新聞"></a>6. 聯合報即時新聞</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/qgTS2dh.jpg" style="width:400px;"/></div></div><h3 id="7-DCARD-西斯版"><a href="#7-DCARD-西斯版" class="headerlink" title="7. DCARD 西斯版"></a>7. DCARD 西斯版</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/kvX1ZGP.jpg" style="width:400px;"/></div></div><div class="tag link"><a class="link-card" title="代碼位置" href="https://github.com/joe94113/Python_LineBot"><div class="left"><img src="/images/icons/github.png"/></div><div class="right"><p class="text">代碼位置</p><p class="url">https://github.com/joe94113/Python_LineBot</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Bot </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python打造自動化報表</title>
      <link href="/2020/09/06/python-post/"/>
      <url>/2020/09/06/python-post/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python-雲端自動化動態報表"><a href="#Python-雲端自動化動態報表" class="headerlink" title="Python 雲端自動化動態報表"></a>Python 雲端自動化動態報表</h1><hr><h3 id="covid19-自動化更新動態報表"><a href="#covid19-自動化更新動態報表" class="headerlink" title="covid19 自動化更新動態報表"></a>covid19 自動化更新動態報表</h3><h5 id="爬取-github-開源的-data，每隔一天自動抓取一次資料。"><a href="#爬取-github-開源的-data，每隔一天自動抓取一次資料。" class="headerlink" title="爬取 github 開源的 data，每隔一天自動抓取一次資料。"></a>爬取 github 開源的 data，每隔一天自動抓取一次資料。</h5><h5 id="查看報表"><a href="#查看報表" class="headerlink" title="查看報表"></a><a href="https://datastudio.google.com/reporting/f198eddf-e1fd-4e96-b3f1-74e7971d40ba">查看報表</a></h5><p><img src="https://i.imgur.com/EAhImRN.jpg" alt="Imgur"></p><h3 id="貝莉梅-youtube-經營成效"><a href="#貝莉梅-youtube-經營成效" class="headerlink" title="貝莉梅 youtube 經營成效"></a>貝莉梅 youtube 經營成效</h3><h5 id="使用-youtube-api，每隔六小時自動抓取一次資料。"><a href="#使用-youtube-api，每隔六小時自動抓取一次資料。" class="headerlink" title="使用 youtube api，每隔六小時自動抓取一次資料。"></a>使用 youtube api，每隔六小時自動抓取一次資料。</h5><h5 id="查看報表-1"><a href="#查看報表-1" class="headerlink" title="查看報表"></a><a href="https://datastudio.google.com/reporting/010c6e08-4cbc-4704-a9a0-717c25d05f8b">查看報表</a></h5><p><img src="https://i.imgur.com/VIqKoN2.jpg" alt="Imgur"></p><h3 id="台積電股市新聞報表"><a href="#台積電股市新聞報表" class="headerlink" title="台積電股市新聞報表"></a>台積電股市新聞報表</h3><h5 id="利用網頁-ajax-json-檔案，爬取文章編號，只選擇標籤有台積電的新聞。"><a href="#利用網頁-ajax-json-檔案，爬取文章編號，只選擇標籤有台積電的新聞。" class="headerlink" title="利用網頁 ajax json 檔案，爬取文章編號，只選擇標籤有台積電的新聞。"></a>利用網頁 ajax json 檔案，爬取文章編號，只選擇標籤有台積電的新聞。</h5><h5 id="查看報表-2"><a href="#查看報表-2" class="headerlink" title="查看報表"></a><a href="https://datastudio.google.com/reporting/74efe628-8d4d-48d5-9ff0-33c74aee15c2">查看報表</a></h5><p><img src="https://i.imgur.com/02TOP7Y.jpg" alt="Imgur"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
