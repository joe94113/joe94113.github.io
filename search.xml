<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Laravel Geocoding api 反向地址查找</title>
      <link href="/2022/03/20/laravel-geocoding-api/"/>
      <url>/2022/03/20/laravel-geocoding-api/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-google-api-反向地址查找"><a href="#Laravel-google-api-反向地址查找" class="headerlink" title="Laravel google api 反向地址查找"></a>Laravel google api 反向地址查找</h1><h2 id="註冊以及啟用-Geocoding-API"><a href="#註冊以及啟用-Geocoding-API" class="headerlink" title="註冊以及啟用 Geocoding API"></a>註冊以及啟用 Geocoding API</h2><p>先到 GCP 註冊，前三個月免費，然後申請 api</p><h3 id="創建金鑰"><a href="#創建金鑰" class="headerlink" title="創建金鑰"></a>創建金鑰</h3><p>點選 API 和服務-&gt;點選憑證-&gt;建立憑證-&gt;API 金鑰<br><img src="https://i.imgur.com/2RgNHXQ.jpg" alt=""><br>這樣子就建立成功囉</p><p>點選限制金鑰，可以將它選擇只用來使用 Geocoding API<br><img src="https://i.imgur.com/jp6Oz2t.jpg" alt=""></p><h3 id="啟用服務"><a href="#啟用服務" class="headerlink" title="啟用服務"></a>啟用服務</h3><p>到<a href="https://console.cloud.google.com/marketplace/product/google/geocoding-backend.googleapis.com?q=search&amp;referrer=search&amp;project=master-scope-341701">Geocoding API</a>點擊啟用</p><p><img src="https://i.imgur.com/KcuAFX1.jpg" alt=""></p><h2 id="撰寫程式碼"><a href="#撰寫程式碼" class="headerlink" title="撰寫程式碼"></a>撰寫程式碼</h2><h3 id="env"><a href="#env" class="headerlink" title="env"></a>env</h3><p>修改<code>.env</code>檔案，加上以下程式碼<br><code>GOOGLE_API=YOUR_API_KEY</code></p><h3 id="利用經緯度取得地址"><a href="#利用經緯度取得地址" class="headerlink" title="利用經緯度取得地址"></a>利用經緯度取得地址</h3><p><code>Geocoding API</code>有以下參數可選</p><ul><li>language — 返回結果的語言</li><li>location_type — 一種或多種位置類型的過濾器</li><li>result_type — 一種或多種地址類型的過濾器</li></ul><p>必填參數為</p><ul><li>latlng — 填入 經度,緯度 中間不能有空格</li><li>key — 你的 google api key</li></ul><p>以下範例<code>result_type</code>選用<code>street_address</code>表示返回準確的街道地址。</p><p>接下來我們使用 <a href="https://docs.guzzlephp.org/en/stable/">Guzzle HTTP client</a>對<code>GOOGLE API</code>發出請求，而<code>Illuminate\Http\Client\Response</code>類實現了 <code>PHPArrayAccess</code>接口，所以可以直接訪問 <code>JSON</code> 響應數據。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Http</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_address</span>(<span class="params"><span class="variable">$lat</span>, <span class="variable">$lng</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$language</span> = <span class="string">&#x27;zh-TW&#x27;</span>;</span><br><span class="line">        <span class="variable">$result_type</span> = <span class="string">&#x27;street_address&#x27;</span>;</span><br><span class="line">        <span class="variable">$api_key</span> = env(<span class="string">&quot;GOOGLE_API&quot;</span>);</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">&quot;https://maps.googleapis.com/maps/api/geocode/json&quot;</span>;</span><br><span class="line">        <span class="variable">$response</span> = Http::get(<span class="variable">$url</span>, [</span><br><span class="line">            <span class="string">&#x27;latlng&#x27;</span> =&gt; <span class="string">&quot;<span class="subst">$lat</span>,<span class="subst">$lng</span>&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;key&#x27;</span> =&gt; <span class="variable">$api_key</span>,</span><br><span class="line">            <span class="string">&#x27;language&#x27;</span> =&gt; <span class="variable">$language</span>,</span><br><span class="line">            <span class="string">&#x27;result_type&#x27;</span> =&gt; <span class="variable">$result_type</span>,</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$response</span>-&gt;ok()) &#123;</span><br><span class="line">            <span class="variable">$contents</span> = <span class="variable">$response</span>-&gt;json();</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$contents</span>[<span class="string">&#x27;status&#x27;</span>] == <span class="string">&#x27;OK&#x27;</span>) &#123;</span><br><span class="line">                <span class="variable">$data</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="variable">$contents</span>[<span class="string">&#x27;results&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;formatted_address&#x27;</span>];</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="built_in">Throwable</span> <span class="variable">$th</span>) &#123;</span><br><span class="line">        report(<span class="variable">$th</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$url</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h3><p>以台南火車站經緯度為例返回資料</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;plus_code&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;compound_code&quot;</span>: <span class="string">&quot;X6W7+R5Q 台灣台南市東區&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;global_code&quot;</span>: <span class="string">&quot;7QJ2X6W7+R5Q&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;results&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;address_components&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;street_number&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;北門路二段&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;北門路二段&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;route&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;成大里&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;成大里&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;administrative_area_level_4&quot;</span>, <span class="string">&quot;political&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;東區&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;東區&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;administrative_area_level_3&quot;</span>, <span class="string">&quot;political&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;台南市&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;台南市&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;administrative_area_level_1&quot;</span>, <span class="string">&quot;political&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;台灣&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;TW&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;country&quot;</span>, <span class="string">&quot;political&quot;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">&quot;long_name&quot;</span>: <span class="string">&quot;701&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;short_name&quot;</span>: <span class="string">&quot;701&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;postal_code&quot;</span>]</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">&quot;formatted_address&quot;</span>: <span class="string">&quot;701台灣台南市東區北門路二段4號&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;geometry&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;location&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;lat&quot;</span>: <span class="number">22.9971305</span>,</span><br><span class="line">          <span class="attr">&quot;lng&quot;</span>: <span class="number">120.2129885</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">&quot;location_type&quot;</span>: <span class="string">&quot;ROOFTOP&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;viewport&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;northeast&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;lat&quot;</span>: <span class="number">22.9984794802915</span>,</span><br><span class="line">            <span class="attr">&quot;lng&quot;</span>: <span class="number">120.2143374802915</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;southwest&quot;</span>: &#123;</span><br><span class="line">            <span class="attr">&quot;lat&quot;</span>: <span class="number">22.99578151970849</span>,</span><br><span class="line">            <span class="attr">&quot;lng&quot;</span>: <span class="number">120.2116395197085</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;place_id&quot;</span>: <span class="string">&quot;ChIJs1S-8Ix2bjQRAJqtZowd7UQ&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;plus_code&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;compound_code&quot;</span>: <span class="string">&quot;X6W7+V5 台灣台南市東區&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;global_code&quot;</span>: <span class="string">&quot;7QJ2X6W7+V5&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;types&quot;</span>: [<span class="string">&quot;street_address&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;status&quot;</span>: <span class="string">&quot;OK&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> Geocoding api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 箭頭函式筆記</title>
      <link href="/2022/03/20/js-arrow-function-expression/"/>
      <url>/2022/03/20/js-arrow-function-expression/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-箭頭函式筆記"><a href="#JS-箭頭函式筆記" class="headerlink" title="JS 箭頭函式筆記"></a>JS 箭頭函式筆記</h1><p>箭頭函式比普通函式還要簡短，但是她沒有自己的<code>this</code>、<code>arguments</code>、<code>super</code>、<code>new.target</code><br>等語法，也不能被用做建構式(constructor)</p><h2 id="MDN-範例基本語法"><a href="#MDN-範例基本語法" class="headerlink" title="MDN 範例基本語法"></a>MDN 範例基本語法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(參數<span class="number">1</span>, 參數<span class="number">2</span>, …, 參數N) =&gt; &#123; 陳述式; &#125;</span><br><span class="line"></span><br><span class="line">(參數<span class="number">1</span>, 參數<span class="number">2</span>, …, 參數N) =&gt; 表示式;</span><br><span class="line"><span class="comment">// 等相同(參數1, 參數2, …, 參數N) =&gt; &#123; return 表示式; &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只有一個參數時,括號才能不加:</span></span><br><span class="line"><span class="function">(<span class="params">單一參數</span>) =&gt;</span> &#123; 陳述式; &#125;</span><br><span class="line">單一參數 =&gt; &#123; 陳述式; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//若無參數，就一定要加括號:</span></span><br><span class="line">() =&gt; &#123; statements &#125;</span><br></pre></td></tr></table></figure><h2 id="MDN-範例進階語法"><a href="#MDN-範例進階語法" class="headerlink" title="MDN 範例進階語法"></a>MDN 範例進階語法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 用大括號將內容括起來，返回一個物件字面值表示法：</span></span><br><span class="line">params =&gt; (&#123;<span class="attr">foo</span>: bar&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 支援其餘參數與預設參數</span></span><br><span class="line">(param1, param2, ...rest) =&gt; &#123; statements &#125;</span><br><span class="line">(param1 = defaultValue1, param2, …, paramN = defaultValueN) =&gt; &#123;</span><br><span class="line">statements &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也支援 parameter list 的解構</span></span><br><span class="line"><span class="keyword">var</span> f = <span class="function">(<span class="params">[a, b] = [<span class="number">1</span>, <span class="number">2</span>], &#123;x: c&#125; = &#123;x: a + b&#125;</span>) =&gt;</span> a + b + c; f(); <span class="comment">// 6</span></span><br></pre></td></tr></table></figure><h2 id="箭頭函式如何使用-arguments"><a href="#箭頭函式如何使用-arguments" class="headerlink" title="箭頭函式如何使用 arguments"></a>箭頭函式如何使用 arguments</h2><p>原本函式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">average</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> nums = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>);</span><br><span class="line">  <span class="keyword">const</span> total = nums.reduce(<span class="function"><span class="keyword">function</span> (<span class="params">acc, val</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> acc + val;</span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> total / nums.length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(average(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>));</span><br></pre></td></tr></table></figure><p>改成箭頭函式，使用<code>...arguments</code>再加上參數</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> average = <span class="function">(<span class="params">...num</span>) =&gt;</span> num.reduce(<span class="function">(<span class="params">acc, val</span>) =&gt;</span> acc + val, <span class="number">0</span>) / num.length;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(average(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>));</span><br></pre></td></tr></table></figure><h2 id="箭頭函式-this"><a href="#箭頭函式-this" class="headerlink" title="箭頭函式 this"></a>箭頭函式 this</h2><p>利用箭頭函式沒有<code>this</code>特性在物件內用法</p><p>普通函式寫法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> food = &#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getData</span>: &#123;</span><br><span class="line">        <span class="keyword">const</span> self = <span class="built_in">this</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;https://your.self.api&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: json,</span><br><span class="line">            <span class="attr">success</span>: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(data);</span><br><span class="line">                self.data = data.results[<span class="number">0</span>];</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`food: <span class="subst">$&#123;food.data&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">food.getData();</span><br></pre></td></tr></table></figure><p>改成箭頭函式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> food = &#123;</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getData</span>: &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;https://your.self.api&#x27;</span>,</span><br><span class="line">            <span class="attr">dataType</span>: json,</span><br><span class="line">            <span class="attr">success</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(data);</span><br><span class="line">                <span class="built_in">this</span>.data = data.results[<span class="number">0</span>];</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">`food: <span class="subst">$&#123;food.data&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">food.getData();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel view composer</title>
      <link href="/2022/03/20/laravel-view-composer/"/>
      <url>/2022/03/20/laravel-view-composer/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-view-composer"><a href="#Laravel-view-composer" class="headerlink" title="Laravel view composer"></a>Laravel view composer</h1><p>在某些情況下須傳遞參數底層樣板，例如想要將網頁瀏覽人數放在<code>layouts.app</code>，就需要使用<code>view composer</code></p><p>可以使用 <code>class</code> 的方式傳入，或是閉包</p><h2 id="創建-Providers"><a href="#創建-Providers" class="headerlink" title="創建 Providers"></a>創建 Providers</h2><p>可以在<code>App\View\Composers</code>創建一個<code>ProfileComposer</code>檔案</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">View</span>\<span class="title">Composers</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProfileComposer</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">compose</span>(<span class="params"><span class="variable">$view</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$view</span>-&gt;with(<span class="string">&#x27;viewCount&#x27;</span>, <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後創建一個<code>Providers</code>檔案，利用<code>class</code>或是閉包方式傳入，<code>View::composer</code>第一個參數為<code>blade</code>位置名稱</p><p>指令: <code>php artisan make:provider ViewServiceProvider</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Providers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">View</span>\<span class="title">Composers</span>\<span class="title">ProfileComposer</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">View</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">ServiceProvider</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Bootstrap any application services.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// Using class based composers...</span></span><br><span class="line">        View::composer(<span class="string">&#x27;profile&#x27;</span>, ProfileComposer::class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Using closure based composers...</span></span><br><span class="line">        View::composer(<span class="string">&#x27;profile&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$view</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$view</span>-&gt;with(<span class="string">&#x27;viewCount&#x27;</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="附加到多個樣板中"><a href="#附加到多個樣板中" class="headerlink" title="附加到多個樣板中"></a>附加到多個樣板中</h3><p>加到<code>profile</code>及<code>dashboard</code>的樣板中</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Views</span>\<span class="title">Composers</span>\<span class="title">MultiComposer</span>;</span><br><span class="line"></span><br><span class="line">View::composer(</span><br><span class="line">    [<span class="string">&#x27;profile&#x27;</span>, <span class="string">&#x27;dashboard&#x27;</span>],</span><br><span class="line">    MultiComposer::class</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>加到所有樣板</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">View::composer(<span class="string">&#x27;*&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$view</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="新增服務"><a href="#新增服務" class="headerlink" title="新增服務"></a>新增服務</h2><p>到<code>config/app.php</code>的<code>providers</code>數組中加入</p><p><code>App\Providers\ViewServiceProvider::class</code></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS let const 筆記</title>
      <link href="/2022/03/20/js-let-const/"/>
      <url>/2022/03/20/js-let-const/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-let-const-筆記"><a href="#JS-let-const-筆記" class="headerlink" title="JS let const 筆記"></a>JS let const 筆記</h1><h2 id="let"><a href="#let" class="headerlink" title="let"></a>let</h2><ol><li>let 無法再次宣告</li></ol><p>同一函數或塊範圍內重新聲明同一變量會引發<code>SyntaxError</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">2</span>; <span class="comment">// SyntaxError</span></span><br></pre></td></tr></table></figure><p>但使用<code>var</code>是可以重新宣告的</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><ol><li>限制作用域</li></ol><p><code>let</code>不會在全域物件中建立，<code>var</code>則是在全域中建立(window)</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="string">&quot;global&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> y = <span class="string">&quot;global&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>.x); <span class="comment">// &quot;global&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">this</span>.y); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>利用迴圈查看</p><p>可以看到如果使用 let 宣告，並不會複寫，因為每一個迴圈等同於一個執行環境，程式碼執行之後 JavaScript 會將變數指向到該記憶體位置，因此就不會釋放掉，等到呼叫時就可以找到相關記憶體位置</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i); <span class="comment">// 輸出一到十</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">// ReferenceError</span></span><br></pre></td></tr></table></figure><p>使用 var 就會汙染到環境</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++) &#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(i); <span class="comment">// 10跑十次</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><ol><li>暫時性死區</li></ol><p>let 在創造階段與執行階段之間有一個暫時性死區</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(num); <span class="comment">// ReferenceError</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>與 var 差異</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(num); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="const"><a href="#const" class="headerlink" title="const"></a>const</h2><p>想要宣告常數，可以使用 const 宣告，<code>常數不能重複指定值，也不能重複宣告</code>，<code>const</code>也常拿來宣告物件，因為他是傳參考特性，只修改屬性質是可以的</p><ol><li>宣告常數</li></ol><p>不能重複指定值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> DISCOUNT = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">DISCOUNT = <span class="number">15</span>; <span class="comment">// TypeError: Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><ol><li>宣告物件</li></ol><p>使用<code>const</code>宣告的物件被凍結後就無法被修改，如果是使用<code>var</code>物件屬性不能修改但是物件本身是會被修改的</p><p>以下使用<code>var</code>宣告</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> human = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;joe&quot;</span>,</span><br><span class="line">  <span class="attr">moner</span>: <span class="number">50</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">human.name = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="built_in">Object</span>.freeze(human);</span><br><span class="line">human.moner = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">human = &#123;&#125;; <span class="comment">// human被修改</span></span><br></pre></td></tr></table></figure><p>使用<code>const</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> human = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;joe&quot;</span>,</span><br><span class="line">  <span class="attr">moner</span>: <span class="number">50</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">human.name = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line"><span class="built_in">Object</span>.freeze(human);</span><br><span class="line">human.moner = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">human = &#123;&#125;; <span class="comment">// TypeError: Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><h2 id="練習-ES6"><a href="#練習-ES6" class="headerlink" title="練習 ES6"></a>練習 ES6</h2><p><a href="https://github.com/airbnb/javascript">Airbnb JavaScript 風格指南</a></p><p>編輯器可以安裝<a href="https://github.com/eslint/eslint"><code>ESLINT</code></a></p><div class="tag link"><a class="link-card" title="let MDN" href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/let"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">let MDN</p><p class="url">https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Statements/let</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 屬性特徵</title>
      <link href="/2022/03/06/js-object-defineProperty/"/>
      <url>/2022/03/06/js-object-defineProperty/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-屬性特徵"><a href="#JS-屬性特徵" class="headerlink" title="JS 屬性特徵"></a>JS 屬性特徵</h1><h2 id="屬性特徵是甚麼"><a href="#屬性特徵是甚麼" class="headerlink" title="屬性特徵是甚麼"></a>屬性特徵是甚麼</h2><p>我們可以使用<code>Object.defineProperty</code>調整屬性特徵，但<code>defineProperty</code>不能對子屬性造成限制，屬於<strong>淺層保護</strong></p><p>可以調整特徵為:</p><ol><li>值</li><li>可否寫入</li><li>可否被刪除</li><li>可否被列舉</li></ol><p>此種用法比較常在大型專案使用到，例如<a href="https://github.com/vuejs/vue/blob/f7d85976371efb8f868f069625727acd0ec412cf/src/core/observer/index.js#L157">Vue</a></p><p>列舉以下範例說明，可調整物件屬性的特徵，如果<code>writable</code>為<code>false</code>，對此屬性進行賦值，將會失敗，會有靜默的錯誤，可以在<strong>嚴格模式</strong>下查看，如想一次定義大量屬性特徵，可以使用<code>defineProperties</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> example = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可設定物件屬性特徵</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(example, <span class="string">&quot;a&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">value</span>: <span class="number">4</span>, <span class="comment">// 設值</span></span><br><span class="line">  <span class="attr">writable</span>: <span class="literal">false</span>, <span class="comment">// 可否寫入</span></span><br><span class="line">  <span class="attr">configurable</span>: <span class="literal">true</span>, <span class="comment">// 可否被刪除</span></span><br><span class="line">  <span class="attr">enumerable</span>: <span class="literal">true</span>, <span class="comment">// 可否被列舉</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 賦值</span></span><br><span class="line">example.a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 刪除</span></span><br><span class="line"><span class="keyword">delete</span> example.a;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 列舉</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> example) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`列舉<span class="subst">$&#123;key&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">  &quot;use strict&quot;</span>;</span><br><span class="line">  example.a = <span class="number">10</span>; <span class="comment">// 報錯: 不可對於不可寫入的值進行賦值</span></span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定義大量屬性範例</span></span><br><span class="line"><span class="built_in">Object</span>.definePropreties(example, &#123;</span><br><span class="line">  <span class="attr">a</span>: &#123;</span><br><span class="line">    <span class="attr">configurable</span>: <span class="literal">false</span>, <span class="comment">// 可否被刪除</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">b</span>: &#123;</span><br><span class="line">    <span class="attr">writable</span>: <span class="literal">false</span>, <span class="comment">// 可否寫入</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="屬性延伸方法"><a href="#屬性延伸方法" class="headerlink" title="屬性延伸方法"></a>屬性延伸方法</h2><h3 id="防止擴充preventExtensions"><a href="#防止擴充preventExtensions" class="headerlink" title="防止擴充preventExtensions"></a>防止擴充<code>preventExtensions</code></h3><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions"><code>Object.preventExtensions()</code></a> 可用來避免物件被新增新的屬性，物件如果可以被增加新的屬性，我們稱它可以被擴充<code>(extensible)</code>。<br><code>Object.preventExtensions()</code> 標註物件使它無法被擴充，所以在它被標註為無法擴充當下，它將無法再增加新的屬性。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> example = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.preventExtensions(example);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`是否可被擴充<span class="subst">$&#123;<span class="built_in">Object</span>.isExtensible(example)&#125;</span>`</span>); <span class="comment">// 是否可被擴充false</span></span><br><span class="line"><span class="comment">// Object.defineProperty throws 當為無法擴充的物件增加屬性</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(example, <span class="string">&quot;new&quot;</span>, &#123; <span class="attr">value</span>: <span class="number">8675309</span> &#125;); <span class="comment">// throws a TypeError</span></span><br></pre></td></tr></table></figure><h3 id="封裝seal"><a href="#封裝seal" class="headerlink" title="封裝seal"></a>封裝<code>seal</code></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/seal">MDN</a>: <code>Object.seal()</code>方法封閉一個對象，阻止添加新屬性並將所有現有屬性標記為不可配置。當前屬性的值只要原來是可寫的就可以改變。</p><p>簡單來說就是無法新增刪除擴充，也無法配置特性，但如果原屬性值可寫入就可調整該屬性值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> example = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.seal(example);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`是否可被擴充<span class="subst">$&#123;<span class="built_in">Object</span>.isExtensible(example)&#125;</span>`</span>); <span class="comment">// 是否可被擴充false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(example, <span class="string">&quot;new&quot;</span>, &#123; <span class="attr">value</span>: <span class="number">8675309</span> &#125;); <span class="comment">// 錯誤不可擴充</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可改變屬性值</span></span><br><span class="line">example.a = <span class="number">111</span>;</span><br><span class="line"><span class="built_in">console</span>.log(example.a); <span class="comment">// 輸出: 111</span></span><br></pre></td></tr></table></figure><h3 id="凍結freeze"><a href="#凍結freeze" class="headerlink" title="凍結freeze"></a>凍結<code>freeze</code></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze">MDN</a>: <code>Object.freeze()</code> 方法可以凍結一個對象。一個被凍結的對象再也不能被修改；凍結了一個對象則不能向這個對象添加新的屬性，不能刪除已有屬性，不能修改該對像已有屬性的可枚舉性、可配置性、可寫性，以及不能修改已有屬性的值。此外，凍結一個對像後該對象的原型也不能被修改。 <code>freeze()</code> 返回和傳入的參數相同的對象。</p><p>簡單來說就是，物件加上<code>seal</code>，並且無法更改值，原型也不能被修改</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> example = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.freeze(example);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">`是否可被擴充<span class="subst">$&#123;<span class="built_in">Object</span>.isExtensible(example)&#125;</span>`</span>); <span class="comment">// 是否可被擴充false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(example, <span class="string">&quot;new&quot;</span>, &#123; <span class="attr">value</span>: <span class="number">8675309</span> &#125;); <span class="comment">// Cannot define property new, object is not extensible</span></span><br><span class="line"></span><br><span class="line">example.a = <span class="number">111</span>; <span class="comment">// 嚴格模式下會拋出錯誤</span></span><br><span class="line"><span class="built_in">console</span>.log(example.a); <span class="comment">// 輸出: 1</span></span><br></pre></td></tr></table></figure><h2 id="屬性列舉與原型關係"><a href="#屬性列舉與原型關係" class="headerlink" title="屬性列舉與原型關係"></a>屬性列舉與原型關係</h2><p>如果我們使用建構函式建立一個物件，使用<code>for</code>將物件屬性輸出出來看的時候，會發現原型的屬性也一併輸出出來，<br>為什麼會如此可以查看他們原型的屬性，<code>joe</code>的 name 屬性特徵，可以發現它是可以被列舉的，因此才會輸出</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">Person.prototype.name = <span class="string">&quot;人類&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可將name設為不可列舉</span></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(Person.prototype, <span class="string">&quot;name&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">enumerable</span>: <span class="literal">false</span>, <span class="comment">// 可否被列舉</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> joe = <span class="keyword">new</span> Person();</span><br><span class="line">joe.a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 會輸出a name</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> joe) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`key:<span class="subst">$&#123;key&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(joe.__proto__, <span class="string">&quot;name&quot;</span>)); <span class="comment">// 查看name屬性特徵，可以發現可列舉</span></span><br><span class="line"><span class="built_in">console</span>.log(</span><br><span class="line">  <span class="built_in">Object</span>.getOwnPropertyDescriptor(joe.__proto__.__proto__, <span class="string">&quot;toString&quot;</span>)</span><br><span class="line">); <span class="comment">// 查看toString屬性特徵，可發現不可列舉</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果只需要當前物件屬性，可以在迴圈使用hasOwnProperty確認，</span></span><br><span class="line"><span class="comment">// 或是將屬性enumerable設為false</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> joe) &#123;</span><br><span class="line">  <span class="keyword">if</span> (joe.hasOwnProperty(key)) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`key:<span class="subst">$&#123;key&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Getter-和-Setter"><a href="#Getter-和-Setter" class="headerlink" title="Getter 和 Setter"></a>Getter 和 Setter</h2><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Functions/set"><code>set</code></a> 語法會在物件屬性被嘗試定義時，將其屬性綁定到要呼叫的函式內。</p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Functions/get"><code>get</code></a> 語法會將物件屬性，綁定到屬性被檢索時，所呼叫的函式。</p><p>從以下範例可以看到可以透過<code>set</code>跟<code>get</code>賦值運算不使用函式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> wallet = &#123;</span><br><span class="line">  <span class="attr">total</span>: <span class="number">100</span>,</span><br><span class="line">  <span class="keyword">set</span> <span class="title">save</span>(<span class="params">price</span>) &#123;</span><br><span class="line">    <span class="built_in">this</span>.total = <span class="built_in">this</span>.total + price - <span class="number">5</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">get</span> <span class="title">save</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.total / <span class="number">2</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">wallet.save = <span class="number">500</span>;</span><br><span class="line"><span class="built_in">console</span>.log(wallet);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/XEYKDD4.jpg" alt=""></p><p>也可以使用<code>Object.defineProperty</code>的方式賦予</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> wallet = &#123;</span><br><span class="line">  <span class="attr">total</span>: <span class="number">100</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(wallet, <span class="string">&quot;save&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">set</span>: <span class="function"><span class="keyword">function</span> (<span class="params">price</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.total = <span class="built_in">this</span>.total + price - <span class="number">5</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.total / <span class="number">2</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">wallet.save = <span class="number">500</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(wallet);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getOwnPropertyDescriptor(wallet, <span class="string">&quot;save&quot;</span>));</span><br></pre></td></tr></table></figure><p>輸出如下可以看到屬性特徵被設為不可刪除及不可列舉，如有需要也可在<code>defineProperty</code>將他更改為<code>true</code></p><p><img src="https://i.imgur.com/FlRiDq9.jpg" alt=""></p><p>也可以在陣列原型上使用</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> lists = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.defineProperty(<span class="built_in">Array</span>.prototype, <span class="string">&quot;latest&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>[<span class="built_in">this</span>.length - <span class="number">1</span>];</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(lists.latest); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 原型鍊(Prototype Chain)</title>
      <link href="/2022/03/06/js-prototype-based/"/>
      <url>/2022/03/06/js-prototype-based/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-原型鍊-Prototype-Chain"><a href="#JS-原型鍊-Prototype-Chain" class="headerlink" title="JS 原型鍊(Prototype Chain)"></a>JS 原型鍊(Prototype Chain)</h1><p>物件擁有自己的屬性，他可以繼承原型，而原型也可以繼承其他原型，原先的物件可以使用<code>.</code>取用屬性，而如果在原本物件找不到此屬性，他就會向上查找直到找到屬性或是<code>null</code>(找到 null 就會報錯)，而如果有從一個原型新增出兩個實體，他們會共用同一個原型的方法</p><p><img src="https://i.imgur.com/QzWbujR.jpg" alt=""></p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li>一樣具有物件特性</li><li>向上查找</li><li>原型可共用發方法及屬性</li></ol><h2 id="原型在哪裡"><a href="#原型在哪裡" class="headerlink" title="原型在哪裡"></a>原型在哪裡</h2><p><strong>以下寫法為非正規寫法</strong></p><p>以下範例可以看到陣列的原型，也可以為他的原型加上屬性，因為屬性是共用的，假如你新增其他陣列也可以使用<code>getLast()</code>方法。</p><p><img src="https://i.imgur.com/rRZjGfh.jpg" alt=""></p><h2 id="建構式自定義原型"><a href="#建構式自定義原型" class="headerlink" title="建構式自定義原型"></a>建構式自定義原型</h2><p>利用函式建構物件，使用<code>Prototype</code>製作原型功能，在過去無規範如何製作原型功能，所以大多採用<code>__proto__</code>製作，後來<code>ECMAScript</code> 規範要使用<code>[[Prototype]]</code>製作原型功能，<br>但之前開發者大多使用<code>__proto__</code>原型所以瀏覽器還保留此方法，所以如果現在看到<code>[[Prototype]]</code>就是瀏覽器還沒更新前的<code>__proto__</code>是往上追朔的原型。</p><p><strong><code>proto</code> 不屬於正規 <code>JS</code>，他是瀏覽器的方法，會導致同層所有資料被賦予新方法</strong></p><p><strong><code>prototype</code> 是正規的<code>JS</code>方法，在為建構函式新增方法時、原型作多層串接時都會使用</strong></p><p>以下範例使用函式建構物件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 利用含有 name 與 city 屬性的 human 函式，建立一個 Joe 物件：</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">human</span>(<span class="params">name, city</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.name = name;</span><br><span class="line">  <span class="built_in">this</span>.city = city;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Joe = <span class="keyword">new</span> human(<span class="string">&quot;joe&quot;</span>, <span class="string">&quot;Tiawan&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接著針對 human 函式的原型添加屬性</span></span><br><span class="line">human.prototype.work = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>工作`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(Joe.work()); <span class="comment">// joe工作</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// __proto__ 物件上新增(維護難)</span></span><br><span class="line"><span class="comment">// prototype 函式上新增(建議在原型屬性上新增)</span></span><br><span class="line"><span class="built_in">console</span>.log(human.prototype === Joe.__proto__); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="Object-create-建立多層繼承"><a href="#Object-create-建立多層繼承" class="headerlink" title="Object.create 建立多層繼承"></a>Object.create 建立多層繼承</h2><p>使用<code>Object.create</code>繼承方法，<br>當繼承函式執行時，<code>this</code> 值指向繼承的物件，而不是在函式內擁有屬性的原型物件。</p><p><a href="https://segmentfault.com/a/1190000016147953">為啥總要修正 constructor。</a>補充</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Animal</span>(<span class="params">family</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.kingdom = <span class="string">&quot;動物界&quot;</span>;</span><br><span class="line">  <span class="built_in">this</span>.family = family;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Animal.prototype.move = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>走路`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Cat</span>(<span class="params">name, color, size</span>) </span>&#123;</span><br><span class="line">  Animal.call(<span class="built_in">this</span>, <span class="string">&quot;貓科&quot;</span>); <span class="comment">// 只繼承原型，所以需補上建構函式</span></span><br><span class="line">  <span class="built_in">this</span>.name = name;</span><br><span class="line">  <span class="built_in">this</span>.color = color;</span><br><span class="line">  <span class="built_in">this</span>.size = size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Cat.prototype = <span class="built_in">Object</span>.create(Animal.prototype); <span class="comment">// 將Animal.prototype當作原型使用</span></span><br><span class="line">Cat.prototype.constructor = Cat; <span class="comment">// 將Cat建構函式補回去，否的話constructor會是Animal建構函式</span></span><br><span class="line">Cat.prototype.detail = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`名子:<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>, 顏色:<span class="subst">$&#123;<span class="built_in">this</span>.color&#125;</span>, 大小: <span class="subst">$&#123;<span class="built_in">this</span>.size&#125;</span>`</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Amy = <span class="keyword">new</span> Cat(<span class="string">&quot;艾米&quot;</span>, <span class="string">&quot;棕色&quot;</span>, <span class="string">&quot;小型&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> Kumo = <span class="keyword">new</span> Cat(<span class="string">&quot;哭某&quot;</span>, <span class="string">&quot;白色&quot;</span>, <span class="string">&quot;大型&quot;</span>);</span><br><span class="line">Amy.detail(); <span class="comment">// 名子:艾米, 顏色:棕色, 大小: 小型</span></span><br><span class="line">Amy.move(); <span class="comment">// 艾米走路</span></span><br><span class="line"></span><br><span class="line">Kumo.detail(); <span class="comment">// 名子:哭某, 顏色:白色, 大小: 大型</span></span><br><span class="line">Kumo.move(); <span class="comment">// 哭某走路</span></span><br></pre></td></tr></table></figure><h2 id="使用-ES6-新語法-class-建立物件"><a href="#使用-ES6-新語法-class-建立物件" class="headerlink" title="使用 ES6 新語法 class 建立物件"></a>使用 ES6 新語法 class 建立物件</h2><p>將上述的繼承與建立物件改成使用 class 語法，類別的主體指的是被大括號({})包含的部分，你可以在這裡面定義類別成員(members)，例如方法(methods)或建構子(constructors)。</p><p><strong>若在子類別中有建構子(constructor)，要使用 this 前則必須先呼叫 super()函式。</strong></p><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Classes">class MDN</a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">family</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.kingdom = <span class="string">&quot;動物界&quot;</span>;</span><br><span class="line">    <span class="built_in">this</span>.family = family;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">echoFamily</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>走路`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="title">constructor</span>(<span class="params">name, color, size</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>(<span class="string">&quot;貓科&quot;</span>);</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.color = color;</span><br><span class="line">    <span class="built_in">this</span>.size = size;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="title">detail</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`名子:<span class="subst">$&#123;<span class="built_in">this</span>.name&#125;</span>, 顏色:<span class="subst">$&#123;<span class="built_in">this</span>.color&#125;</span>, 大小: <span class="subst">$&#123;<span class="built_in">this</span>.size&#125;</span>`</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Amy = <span class="keyword">new</span> Cat(<span class="string">&quot;艾米&quot;</span>, <span class="string">&quot;棕色&quot;</span>, <span class="string">&quot;小型&quot;</span>);</span><br><span class="line"></span><br><span class="line">Amy.echoFamily();</span><br><span class="line">Amy.detail();</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="繼承與原型鏈" href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">繼承與原型鏈</p><p class="url">https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Inheritance_and_the_prototype_chain</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Prototype Chain </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel Vue 動態引入组件</title>
      <link href="/2022/03/06/laravel-vue-dynamic-import/"/>
      <url>/2022/03/06/laravel-vue-dynamic-import/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-Vue-動態引入组件"><a href="#Laravel-Vue-動態引入组件" class="headerlink" title="Laravel Vue 動態引入组件"></a>Laravel Vue 動態引入组件</h1><h2 id="發現問題"><a href="#發現問題" class="headerlink" title="發現問題"></a>發現問題</h2><p>在 laravel 上開發 Vue，往往都把組件註冊在 app.js 上，加載時會一次載入所有組件，造成 client side 網頁加載時間變長，影響使用者體驗</p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="動態引入"><a href="#動態引入" class="headerlink" title="動態引入"></a>動態引入</h3><p>從<code>laravel-mix(4.0.16)</code>起，開始支援動態引入(Dynamic Import)，動態引入就是一種<code>code splitting</code>，可以將單一的 bundle 切分成數個塊 chunk，可搭配平行載入，或在有需要時才載入，又或是對一些不常變動的 chunk 個別做快取，來達到載入效能的優化。算是一種 <code>Lazy Loading</code>(等用到的時候再載入)的實現</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>可以選擇設定<code>webpack.mix.js</code>或<code>.babelrc</code>檔案擇一即可</p><h3 id="webpack-mix-js-配置"><a href="#webpack-mix-js-配置" class="headerlink" title="webpack.mix.js 配置"></a>webpack.mix.js 配置</h3><p>在<code>webpack.mix.js</code>加上以下這行程式碼，<code>laravel-mix</code>必須是<code>4.0.16</code>版本以上</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">mix.babelConfig(&#123; <span class="attr">plugins</span>: [<span class="string">&quot;@babel/plugin-syntax-dynamic-import&quot;</span>] &#125;);</span><br></pre></td></tr></table></figure><h3 id="babelrc-檔案設置"><a href="#babelrc-檔案設置" class="headerlink" title=".babelrc 檔案設置"></a>.babelrc 檔案設置</h3><p>根目錄新增<code>.babelrc</code> 檔案或是修改，將 <code>@babel/plugin-syntax-dynamic-import</code> 加到 「plugins」 這個 array 裏面，在啟用<code>laravel-mix</code>時就會自動引入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123; &quot;plugins&quot;: [ &quot;@babel/plugin-syntax-dynamic-import&quot; ] &#125;</span><br></pre></td></tr></table></figure><h2 id="使用動態引入"><a href="#使用動態引入" class="headerlink" title="使用動態引入"></a>使用動態引入</h2><p>原先引入 Vue 組件是使用<code>static import</code>方法引入</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ExampleComponent <span class="keyword">from</span> <span class="string">&quot;./components/ExampleComponent.vue&quot;</span>;</span><br><span class="line">Vue.component(<span class="string">&quot;example-component&quot;</span>, ExampleComponent);</span><br></pre></td></tr></table></figure><p>將其更改為<code>Dynamic Import</code></p><h3 id="寫法一"><a href="#寫法一" class="headerlink" title="寫法一"></a>寫法一</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ExampleComponent = <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;./components/ExampleComponent.vue&quot;</span>);</span><br><span class="line">Vue.component(<span class="string">&quot;example-component&quot;</span>, ExampleComponent);</span><br></pre></td></tr></table></figure><h3 id="寫法二"><a href="#寫法二" class="headerlink" title="寫法二"></a>寫法二</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Vue.component(<span class="string">&quot;example-component&quot;</span>, <span class="function">() =&gt;</span></span><br><span class="line">  <span class="keyword">import</span>(<span class="string">&quot;./components/ExampleComponent.vue&quot;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="在vue-router中"><a href="#在vue-router中" class="headerlink" title="在vue router中"></a>在<code>vue router</code>中</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;./components/ExampleComponent&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h2 id="編譯"><a href="#編譯" class="headerlink" title="編譯"></a>編譯</h2><p><code>npm run dev</code> 或是 <code>npm run watch</code></p><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>可以看到在還未分割檔案前<code>app.js</code>的容量較大，分割後多了其他組件的<code>js</code>而<code>app.js</code>也縮水了</p><p>切割前:<br><img src="https://i.imgur.com/nbLJViR.jpg" alt=""></p><p>切割後:<br><img src="https://i.imgur.com/JgDFDb1.jpg" alt=""></p><p>也只需要加載<code>app.js</code>，<code>laravel-mix</code>會去解決按需要才載入問題</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Laravel 中使用 Vue 實現滾動載入</title>
      <link href="/2022/02/17/laravel-use-scoll-loading-in-vue/"/>
      <url>/2022/02/17/laravel-use-scoll-loading-in-vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="在-Laravel-中使用-Vue-實現滾動載入"><a href="#在-Laravel-中使用-Vue-實現滾動載入" class="headerlink" title="在 Laravel 中使用 Vue 實現滾動載入"></a>在 Laravel 中使用 Vue 實現滾動載入</h1><p>在工作中有做到通知功能，想說可以讓通知呈現像 FB 這樣的效果</p><h2 id="安裝-vue-infinite-loading"><a href="#安裝-vue-infinite-loading" class="headerlink" title="安裝 vue-infinite-loading"></a>安裝 vue-infinite-loading</h2><p><a href="https://github.com/PeachScript/vue-infinite-loading">vue-infinite-loading</a></p><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><p><code>npm install vue-infinite-loading -S</code></p><h3 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h3><p><code>&lt;script src=&quot;https://unpkg.com/vue-infinite-loading@^2/dist/vue-infinite-loading.js&quot;&gt;&lt;/script&gt;</code></p><h2 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h2><p>在組件中使用</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">infinite-loading</span>&gt;</span><span class="tag">&lt;/<span class="name">infinite-loading</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> InfiniteLoading <span class="keyword">from</span> <span class="string">&#x27;vue-infinite-loading&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    InfiniteLoading,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3><p>將<code>InfiniteLoading</code>組件放在列表的底部，監聽<code>infinite</code>事件觸發<code>infiniteHandler</code>方法，當滾動資料載入完畢，則顯示無通知，可以利用<a href="https://vuejs.org/v2/api/index.html#slot">slot 特殊屬性</a>來配置不同情況。</p><p>並通過<code>$state.loaded</code>方法告訴這個插件我們還有數據，如果 API 返回一個空數組，我們將通過<code>$state.complete</code>方法告訴這個插件所有數據都已加載。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, $index) in notifications&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;$index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 通知迴圈 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">infinite-loading</span> @<span class="attr">infinite</span>=<span class="string">&quot;infiniteHandler&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;spinner&quot;</span>&gt;</span>載入中...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;no-more&quot;</span>&gt;</span>無更多通知<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;no-results&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            暫無通知</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span>&lt;/infinite-loading</span></span><br><span class="line"><span class="xml">    &gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> InfiniteLoading <span class="keyword">from</span> <span class="string">&#x27;vue-infinite-loading&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        InfiniteLoading,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">data</span>: <span class="function">() =&gt;</span> (&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">notifications</span>: [],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="attr">page</span>: <span class="number">0</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">         <span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">         * 滾動載入通知.</span></span></span></span><br><span class="line"><span class="comment"><span class="javascript"><span class="xml">         */</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">infiniteHandler</span>(<span class="params">$state</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            axios</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                .get(<span class="string">&quot;/notifications&quot;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">params</span>: &#123; <span class="attr">page</span>: (<span class="built_in">this</span>.page = <span class="built_in">this</span>.page += <span class="number">1</span>) &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                .then(<span class="function">(<span class="params">&#123; data: &#123; total, notifications &#125; &#125;</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.total = total;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    notifications.data.map(<span class="function">(<span class="params">&#123; id, data, created &#125;</span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">this</span>.notifications.push(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">id</span>: id,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">title</span>: data.title,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">body</span>: data.body,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">created</span>: created,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">action_url</span>: data.action_url,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">img_url</span>: data.img_url,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (notifications.current_page == notifications.last_page) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        $state.complete();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125; <span class="keyword">else</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        $state.loaded();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>在<code>controller</code>取得資料庫未讀通知的分頁資料，可改變<code>page</code>參數取得不同頁數資料，通過此網址範例<code>https://example.com.tw/notifications?page=1</code>訪問，</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;middleware(<span class="string">&#x27;auth&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$request</span>-&gt;user(); <span class="comment">// 當前user</span></span><br><span class="line">    <span class="variable">$query</span> = <span class="variable">$user</span>-&gt;unreadNotifications(); <span class="comment">// 取得未讀訊息</span></span><br><span class="line">    <span class="variable">$notifications</span> = <span class="variable">$query</span>-&gt;paginate(<span class="number">5</span>); <span class="comment">// 通知五個為一頁</span></span><br><span class="line">    <span class="variable">$notifications</span>-&gt;getCollection()-&gt;transform(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 日期時間轉換為 ISO 8601</span></span><br><span class="line">        <span class="variable">$value</span>-&gt;created = <span class="variable">$value</span>-&gt;created_at-&gt;toIso8601String();</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable">$total</span> = <span class="variable">$user</span>-&gt;unreadNotifications-&gt;count(); <span class="comment">// 未讀訊息數</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> compact(<span class="string">&#x27;notifications&#x27;</span>, <span class="string">&#x27;total&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="Documentation" href="https://peachscript.github.io/vue-infinite-loading/"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">Documentation</p><p class="url">https://peachscript.github.io/vue-infinite-loading/</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Notifications API 瀏覽器通知</title>
      <link href="/2022/02/16/notification-api/"/>
      <url>/2022/02/16/notification-api/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Notifications-API-瀏覽器通知"><a href="#Notifications-API-瀏覽器通知" class="headerlink" title="Notifications API 瀏覽器通知"></a>Notifications API 瀏覽器通知</h1><h2 id="通知-API"><a href="#通知-API" class="headerlink" title="通知 API"></a>通知 API</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API">Notifications API</a>允許我們向用戶顯示通知。 它非常強大且易於使用。在可能的情況下，它使用與原生應用程序相同的機制，提供完全原生的外觀和感覺。</p><p>我們可以將 <code>Notifications API</code> 分成兩個核心區域（這些是非技術性的，也不屬於規範的一部分）。調用 API (<strong>Invocation API</strong>) 控制如何使您的通知出現，包括樣式和振動。我們從頁面（或從服務器，在推送通知的情況下）創建（或調用）通知。交互 API 控制用戶與通知互動時發生的情況。 用戶交互在 service worker 中處理。</p><h3 id="請求許可"><a href="#請求許可" class="headerlink" title="請求許可"></a>請求許可</h3><p>在創建通知之前，我們需要獲得用戶的許可。放在主 JS 文件中</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Notification.requestPermission(<span class="function"><span class="keyword">function</span> (<span class="params">status</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Notification permission status:&quot;</span>, status);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="顯示通知"><a href="#顯示通知" class="headerlink" title="顯示通知"></a>顯示通知</h3><p>可以使用<code>showNotification</code>方法（“調用 API”）顯示來自應用程序主腳本的通知 。這是一個例子：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">displayNotification</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (Notification.permission == <span class="string">&quot;granted&quot;</span>) &#123;</span><br><span class="line">    navigator.serviceWorker.getRegistration().then(<span class="function"><span class="keyword">function</span> (<span class="params">reg</span>) </span>&#123;</span><br><span class="line">      reg.showNotification(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="通知選項"><a href="#通知選項" class="headerlink" title="通知選項"></a>通知選項</h4><p><code>showNotification</code>方法有一個可選的第二個參數來配置通知。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">displayNotification</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (Notification.permission == <span class="string">&quot;granted&quot;</span>) &#123;</span><br><span class="line">    navigator.serviceWorker.getRegistration().then(<span class="function"><span class="keyword">function</span> (<span class="params">reg</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">body</span>: <span class="string">&quot;Here is a notification body!&quot;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&quot;images/example.png&quot;</span>,</span><br><span class="line">        <span class="attr">vibrate</span>: [<span class="number">100</span>, <span class="number">50</span>, <span class="number">100</span>],</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">          <span class="attr">dateOfArrival</span>: <span class="built_in">Date</span>.now(),</span><br><span class="line">          <span class="attr">primaryKey</span>: <span class="number">1</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;;</span><br><span class="line">      reg.showNotification(<span class="string">&quot;Hello world!&quot;</span>, options);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>該<code>body</code>選項將主要描述添加到通知中。為用戶提供足夠的信息來決定如何對其採取行動。</p></li><li><p>該<code>icon</code>選項附加圖像以使通知更具視覺吸引力，但也與用戶更相關。例如，如果是來自他們朋友的消息，您可能會包含發件人頭像的圖像。</p></li><li><p>該<code>vibrate</code>選項指定接收通知的電話的振動模式。在我們的示例中，手機會振動 100 毫秒，暫停 50 毫秒，然後再次振動 100 毫秒。</p></li><li><p>該<code>data</code>選項將自定義數據附加到通知，以便服務工作者可以在用戶與通知交互時檢索它。例如，向數據添加唯一的<code>“id”</code>或<code>“key”</code>選項可以讓我們確定當服務工作者處理點擊事件時點擊了哪個通知。</p></li></ol><p><a href="https://tests.peter.sh/notification-generator/">測試通知選項網站</a></p><h4 id="向通知添加操作"><a href="#向通知添加操作" class="headerlink" title="向通知添加操作"></a>向通知添加操作</h4><p>向用戶發送簡單通知，並在用戶點擊通知時，處理通知的基本互動，可以在通知中添加上下文，就可以讓使用者在不前往網站的情況下與網站互動。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">displayNotification</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (Notification.permission == <span class="string">&quot;granted&quot;</span>) &#123;</span><br><span class="line">    navigator.serviceWorker.getRegistration().then(<span class="function"><span class="keyword">function</span> (<span class="params">reg</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> options = &#123;</span><br><span class="line">        <span class="attr">body</span>: <span class="string">&quot;Here is a notification body!&quot;</span>,</span><br><span class="line">        <span class="attr">icon</span>: <span class="string">&quot;images/example.png&quot;</span>,</span><br><span class="line">        <span class="attr">vibrate</span>: [<span class="number">100</span>, <span class="number">50</span>, <span class="number">100</span>],</span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">          <span class="attr">dateOfArrival</span>: <span class="built_in">Date</span>.now(),</span><br><span class="line">          <span class="attr">primaryKey</span>: <span class="number">1</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">actions</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">action</span>: <span class="string">&quot;explore&quot;</span>,</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&quot;Explore this new world&quot;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&quot;images/checkmark.png&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">action</span>: <span class="string">&quot;close&quot;</span>,</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&quot;Close notification&quot;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&quot;images/xmark.png&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        ],</span><br><span class="line">      &#125;;</span><br><span class="line">      reg.showNotification(<span class="string">&quot;Hello world!&quot;</span>, options);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要使用一組自定義操作的按鈕，我們在通知選項物件中添加一個操作數組。這些物件定義要向用戶顯示的操作按鈕。</p><p>動作可以有一個標識符字符串，一個包含要向用戶顯示的文本的標題，以及一個包含要在動作旁邊顯示的圖像的位置的圖標。</p><h3 id="監聽事件"><a href="#監聽事件" class="headerlink" title="監聽事件"></a>監聽事件</h3><p>現在我們需要在 <code>service worker</code> 中處理與通知互動（使用<code>“Interaction API”</code>）。用戶看到通知後，他們可以將其關閉或對其採取行動。</p><h4 id="通知點擊事件"><a href="#通知點擊事件" class="headerlink" title="通知點擊事件"></a>通知點擊事件</h4><p>當用戶點擊通知時處理。點擊後會在<code>service worker</code>內部觸發一個<code>notificationclick</code>事件。</p><p>讓我們看一下在 <code>service worker</code> 中處理 <code>click</code> 事件的代碼。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">self.addEventListener(<span class="string">&quot;notificationclick&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> notification = e.notification;</span><br><span class="line">  <span class="keyword">var</span> primaryKey = notification.data.primaryKey;</span><br><span class="line">  <span class="keyword">var</span> action = e.action;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (action === <span class="string">&quot;close&quot;</span>) &#123;</span><br><span class="line">    notification.close();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    clients.openWindow(<span class="string">&quot;http://www.example.com&quot;</span>);</span><br><span class="line">    notification.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以看到當通知的操作為<code>close</code>則關閉通知，否則開啟網頁</p><h3 id="檢查權限"><a href="#檢查權限" class="headerlink" title="檢查權限"></a>檢查權限</h3><p>始終檢查使用通知 API 的權限。請務必檢查是否已授予權限，因為狀態可能會更改：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Notification.permission === <span class="string">&quot;granted&quot;</span>) &#123;</span><br><span class="line">  <span class="comment">/* do our magic */</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (Notification.permission === <span class="string">&quot;blocked&quot;</span>) &#123;</span><br><span class="line">  <span class="comment">/* the user has previously denied push. Can&#x27;t reprompt. */</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="comment">/* show a prompt to the user */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><p>利用 vscode <a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer">LiveServe</a>套件，建立即時更新的本機伺服器，不需再存檔後重整頁面來確認。</p><h3 id="建立main-html"><a href="#建立main-html" class="headerlink" title="建立main.html"></a>建立<code>main.html</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      Notification.requestPermission(<span class="function"><span class="keyword">function</span> (<span class="params">status</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;Notification permission status:&quot;</span>, status);</span></span><br><span class="line"><span class="javascript">        registerServiceWorker();</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">registerServiceWorker</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (!(<span class="string">&quot;serviceWorker&quot;</span> <span class="keyword">in</span> navigator)) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">&quot;Service workers aren&#x27;t supported in this browser.&quot;</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">        navigator.serviceWorker</span></span><br><span class="line"><span class="javascript">          .register(<span class="string">&quot;/sw.js&quot;</span>) <span class="comment">// 註冊 service worker</span></span></span><br><span class="line"><span class="javascript">          .then(<span class="function">() =&gt;</span> initialiseServiceWorker());</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">initialiseServiceWorker</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (Notification.permission === <span class="string">&quot;granted&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">/* do our magic */</span></span></span><br><span class="line"><span class="javascript">          displayNotification();</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (Notification.permission === <span class="string">&quot;blocked&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">/* the user has previously denied push. Can&#x27;t reprompt. */</span></span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(<span class="string">&quot;用戶之前拒絕推送。 無法重新提示&quot;</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> info = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.info&quot;</span>);</span></span><br><span class="line"><span class="javascript">          info.innerHTML = <span class="string">&quot;您之前拒絕推送。 無法重新提示&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">/* show a prompt to the user */</span></span></span><br><span class="line"><span class="javascript">          <span class="keyword">var</span> info = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.info&quot;</span>);</span></span><br><span class="line"><span class="javascript">          info.innerHTML = <span class="string">&quot;請允許通知&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">displayNotification</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (Notification.permission == <span class="string">&quot;granted&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">          navigator.serviceWorker.getRegistration().then(<span class="function"><span class="keyword">function</span> (<span class="params">reg</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// reg記得在初始化之後，不然會是undefined</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> options = &#123;</span></span><br><span class="line"><span class="javascript">              <span class="attr">body</span>: <span class="string">&quot;Here is a notification body!&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="attr">icon</span>: <span class="string">&quot;/notification.png&quot;</span>,</span></span><br><span class="line"><span class="javascript">              <span class="attr">vibrate</span>: [<span class="number">100</span>, <span class="number">50</span>, <span class="number">100</span>],</span></span><br><span class="line"><span class="javascript">              <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">dateOfArrival</span>: <span class="built_in">Date</span>.now(),</span></span><br><span class="line"><span class="javascript">                <span class="attr">primaryKey</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">              &#125;,</span></span><br><span class="line"><span class="javascript">              <span class="attr">actions</span>: [</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                  <span class="attr">action</span>: <span class="string">&quot;explore&quot;</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="attr">title</span>: <span class="string">&quot;點擊前往新世界&quot;</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="attr">icon</span>: <span class="string">&quot;/share.png&quot;</span>,</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">                &#123;</span></span><br><span class="line"><span class="javascript">                  <span class="attr">action</span>: <span class="string">&quot;close&quot;</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="attr">title</span>: <span class="string">&quot;關閉通知&quot;</span>,</span></span><br><span class="line"><span class="javascript">                  <span class="attr">icon</span>: <span class="string">&quot;/close.png&quot;</span>,</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">              ],</span></span><br><span class="line"><span class="javascript">            &#125;;</span></span><br><span class="line"><span class="javascript">            reg.showNotification(<span class="string">&quot;Hello world!&quot;</span>, options);</span></span><br><span class="line"><span class="javascript">          &#125;);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;displayNotification()&quot;</span>&gt;</span>發送通知<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="建立sw-js"><a href="#建立sw-js" class="headerlink" title="建立sw.js"></a>建立<code>sw.js</code></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">self.addEventListener(<span class="string">&quot;install&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Installed&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">self.addEventListener(<span class="string">&quot;activate&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Activated&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">self.addEventListener(<span class="string">&quot;fetch&quot;</span>, <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Fetch request&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">self.addEventListener(<span class="string">&quot;notificationclick&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> notification = e.notification;</span><br><span class="line">  <span class="keyword">var</span> primaryKey = notification.data.primaryKey;</span><br><span class="line">  <span class="keyword">var</span> action = e.action;</span><br><span class="line">  <span class="comment">// 如果action是close關閉通知</span></span><br><span class="line">  <span class="keyword">if</span> (action === <span class="string">&quot;close&quot;</span>) &#123;</span><br><span class="line">    notification.close();</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 否的話開啟github，關閉通知</span></span><br><span class="line">    clients.openWindow(<span class="string">&quot;https://github.com/&quot;</span>);</span><br><span class="line">    notification.close();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a>效果如下</h3><p><img src="https://i.imgur.com/O8T13jJ.gif" alt=""></p><div class="tag link"><a class="link-card" title="介紹notifications" href="https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">介紹notifications</p><p class="url">https://developers.google.com/web/ilt/pwa/introduction-to-push-notifications</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Notifications </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 使用 wasRecentlyCreated 來檢查模型是否創建</title>
      <link href="/2022/02/16/laravel-wasRecentlyCreated/"/>
      <url>/2022/02/16/laravel-wasRecentlyCreated/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-使用-wasRecentlyCreated-來檢查模型是否創建"><a href="#Laravel-使用-wasRecentlyCreated-來檢查模型是否創建" class="headerlink" title="Laravel 使用 wasRecentlyCreated 來檢查模型是否創建"></a>Laravel 使用 <code>wasRecentlyCreated</code> 來檢查模型是否創建</h1><p>如果在當前生命週期創建模型，則模型的<code>wasRecentlyCreated</code>屬性將設為<code>true</code>，否則為<code>false</code></p><p>舉以下範例，假設我已經有一個名叫<code>Joe</code>的用戶，則<code>wasRecentlyCreated</code>會返回<code>false</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span> = User::firstOrCreate([<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;Joe&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將返回false，因為此筆項目已在資料庫，並未在此生命週期創建</span></span><br><span class="line">var_dump(<span class="variable">$user</span>-&gt;wasRecentlyCreated);</span><br></pre></td></tr></table></figure><p>當新增新用戶<code>Cherry</code>時，因是在此生命週期創建，則<code>wasRecentlyCreated</code>會返回<code>true</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span> = User::firstOrCreate([<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;Cherry&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 將返回true，因為此筆項目在此生命週期新增</span></span><br><span class="line">var_dump(<span class="variable">$user</span>-&gt;wasRecentlyCreated);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 Vue 裡使用 Laravel Localization</title>
      <link href="/2022/02/16/use-laravel-localization-in-vue/"/>
      <url>/2022/02/16/use-laravel-localization-in-vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="在-Vue-裡使用-Laravel-Localization"><a href="#在-Vue-裡使用-Laravel-Localization" class="headerlink" title="在 Vue 裡使用 Laravel Localization"></a>在 Vue 裡使用 Laravel Localization</h1><h2 id="我的開發環境"><a href="#我的開發環境" class="headerlink" title="我的開發環境"></a>我的開發環境</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// package.json</span></span><br><span class="line"><span class="string">&quot;laravel-mix&quot;</span>: <span class="string">&quot;^6.0.6&quot;</span>,</span><br><span class="line"><span class="string">&quot;vue&quot;</span>: <span class="string">&quot;^2.6.14&quot;</span>,</span><br><span class="line"><span class="comment">// composer.json</span></span><br><span class="line"><span class="string">&quot;laravel/framework&quot;</span>: <span class="string">&quot;^8.65&quot;</span>,</span><br><span class="line"><span class="string">&quot;mariuzzo/laravel-js-localization&quot;</span>: <span class="string">&quot;^1.9&quot;</span>,</span><br></pre></td></tr></table></figure><h2 id="Vue-的-Laravel-本地化包"><a href="#Vue-的-Laravel-本地化包" class="headerlink" title="Vue 的 Laravel 本地化包"></a>Vue 的 Laravel 本地化包</h2><p><a href="https://github.com/rmariuzzo/Laravel-JS-Localization">Laravel-JS-Localization</a></p><p><a href="https://github.com/kg-bot/laravel-localization-to-vue">laravel-localization-to-vue</a></p><p><a href="https://github.com/martinlindhe/laravel-vue-i18n-generator">laravel-vue-i18n-generator</a>(已停止維護)</p><p>此次範例使用<code>Laravel-JS-Localization</code></p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h3><p><code>composer require mariuzzo/laravel-js-localization</code></p><h3 id="生成-messages-js"><a href="#生成-messages-js" class="headerlink" title="生成 messages.js"></a>生成 messages.js</h3><p>Laravel-JS-Localization 包提供了一個命令，可以生成所有消息的 <code>JavaScript</code> 版本，這些消息位於：<code>app/lang</code> (Laravel 4) 或 <code>resources/lang</code> (Laravel 5) 目錄。 生成的 <code>JavaScript</code> 文件將包含您的所有消息以及 Lang.js（一個受 <code>Laravel</code> 的 <code>Translator</code> 類高度啟發的精簡庫）。</p><h4 id="生成-JS-消息"><a href="#生成-JS-消息" class="headerlink" title="生成 JS 消息"></a>生成 JS 消息</h4><p><code>php artisan lang:js</code></p><h4 id="自定義生成位置"><a href="#自定義生成位置" class="headerlink" title="自定義生成位置"></a>自定義生成位置</h4><p><code>php artisan lang:js public/assets/dist/lang.dist.js</code></p><p>更多指令查看<a href="https://github.com/rmariuzzo/Laravel-JS-Localization#Usage">Laravel-JS-Localization#Usage</a></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="發佈配置"><a href="#發佈配置" class="headerlink" title="發佈配置"></a>發佈配置</h4><p><code>php artisan vendor:publish --provider=&quot;Mariuzzo\LaravelJsLocalization\LaravelJsLocalizationServiceProvider&quot;</code></p><p>之後可以到<code>config/localization-js.php</code>修改配置，可以修改只載入哪些語系檔案，以下的範例表示只會讀取到語系資料夾下的<code>pagination.php</code>跟<code>validation.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;messages&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;pagination&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;validation&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h3 id="執行-webpack-時同時執行發佈messages-js"><a href="#執行-webpack-時同時執行發佈messages-js" class="headerlink" title="執行 webpack 時同時執行發佈messages.js"></a>執行 webpack 時同時執行發佈<code>messages.js</code></h3><p>安裝 laravel-mix-serve <code>npm i laravel-mix-serve</code></p><p>In <code>webpack.mix.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;laravel-mix-serve&quot;</span>);</span><br><span class="line">mix.serve(<span class="string">&quot;php artisan lang:js&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><p>在都會使用到的模板引入 <code>app.blade.php</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123; asset(&#x27;messages.js&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>vue</code> 中使用<code>Lang.get(&#39;messages.home&#39;);</code>取得語系訊息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; Lang.get(&quot;messages.hello&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data: () =&gt; (&#123;</span><br><span class="line">        Lang: Lang,</span><br><span class="line">    &#125;),</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>如果結構如下，就可以依照當前語系輸出對應的文字，假如當前語系是<code>&#39;zh-tw&#39;</code>，他就會找到<code>zh-tw</code>下的<code>messages.php</code>裡的<code>hello&#39; =&gt; &#39;你好&#39;</code>，及顯示<strong>你好</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/resources</span><br><span class="line">    /lang</span><br><span class="line">        /en</span><br><span class="line">            messages.php</span><br><span class="line">        /zh-tw</span><br><span class="line">            messages.php</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="Lang Documentation" href="https://github.com/rmariuzzo/Laravel-JS-Localization#Documentation"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">Lang Documentation</p><p class="url">https://github.com/rmariuzzo/Laravel-JS-Localization#Documentation</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> Vue </tag>
            
            <tag> Localization </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 事件和監聽器</title>
      <link href="/2022/02/16/laravel-event-listener/"/>
      <url>/2022/02/16/laravel-event-listener/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-事件和監聽器"><a href="#Laravel-事件和監聽器" class="headerlink" title="Laravel 事件和監聽器"></a>Laravel 事件和監聽器</h1><p><code>Laravel</code> 的事件提供了一個簡單的觀察者模式，允許訂閱和監聽應用程序中發生的各種事件。事件類通常存儲在<code>app/Events</code>目錄中，而它們的監聽器存儲在<code>app/Listeners</code>，可以利用<code>php artisan make</code>來創建相關檔案。</p><p>事件在應用程式解藕相當好用，例如:如果希望在商家創建時通知使用者，無須將商家創建的代碼與通知使用者代碼放在一起，可以引發一個<code>App\Events\StoreCreated</code>事件，監聽器可以接收並使用該事件來分派通知。</p><h2 id="創建事件和監聽器"><a href="#創建事件和監聽器" class="headerlink" title="創建事件和監聽器"></a>創建事件和監聽器</h2><p>首先先創建<code>StoreCreated</code>事件和<code>NotifyStoreCreated</code>監聽器，使用以下 artisan 指令來創建。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan make:event StoreCreated</span><br><span class="line">php artisan make:listener NotifyStoreCreated --event=&quot;StoreCreated&quot;</span><br></pre></td></tr></table></figure><p>上面的指令將分別在 <code>app/Events</code> 和 <code>app/Listeners</code> 文件夾中創建事件和監聽器。</p><h2 id="註冊事件和監聽器"><a href="#註冊事件和監聽器" class="headerlink" title="註冊事件和監聽器"></a>註冊事件和監聽器</h2><p>在<code>app/Providers/EventServiceProvider.php</code>文件中註冊您的事件和偵聽器。</p><p><code>protected $listen</code>屬性包含所有事件及其偵聽器作為鍵值對的數組。接下來，我們將事件<code>StoreCreated</code>和偵聽器添加<code>NotifyStoreCreated</code>到數組<code>$listen</code>中，如下所示。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>/<span class="title">Events</span>/<span class="title">StoreCreated</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>/<span class="title">Listeners</span>/<span class="title">NotifyStoreCreated</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EventServiceProvider</span> <span class="keyword">extends</span> <span class="title">ServiceProvider</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The event listener mappings for the application.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$listen</span> = [</span><br><span class="line">        StoreCreated::class =&gt; [</span><br><span class="line">            NotifyStoreCreated::class,</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tip "><p>可以使用此指令<code>php artisan event:list</code>查看應用程序註冊的所有事件和偵聽器的列表</p></div><h2 id="定義事件和監聽器"><a href="#定義事件和監聽器" class="headerlink" title="定義事件和監聽器"></a>定義事件和監聽器</h2><p>編輯<code>StoreCreated.php</code>，我們要在每次商家創建時發送通知，我們需要將<code>$store</code>的實例傳給<code>StoreCreated</code>，讓監聽器可以訪問<code>$store</code>的實例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/Events/StoreCreated.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Events</span>;</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Post</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StoreCreated</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Dispatchable</span>, <span class="title">InteractsWithSockets</span>, <span class="title">SerializesModels</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$store</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new event instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Store <span class="variable">$store</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$store</span> = <span class="variable">$store</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再來編輯<code>NotifyStoreCreated.php</code>，<code>NotifyStoreCreated</code>監聽器類別將用來發送通知給用戶，可以看到有一個<code>handle</code>函式，是事件將調用的方法，在這個<code>handle</code>方法中，我們將編寫必要的代碼來發送通知。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/Listeners/NotifyPostCreated.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Listeners</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Events</span>\<span class="title">StoreCreated</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Notifications</span>\<span class="title">StoreNotification</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">User</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Mail</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotifyStoreCreated</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Handle the event.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  StoreCreated $event</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params">StoreCreated <span class="variable">$event</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 要發送通知對象邏輯</span></span><br><span class="line">        <span class="variable">$users</span> = User::all();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$users</span> <span class="keyword">as</span> <span class="variable">$user</span>) &#123;</span><br><span class="line">            <span class="comment">// 傳入$store實例，發送通知</span></span><br><span class="line">            <span class="variable">$user</span>-&gt;notify(<span class="keyword">new</span> StoreNotification(<span class="variable">$event</span>-&gt;store));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="調度事件"><a href="#調度事件" class="headerlink" title="調度事件"></a>調度事件</h2><p>最後一步就是觸發<code>StoreCreated</code>事件，使用<code>event()</code>這個<code>helper</code>函式，這個函式會把事件分派給有註冊的監聽器<code>(listeners)</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># app/Http/Controllers/StoreController.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Events</span>\<span class="title">StoreCreated</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Model</span>\<span class="title">Store</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StoreController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 商家新增時邏輯</span></span><br><span class="line"></span><br><span class="line">        event(<span class="keyword">new</span> StoreCreated(<span class="variable">$store</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果事件使用<code>Illuminate\Foundation\Events\Dispatchabletrait</code>，可以像這樣調用事件的靜態<code>dispatch</code>方法。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">store</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 商家新增時邏輯</span></span><br><span class="line"></span><br><span class="line">    StoreCreated::dispatch(<span class="variable">$store</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之後在商家新增時<code>StoreCreated</code>都會引發事件並最終執行偵聽<code>NotifyStoreCreated</code>監聽器以通知用戶。</p><h2 id="補充資料"><a href="#補充資料" class="headerlink" title="補充資料"></a>補充資料</h2><div class="tag link"><a class="link-card" title="Laravel events" href="https://laravel.com/docs/9.x/events"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Laravel events</p><p class="url">https://laravel.com/docs/9.x/events</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 點擊顯示不同的 component</title>
      <link href="/2022/02/12/vue-click-show-components/"/>
      <url>/2022/02/12/vue-click-show-components/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Vue-點擊顯示不同的-component"><a href="#Vue-點擊顯示不同的-component" class="headerlink" title="Vue 點擊顯示不同的 component"></a>Vue 點擊顯示不同的 component</h1><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p><code>&quot;vue&quot;: &quot;^2.6.14&quot;</code></p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><h3 id="建立組件"><a href="#建立組件" class="headerlink" title="建立組件"></a>建立組件</h3><p>假如說有 A,B,C 三個組件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Aexample <span class="keyword">from</span> <span class="string">&quot;./components/Aexample.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Bexample <span class="keyword">from</span> <span class="string">&quot;./components/Bexample.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Cexample <span class="keyword">from</span> <span class="string">&quot;./components/Cexample.vue&quot;</span>;</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">&quot;a-example&quot;</span>, Aexample);</span><br><span class="line">Vue.component(<span class="string">&quot;b-example&quot;</span>, Bexample);</span><br><span class="line">Vue.component(<span class="string">&quot;c-example&quot;</span>, Cexample);</span><br></pre></td></tr></table></figure><h3 id="點擊切換組件"><a href="#點擊切換組件" class="headerlink" title="點擊切換組件"></a>點擊切換組件</h3><p>在 Html 中利用點擊切更換<code>currentComponent</code>變數，賦予給<code>component</code>的<code>tag</code>，預設情況下會先顯示<code>a-example</code>的組件，隨使用者點擊會切換不同的組件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;nav nav-pills nav-fill mb-3 align-items-center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;nav-link btn btn-outline-primary&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">data-toggle</span>=<span class="string">&quot;tab&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; active : currentComponent == &#x27;a-example&#x27; &#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;#&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;currentComponent = &#x27;a-example&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span>A&lt;/a</span><br><span class="line">    &gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;nav-link btn btn-outline-primary&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">data-toggle</span>=<span class="string">&quot;tab&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; active : currentComponent == &#x27;b-example&#x27; &#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;#&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;currentComponent = &#x27;b-example&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span>B&lt;/a</span><br><span class="line">    &gt;</span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">      <span class="attr">class</span>=<span class="string">&quot;nav-link btn btn-outline-primary&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">data-toggle</span>=<span class="string">&quot;tab&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:class</span>=<span class="string">&quot;&#123; active : currentComponent == &#x27;c-example&#x27; &#125;&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;#&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;currentComponent = &#x27;c-example&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span>C&lt;/a</span><br><span class="line">    &gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-content p-5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;tab-pane fade show active&quot;</span> <span class="attr">id</span>=<span class="string">&quot;detect-class&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;currentComponent&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">currentComponent</span>: <span class="string">&quot;a-example&quot;</span>, <span class="comment">// name of your component</span></span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="prop-資料"><a href="#prop-資料" class="headerlink" title="prop 資料"></a>prop 資料</h3><p>當然如果有需要 props 的資料也可以</p><p><code>&lt;component :is=&quot;currentComponent&quot; v-bind:variable=&quot;variable&quot;&gt;&lt;/component&gt;</code></p><h3 id="後計"><a href="#後計" class="headerlink" title="後計"></a>後計</h3><p>也可以將組件組成陣列的方式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">currentComponent</span>: <span class="string">&quot;a-example&quot;</span>, <span class="comment">// name of your component</span></span><br><span class="line">    <span class="attr">list</span>: [</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;A範例&quot;</span>, <span class="attr">componentName</span>: <span class="string">&quot;a-example&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;B範例&quot;</span>, <span class="attr">componentName</span>: <span class="string">&quot;b-example&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&quot;C範例&quot;</span>, <span class="attr">componentName</span>: <span class="string">&quot;c-example&quot;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>利用<code>v-for</code>循環將<code>a tag</code>顯示</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">&quot;nav-link btn btn-outline-primary&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-toggle</span>=<span class="string">&quot;tab&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:class</span>=<span class="string">&quot;&#123; active : currentComponent == value.componentName &#125;&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;#&quot;</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">click</span>=<span class="string">&quot;currentComponent = value.componentName&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-for</span>=<span class="string">&quot;(value, index) in list&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span>&#123;&#123; value.name &#125;&#125;&lt;/a</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 靜音模型觸發事件</title>
      <link href="/2022/02/12/laravel-muting-events/"/>
      <url>/2022/02/12/laravel-muting-events/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-靜音模型觸發事件"><a href="#Laravel-靜音模型觸發事件" class="headerlink" title="Laravel 靜音模型觸發事件"></a>Laravel 靜音模型觸發事件</h1><h2 id="靜音事件-Muting-Events"><a href="#靜音事件-Muting-Events" class="headerlink" title="靜音事件 Muting Events"></a>靜音事件 Muting Events</h2><p>偶爾需要暫時<strong>靜音</strong>模型觸發的所有事件。 可以使用 <code>withoutEvents</code> 方法實現此目的。 <code>withoutEvents</code> 方法接受一個閉包作為它的唯一參數。 在此閉包中執行的任何代碼都不會調度模型事件，閉包返回的任何值都將由 <code>withoutEvents</code> 方法返回</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = User::withoutEvents(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    User::findOrFail(<span class="number">1</span>)-&gt;delete();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> User::find(<span class="number">2</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="保存時靜音單個模型"><a href="#保存時靜音單個模型" class="headerlink" title="保存時靜音單個模型"></a>保存時靜音單個模型</h2><p>有時您可能希望<code>儲存</code>給定模型時不調用任何事件。可以使用 <code>saveQuietly</code> 方法完成此操作</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span> = User::findOrFail(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span>-&gt;name = <span class="string">&#x27;Victoria Faith&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span>-&gt;saveQuietly();</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="muting-events" href="https://laravel.com/docs/8.x/eloquent#muting-events"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">muting-events</p><p class="url">https://laravel.com/docs/8.x/eloquent#muting-events</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 查找月份，年份，日期資料</title>
      <link href="/2022/02/12/laravel-find-date-data/"/>
      <url>/2022/02/12/laravel-find-date-data/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-查找月份，年份，日期資料"><a href="#Laravel-查找月份，年份，日期資料" class="headerlink" title="Laravel 查找月份，年份，日期資料"></a>Laravel 查找月份，年份，日期資料</h1><h2 id="查找日期-whereDate"><a href="#查找日期-whereDate" class="headerlink" title="查找日期 whereDate()"></a>查找日期 whereDate()</h2><p>查找’2022-02-10’日期</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereDate(<span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;2022-02-10&#x27;</span>)-&gt;get();</span><br></pre></td></tr></table></figure><p>查找今天日期資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereDate(<span class="string">&#x27;created_at&#x27;</span>, Carbon::now-&gt;toDateString())-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="查找年份-whereYear"><a href="#查找年份-whereYear" class="headerlink" title="查找年份 whereYear()"></a>查找年份 whereYear()</h2><p>查找’2022’年資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereYear(<span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;2022&#x27;</span>)-&gt;get();</span><br></pre></td></tr></table></figure><p>查找今年資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereYear(<span class="string">&#x27;created_at&#x27;</span>, Carbon::now-&gt;format(<span class="string">&#x27;Y&#x27;</span>))-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="查找月份-whereMonth"><a href="#查找月份-whereMonth" class="headerlink" title="查找月份 whereMonth()"></a>查找月份 whereMonth()</h2><p>查找’2’月資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereMonth(<span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;2022&#x27;</span>)-&gt;get();</span><br></pre></td></tr></table></figure><p>查找當月資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereMonth(<span class="string">&#x27;created_at&#x27;</span>, Carbon::now-&gt;format(<span class="string">&#x27;m&#x27;</span>))-&gt;get();</span><br></pre></td></tr></table></figure><h2 id="查找日-whereDay"><a href="#查找日-whereDay" class="headerlink" title="查找日 whereDay()"></a>查找日 whereDay()</h2><p>查找’10’號資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereDay(<span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;10&#x27;</span>)-&gt;get();</span><br></pre></td></tr></table></figure><p>查找當月資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Post::whereDay(<span class="string">&#x27;created_at&#x27;</span>, Carbon::now-&gt;format(<span class="string">&#x27;d&#x27;</span>))-&gt;get();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 淺層複製及深層複製</title>
      <link href="/2022/02/12/js-shallow-copy-and-deep-copy/"/>
      <url>/2022/02/12/js-shallow-copy-and-deep-copy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-淺層複製及深層複製"><a href="#JS-淺層複製及深層複製" class="headerlink" title="JS 淺層複製及深層複製"></a>JS 淺層複製及深層複製</h1><h2 id="JS-物件參考"><a href="#JS-物件參考" class="headerlink" title="JS 物件參考"></a>JS 物件參考</h2><p>講到淺層複製及深層複製就會提到 JS 的物件參考，在 JS 裡傳值(<code>Call by value</code>)是複製的，將 num 的值複製到<code>num2</code>的新記憶體區域，例如以下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> num2 = num;</span><br></pre></td></tr></table></figure><p>而物件(陣列，函式)是利用<code>call by reference</code>，來看範例</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> people = &#123; <span class="attr">name</span>: <span class="string">&quot;Joe&quot;</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> people2 = people;</span><br><span class="line">people2.name = <span class="string">&quot;Amy&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(people == people2); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(people); <span class="comment">// &#123;name: &#x27;Amy&#x27;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(people2); <span class="comment">// &#123;name: &#x27;Amy&#x27;&#125;</span></span><br></pre></td></tr></table></figure><p>可以看到上面的範例，<code>people2</code>是參考<code>people</code>的記憶體位置，所以在<code>people2</code>更改<code>name</code>的值時，也會更改到<code>people</code>的值，因為他們<strong>指向同一個記憶體位置</strong></p><p>如要重新附值，需要使用以下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> people = &#123; <span class="attr">name</span>: <span class="string">&quot;Joe&quot;</span> &#125;;</span><br><span class="line"><span class="keyword">var</span> people2 = people;</span><br><span class="line">people2 = &#123; <span class="attr">name</span>: <span class="string">&quot;Amy&quot;</span> &#125;;</span><br><span class="line"><span class="built_in">console</span>.log(people == people2); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(people); <span class="comment">// &#123;name: &#x27;Joe&#x27;&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(people2); <span class="comment">// &#123;name: &#x27;Amy&#x27;&#125;</span></span><br></pre></td></tr></table></figure><p>但在函式裡面重新賦值，外面的變數都不會變，所以就是屬於 pass by value。</p><h2 id="淺層複製-shallow-copy"><a href="#淺層複製-shallow-copy" class="headerlink" title="淺層複製 shallow copy"></a>淺層複製 shallow copy</h2><p>以下是淺層複製的範例，可以看到利用以下方法只能改變第一層，可以發現<code>members</code>都指向同個記憶體</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> family = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;Joe家&quot;</span>,</span><br><span class="line">  <span class="attr">members</span>: &#123;</span><br><span class="line">    <span class="attr">father</span>: <span class="string">&quot;爸&quot;</span>,</span><br><span class="line">    <span class="attr">mom</span>: <span class="string">&quot;媽&quot;</span>,</span><br><span class="line">    <span class="attr">brother</span>: <span class="string">&quot;弟&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> newFamily = &#123;&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> family) &#123;</span><br><span class="line">  newFamily[key] = family[key];</span><br><span class="line">&#125;</span><br><span class="line">newFamily.name = <span class="string">&quot;Amy家&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(family === newFamily); <span class="comment">// false</span></span><br><span class="line">newFamily.members.brother = <span class="string">&quot;Timmy&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(family, newFamily);</span><br></pre></td></tr></table></figure><h3 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h3><p><code>var newFamily2 = jQuery.extend(&#123;&#125;, family);</code></p><h3 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h3><p><code>var newFamily3 = Object.assign(&#123;&#125;, family);</code></p><h2 id="深層複製-deep-copy"><a href="#深層複製-deep-copy" class="headerlink" title="深層複製 deep copy"></a>深層複製 deep copy</h2><p>先將物件轉成字串，再賦予給新變數，就可以將值複製到新的記憶體區域</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> newFamily4 = <span class="built_in">JSON</span>.parse(<span class="built_in">JSON</span>.stringify(family));</span><br><span class="line">newFamily4.name = <span class="string">&quot;Amy家&quot;</span>;</span><br><span class="line">newFamily4.members.brother = <span class="string">&quot;Timmy&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(family === newFamily4); <span class="comment">// false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> 程式概念 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS ASI 自動插入分號</title>
      <link href="/2022/02/07/js-asi/"/>
      <url>/2022/02/07/js-asi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-ASI-自動插入分號"><a href="#JS-ASI-自動插入分號" class="headerlink" title="JS ASI 自動插入分號"></a>JS ASI 自動插入分號</h1><p>ASI 全名為 「Automatic Semicolon Insertion」，中文名稱為「自動分號插入」。</p><p>以下例子為例，如在結尾沒加上分號會自行插入</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  (<span class="string">&quot;Hi&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(hi()); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>導致程式碼變成以下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hi</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">  (<span class="string">&quot;Hi&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(hi()); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>還有常見犯錯例子，也就是立即函式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;)()(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p>如下圖</p><p><img src="https://i.imgur.com/8moyFl2.jpg" alt=""></p><p>解決方法如下，結尾或開頭加上分號</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// plan A</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;)();</span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">&#125;)()(</span><br><span class="line">  <span class="comment">// plan B</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">)();</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;world&quot;</span>);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><p><strong>不會</strong>發生 ASI 的規則如下，可在頭或尾加上’;’解決:</p><ol><li>新的一行是 <code>(</code>、<code>[</code>、<code>/</code> 開始 (容易出錯的地方)</li><li>新的一行以 <code>+</code>、<code>-</code>、<code>*</code>、<code>%</code> 作開始 (會影響執行結果)</li><li>新的一行以 <code>,</code>、<code>.</code> 作開始 (需注意執行結果)</li></ol><p>一開始會想說誰不會在結尾加上分號，根本自找麻煩，結果<a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">ESLint</a>的其中一個風格 <strong>Standard</strong> 就是提倡不在結尾處加上分號</p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel use echarts Custom Calendar Icon in vue</title>
      <link href="/2022/02/07/laravel-use-echarts/"/>
      <url>/2022/02/07/laravel-use-echarts/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="laravel-use-echarts-Custom-Calendar-Icon-in-vue"><a href="#laravel-use-echarts-Custom-Calendar-Icon-in-vue" class="headerlink" title="laravel use echarts Custom Calendar Icon in vue"></a>laravel use echarts Custom Calendar Icon in vue</h1><p>如果是需要比較簡單的圖表可以直接使用<code>vue-echarts</code>，複雜的話建議使用<code>echarts</code>自行封裝，個人覺得<code>vue-echarts</code>的文件比較不詳細</p><h2 id="安裝-echarts"><a href="#安裝-echarts" class="headerlink" title="安裝 echarts"></a>安裝 echarts</h2><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><p><code>npm install echarts</code></p><h3 id="更多安裝方式"><a href="#更多安裝方式" class="headerlink" title="更多安裝方式"></a>更多安裝方式</h3><p><a href="https://echarts.apache.org/zh/download.html">echarts 官方</a></p><h2 id="安裝-vue-echarts"><a href="#安裝-vue-echarts" class="headerlink" title="安裝 vue-echarts"></a>安裝 vue-echarts</h2><h3 id="npm-amp-ESM"><a href="#npm-amp-ESM" class="headerlink" title="npm &amp; ESM"></a>npm &amp; ESM</h3><p><code>npm install echarts vue-echarts</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> ECharts <span class="keyword">from</span> <span class="string">&#x27;vue-echarts&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; use &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/core&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// import ECharts modules manually to reduce bundle size</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  CanvasRenderer</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/renderers&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BarChart</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/charts&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  GridComponent,</span><br><span class="line">  TooltipComponent</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">&#x27;echarts/components&#x27;</span></span><br><span class="line"></span><br><span class="line">use([</span><br><span class="line">  CanvasRenderer,</span><br><span class="line">  BarChart,</span><br><span class="line">  GridComponent,</span><br><span class="line">  TooltipComponent</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// register globally (or you can do it locally)</span></span><br><span class="line">app.component(<span class="string">&#x27;v-chart&#x27;</span>, ECharts)</span><br><span class="line"></span><br><span class="line">app.mount(...)</span><br></pre></td></tr></table></figure><h3 id="CDN-amp-Global-variable"><a href="#CDN-amp-Global-variable" class="headerlink" title="CDN &amp; Global variable"></a>CDN &amp; Global variable</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@3.2.26&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/echarts@5.2.2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue-echarts@6.0.2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> app = Vue.createApp(...)</span><br><span class="line"></span><br><span class="line"><span class="comment">// register globally (or you can do it locally)</span></span><br><span class="line">app.component(<span class="string">&#x27;v-chart&#x27;</span>, VueECharts)</span><br></pre></td></tr></table></figure><p>安裝相關參考<a href="https://github.com/ecomfe/vue-echarts/blob/main/README.zh-Hans.md">官方</a></p><h2 id="實作"><a href="#實作" class="headerlink" title="實作"></a>實作</h2><h3 id="範例一"><a href="#範例一" class="headerlink" title="範例一"></a>範例一</h3><p>此範例只使用<code>echarts</code>沒有使用到<code>vue-echarts</code>，因使用<code>vue-echarts</code>月份變動更改資料時會出現<code>Error: setOption should not be called during main process</code>，苦無找不到解決方法，還有小弟實力比較弱，於是使用文件比較詳細的<code>echarts</code>來實作。</p><h4 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h4><p>將<code>range</code>資料從父祖件傳入，<code>data</code>是使用<code>axios</code>的方式去取得資料</p><p>傳入資料大概長這樣<code>[[&#39;2017-01-01&#39;, &#39;2|0|1|3&#39;], [&#39;2017-01-02&#39;, &#39;2&#39;]]</code>，日期加上圖片<code>icon</code>的<code>array</code>位置</p><p><code>mounted()</code>裡的<code>nextTick</code> 的觸發時機就是在呼叫方法後，然後的第一次重新渲染完畢後。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>日期: &#123;&#123; this.date &#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">id</span>=<span class="string">&quot;main&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">class</span>=<span class="string">&quot;chart&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">:range</span>=<span class="string">&quot;this.date&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">        &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;lastMonth&quot;</span>&gt;</span>上個月<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;nextMonth&quot;</span>&gt;</span>下個月<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&quot;echarts/core&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; CalendarComponent, TooltipComponent &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/components&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; CustomChart &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/charts&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; CanvasRenderer &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/renderers&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> moment <span class="keyword">from</span> <span class="string">&#x27;moment&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">echarts.use([CalendarComponent, TooltipComponent, CustomChart, CanvasRenderer]);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&quot;example-component&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">props</span>: [<span class="string">&quot;range&quot;</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">const</span> layouts = [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            [[<span class="number">0</span>, <span class="number">0</span>]],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [-<span class="number">0.25</span>, <span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [<span class="number">0.25</span>, <span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [<span class="number">0</span>, -<span class="number">0.2</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [-<span class="number">0.2</span>, <span class="number">0.2</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [<span class="number">0.2</span>, <span class="number">0.2</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [-<span class="number">0.25</span>, -<span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [-<span class="number">0.25</span>, <span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [<span class="number">0.25</span>, -<span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                [<span class="number">0.25</span>, <span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        ];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">const</span> pathes = [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&quot;M936.857805 523.431322c0 0-42.065715-68.89513-88.786739-68.89513-46.68416 0-95.732122 71.223091-95.732122 71.223091s-44.28544-72.503296-93.440922-71.152538c-35.565466 0.977306-62.89705 30.882406-79.124275 64.06615L579.773747 790.800797c-3.253248 37.391565-5.677568 50.904371-12.002816 69.63497-6.651802 19.698688-19.544883 35.227341-31.650099 45.909606-14.30231 12.621414-29.59831 22.066586-45.854208 27.424563-16.28969 5.362074-30.098739 6.496973-51.536794 6.496973-19.498906 0-36.95104-2.963456-52.395418-8.850534-15.410586-5.887078-28.420403-14.313984-39.034573-25.246003-10.613146-10.930995-18.757939-24.08151-24.435507-39.525171-5.676544-15.443763-8.532685-40.195482-8.532685-59.270963l0-26.232454 74.435273 0c0 24.644301-0.17705 64.452915 8.81408 77.006848 9.02697 12.515021 22.756147 18.092032 41.148826 18.791014 16.728678 0.636518 30.032179-8.061645 30.032179-8.061645s11.922022-10.5472 14.992077-19.756954c2.674995-8.025805 3.565363-22.180147 3.565363-22.180147s2.080461-21.789286 2.080461-34.234675L489.399906 514.299369c-16.678502-18.827776-43.801395-61.938688-82.756096-60.927693-54.699008 1.419366-100.422144 70.059622-100.422144 70.059622s-56.065126-70.059622-93.440922-70.059622c-37.376717 0-91.077939 70.059622-91.077939 70.059622S105.343488 156.737741 476.742042 119.363584l53.70327-74.714624 51.373056 74.714624C964.889395 142.740992 936.857805 523.431322 936.857805 523.431322z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&quot;M533.504 268.288q33.792-41.984 71.68-75.776 32.768-27.648 74.24-50.176t86.528-19.456q63.488 5.12 105.984 30.208t67.584 63.488 34.304 87.04 6.144 99.84-17.92 97.792-36.864 87.04-48.64 74.752-53.248 61.952q-40.96 41.984-85.504 78.336t-84.992 62.464-73.728 41.472-51.712 15.36q-20.48 1.024-52.224-14.336t-69.632-41.472-79.872-61.952-82.944-75.776q-26.624-25.6-57.344-59.392t-57.856-74.24-46.592-87.552-21.504-100.352 11.264-99.84 39.936-83.456 65.536-61.952 88.064-35.328q24.576-5.12 49.152-1.536t48.128 12.288 45.056 22.016 40.96 27.648q45.056 33.792 86.016 80.896z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&quot;M741.06368 733.310464c8.075264-29.262438 20.615373-40.632422 14.64105-162.810061C966.089728 361.789952 967.93897 72.37847 967.855002 54.693683c0.279347-0.279347 0.418509-0.419533 0.418509-0.419533s-0.17705-0.00512-0.428749-0.00512c0-0.251699 0-0.428749 0-0.428749s-0.139162 0.14633-0.418509 0.425677c-17.695744-0.083866-307.10784 1.760051-515.833958 212.142592-122.181632-5.984256-133.55305 6.563533-162.815693 14.644531C235.35063 295.798886 103.552614 436.975309 90.630758 486.076621c-12.921856 49.105408 39.634227 56.859034 58.579558 58.581197 18.953421 1.724314 121.471386-9.475789 130.09111 4.309094 0 0 16.367411 11.200102 17.226035 41.346662 0.850432 29.796659 15.173222 71.354163 37.123994 97.267302-0.028672 0.027648-0.05632 0.054272-0.083866 0.074752 0.158618 0.13097 0.316211 0.261939 0.474829 0.390861 0.129946 0.149402 0.261939 0.319283 0.393011 0.468685 0.019456-0.019456 0.04608-0.049152 0.075776-0.075674 25.918362 21.961216 67.477504 36.272128 97.269248 37.122458 30.149837 0.859546 41.354547 17.234534 41.354547 17.234534 13.779354 8.608051 2.583962 111.122842 4.302131 130.075546 1.727386 18.95168 9.477222 71.498445 58.579558 58.576077C585.12896 918.526771 726.311117 786.734182 741.06368 733.310464zM595.893555 426.206003c-39.961702-39.965184-39.961702-104.75991 0-144.720077 39.970918-39.96928 104.768307-39.96928 144.730112 0 39.970918 39.960064 39.970918 104.75479 0 144.720077C700.661862 466.171187 635.864474 466.171187 595.893555 426.206003zM358.53312 769.516032c-31.923302-4.573184-54.890394-18.410291-71.41847-35.402342-16.984474-16.526438-30.830387-39.495475-35.405824-71.420621-4.649062-28.082586-20.856832-41.167565-38.76649-38.763827-17.906586 2.40681-77.046886 66.714419-80.857805 89.475891-3.80887 22.752154 29.271859 12.081152 46.424166 27.654861 17.151283 15.590093-2.139853 61.93664-14.733107 86.845952-6.441984 12.735078-10.289766 26.42176-4.22953 33.76087 7.346586 6.070272 21.03593 2.222592 33.769472-4.220109 24.912384-12.585677 71.258829-31.872922 86.842368-14.731469 15.583539 17.160806 4.911002 50.229965 27.674419 46.419251 22.754099-3.807744 87.065395-62.946611 89.466163-80.85248C399.70857 790.374093 386.627072 774.166938 358.53312 769.516032z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="string">&quot;M848.794624 939.156685 571.780416 939.156685 571.780416 653.17123l341.897539 0 0 221.100654C913.677926 909.960704 884.482867 939.156685 848.794624 939.156685zM571.780403 318.743552c-11.861606-3.210138-31.443354-8.36864-39.829709-16.176435-0.596582-0.561766-1.016218-1.246413-1.613824-1.841971-0.560845 0.596582-1.016218 1.280205-1.613824 1.841971-8.386355 7.807795-15.96631 12.965274-27.827917 16.176435l0 263.544325L141.030675 582.287877 141.030675 355.202884c0-35.687834 29.195059-64.882688 64.883302-64.882688l150.649125 0c-16.984474-9.525965-32.846438-20.56233-46.111027-32.932045-60.250624-56.144691-71.129907-137.062605-24.283034-180.767027 19.615539-18.264986 46.252237-27.124736 75.026739-27.124736 39.933133 0 83.972915 17.070797 118.995968 49.706086 20.353331 18.983322 37.722624 43.405619 50.145075 69.056819 12.457267-25.6512 29.791744-50.074419 50.180915-69.056819 35.022029-32.63529 79.062835-49.706086 118.994944-49.706086 28.74071 0 55.410176 8.860774 75.025715 27.124736 46.882611 43.704422 35.96759 124.622336-24.283034 180.767027-13.264589 12.368691-29.127578 23.40608-46.111027 32.932045l144.649234 0c35.688243 0 64.882278 29.195981 64.882278 64.882688l0 227.084948L571.780416 582.287833 571.780416 318.743508zM435.064218 147.625267c-21.476966-19.965747-49.094144-31.913882-73.868288-31.913882-7.404954 0-21.125018 1.211597-29.863322 9.386803-2.000691 1.824563-8.070144 7.439462-8.070144 21.369754 0 15.650406 8.492749 40.24873 32.319386 62.477926 29.124506 27.12576 77.202432 47.601152 111.76704 47.601152 12.176794 0 16.492237-2.666701 16.527053-2.702541C489.524736 242.54505 475.664486 185.453773 435.064218 147.625267zM577.78135 254.790963c0 0 0.034816-0.034816 0.069632-0.034816 0.807424 0 5.50871 1.790771 15.509914 1.790771 34.564608 0 82.64151-20.47529 111.76704-47.601152 23.826637-22.229299 32.283546-46.810112 32.283546-62.442189 0-13.930291-6.033613-19.562496-8.035328-21.404467-8.77312-8.17623-22.457344-9.386803-29.864346-9.386803-24.808038 0-52.390298 11.948134-73.867264 31.913882C585.325466 185.208218 571.358822 241.73865 577.78135 254.790963zM500.89513 939.156685 205.914017 939.156685c-35.688243 0-64.883302-29.195981-64.883302-64.883712L141.030714 653.17123l359.864462 0L500.895177 939.15666z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        ];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">const</span> colors = [<span class="string">&quot;#c4332b&quot;</span>, <span class="string">&quot;#16B644&quot;</span>, <span class="string">&quot;#6862FD&quot;</span>, <span class="string">&quot;#FDC763&quot;</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">option</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">tooltip</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">calendar</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">left</span>: <span class="string">&quot;center&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">top</span>: <span class="string">&quot;middle&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">cellSize</span>: [<span class="number">100</span>, <span class="number">100</span>], <span class="comment">// 日歷單元格的大小</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">yearLabel</span>: &#123; <span class="attr">show</span>: <span class="literal">true</span> &#125;, <span class="comment">// 年份文字</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">orient</span>: <span class="string">&quot;vertical&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">dayLabel</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">firstDay</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">nameMap</span>: <span class="string">&quot;cn&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">monthLabel</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">show</span>: <span class="literal">true</span>, <span class="comment">// 隱藏月份文字</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">range</span>: <span class="built_in">this</span>.range,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">series</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">type</span>: <span class="string">&quot;custom&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">coordinateSystem</span>: <span class="string">&quot;calendar&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">renderItem</span>: <span class="function"><span class="keyword">function</span> (<span class="params">params, api</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> cellPoint = api.coord(api.value(<span class="number">0</span>));</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> cellWidth = params.coordSys.cellWidth;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> cellHeight = params.coordSys.cellHeight;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> value = api.value(<span class="number">1</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> events = value &amp;&amp; value.split(<span class="string">&quot;|&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">if</span> (<span class="built_in">isNaN</span>(cellPoint[<span class="number">0</span>]) || <span class="built_in">isNaN</span>(cellPoint[<span class="number">1</span>])) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> group = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">type</span>: <span class="string">&quot;group&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">children</span>:</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    (layouts[events.length - <span class="number">1</span>] || []).map(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        <span class="function"><span class="keyword">function</span> (<span class="params">itemLayout, index</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                            <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">type</span>: <span class="string">&quot;path&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">shape</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">pathData</span>:</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        pathes[+events[index]],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">x</span>: -<span class="number">8</span>, <span class="comment">// 圖標左右偏移量</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">y</span>: -<span class="number">4</span>, <span class="comment">// 圖標上下偏移量</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">width</span>: <span class="number">20</span>, <span class="comment">// 圖標寬度</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">height</span>: <span class="number">20</span>, <span class="comment">// 圖標高度</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">position</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    cellPoint[<span class="number">0</span>] +</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        echarts.number.linearMap(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            itemLayout[<span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [-<span class="number">0.5</span>, <span class="number">0.5</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                -cellWidth / <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                cellWidth / <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            ]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        ),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    cellPoint[<span class="number">1</span>] +</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        echarts.number.linearMap(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            itemLayout[<span class="number">1</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [-<span class="number">0.5</span>, <span class="number">0.5</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                -cellHeight /</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                    <span class="number">2</span> +</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                    <span class="number">20</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                cellHeight / <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            ]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        ),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">style</span>: api.style(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">fill</span>: colors[</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        +events[index]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                &#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                            &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    ) || [],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            group.children.push(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">type</span>: <span class="string">&quot;text&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">style</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">x</span>: cellPoint[<span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">y</span>: cellPoint[<span class="number">1</span>] - cellHeight / <span class="number">2</span> + <span class="number">15</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">text</span>: echarts.format.formatTime(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        <span class="string">&quot;dd&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        api.value(<span class="number">0</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    ),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">fill</span>: <span class="string">&quot;#777&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">textFont</span>: api.font(&#123; <span class="attr">fontSize</span>: <span class="number">20</span> &#125;), <span class="comment">// 日期文字大小</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">return</span> group;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">dimensions</span>: [<span class="string">&quot;日期&quot;</span>, <span class="string">&quot;折扣類型&quot;</span>], <span class="comment">// 鼠標滑過時顯示的文字</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="comment">// data: getVirtulData(this.storeId),</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">data</span>: <span class="string">&#x27;&#x27;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">date</span>: <span class="built_in">this</span>.range,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">myChart</span>: <span class="string">&quot;&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">format</span>: <span class="string">&quot;YYYY-MM&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">watch</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="comment">// 如果range变化，则重新设置date</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">date</span>(<span class="params">val</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.date = val;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">console</span>.log(<span class="string">&quot;日期變更&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">nextMonth</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                moment(<span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range).format(<span class="built_in">this</span>.format) &lt;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                moment().add(<span class="number">1</span>, <span class="string">&quot;y&quot;</span>).format(<span class="built_in">this</span>.format)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range = moment(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                )</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    .add(<span class="number">1</span>, <span class="string">&quot;M&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    .format(<span class="built_in">this</span>.format);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.date = <span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.repaint(); <span class="comment">// 重新繪製</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">lastMonth</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">if</span> (</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                moment(<span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range).format(<span class="built_in">this</span>.format) &gt;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                moment().format(<span class="built_in">this</span>.format)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            ) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range = moment(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                )</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    .add(-<span class="number">1</span>, <span class="string">&quot;M&quot;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    .format(<span class="built_in">this</span>.format);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.date = <span class="built_in">this</span>.option.calendar[<span class="number">0</span>].range;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="built_in">this</span>.repaint(); <span class="comment">// 重新繪製</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">getVirtulData</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> self = <span class="built_in">this</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            axios</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                .post(<span class="string">&quot;/store-chart-data&quot;</span>, &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="attr">store_id</span>: self.storeId,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(<span class="string">&quot;取得圖表資料...&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="comment">// console.log(self.storeId);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="comment">// console.log(response.data);</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    self.option.series[<span class="number">0</span>].data = response.data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    self.drawPid(<span class="string">&quot;main&quot;</span>); <span class="comment">// 資料載入完畢後，重繪圖表</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="built_in">console</span>.log(error);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">drawPid</span>(<span class="params">id</span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// 基於準備好的dom，初始化echarts實例</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.myChart = echarts.init(<span class="built_in">document</span>.getElementById(id));</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="comment">// 使用鋼指定的配置項目和數據顯示圖表</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.myChart.setOption(<span class="built_in">this</span>.option);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">repaint</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.myChart.clear();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.myChart.setOption(<span class="built_in">this</span>.option);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="built_in">this</span>.$nextTick(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="built_in">this</span>.getVirtulData();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.chart</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">height</span>: <span class="number">800px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">CarbonPeriod</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getChartData</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$now</span> = Carbon::now();</span><br><span class="line">    <span class="variable">$oneYear</span> = CarbonPeriod::create(<span class="variable">$now</span>-&gt;toDateString(), <span class="variable">$now</span>-&gt;addYear()-&gt;toDateString());</span><br><span class="line">    <span class="comment">// 需在data錢加上一筆空資料，否則圖表第一筆資料為一個圖標會出錯</span></span><br><span class="line">    array_push(<span class="variable">$data</span>, [Carbon::yesterday()-&gt;format(<span class="string">&#x27;Y-m-d&#x27;</span>), <span class="string">&#x27;&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一年迴圈</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$oneYear</span> <span class="keyword">as</span> <span class="variable">$date</span>) &#123;</span><br><span class="line">        <span class="variable">$random1</span> = randon(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">        <span class="variable">$random2</span> = randon(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">        array_push(<span class="variable">$data</span>, [<span class="variable">$date</span>-&gt;format(<span class="string">&#x27;Y-m-d&#x27;</span>), <span class="string">&quot;<span class="subst">$random1</span>|<span class="subst">$random2</span>&quot;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="遇到-Bug"><a href="#遇到-Bug" class="headerlink" title="遇到 Bug"></a>遇到 Bug</h4><p>資料的第一筆如果是<code>[[&#39;2022-01-01&#39;, &#39;0&#39;]]</code>只有一個圖標，會發生錯誤，圖標會全部都沒顯示，目前還沒找到原因，所以我就在資料的最前面加上一筆空的就可以了<br><code>array_push($data, [Carbon::yesterday()-&gt;format(&#39;Y-m-d&#39;), &#39;&#39;]);</code></p><h4 id="註冊組件"><a href="#註冊組件" class="headerlink" title="註冊組件"></a>註冊組件</h4><p>到<code>app.js</code>註冊組件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> CalendarCharts <span class="keyword">from</span> <span class="string">&quot;./components/CalendarCharts.vue&quot;</span>;</span><br><span class="line">Vue.component(<span class="string">&quot;calendar-charts&quot;</span>, CalendarCharts);</span><br></pre></td></tr></table></figure><h4 id="Blade-中使用"><a href="#Blade-中使用" class="headerlink" title="Blade 中使用"></a>Blade 中使用</h4><p>在<code>blade</code>中使用<code>&lt;example-component :range=&quot;range&quot;&gt;&lt;/example-component&gt;</code><br>將<code>range</code>傳入日期資料<code>&#39;2017-01&#39;</code>就是一個月份，也可以是單日<code>&#39;2017-01-01&#39;</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">example-component</span> <span class="attr">:range</span>=<span class="string">&quot;range&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">example-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">range</span>: moment().format(<span class="string">&quot;YYYY-MM&quot;</span>),</span></span><br><span class="line"><span class="javascript">    &#125;,</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h4><p>可以選擇鼠標移過去的顯示值，只顯示哪幾個 index 內容</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">option = &#123;</span><br><span class="line">  series: &#123;</span><br><span class="line">    encode: &#123;</span><br><span class="line">      tooltip: [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h4><p>效果如下圖</p><p><img src="https://i.imgur.com/nQIFkBt.gif" alt=""></p><h3 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h3><h4 id="Vue-1"><a href="#Vue-1" class="headerlink" title="Vue"></a>Vue</h4><p>依照<a href="https://echarts.apache.org/zh/index.html">echarts</a>官方範例更改成<code>vue-echarts</code>組件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">v-chart</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">class</span>=<span class="string">&quot;chart&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">:option</span>=<span class="string">&quot;option&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">            <span class="attr">:autoresize</span>=<span class="string">&quot;true&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">        &gt;</span><span class="tag">&lt;/<span class="name">v-chart</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&quot;echarts/core&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; use &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/core&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; CalendarComponent, TooltipComponent &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/components&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; CustomChart &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/charts&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123; CanvasRenderer &#125; <span class="keyword">from</span> <span class="string">&quot;echarts/renderers&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> VChart <span class="keyword">from</span> <span class="string">&quot;vue-echarts&quot;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">use([CalendarComponent, TooltipComponent, CustomChart, CanvasRenderer]);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> layouts = [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    [[<span class="number">0</span>, <span class="number">0</span>]],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [-<span class="number">0.25</span>, <span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [<span class="number">0.25</span>, <span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [<span class="number">0</span>, -<span class="number">0.2</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [-<span class="number">0.2</span>, <span class="number">0.2</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [<span class="number">0.2</span>, <span class="number">0.2</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [-<span class="number">0.25</span>, -<span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [-<span class="number">0.25</span>, <span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [<span class="number">0.25</span>, -<span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        [<span class="number">0.25</span>, <span class="number">0.25</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">];</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> pathes = [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&quot;M936.857805 523.431322c0 0-42.065715-68.89513-88.786739-68.89513-46.68416 0-95.732122 71.223091-95.732122 71.223091s-44.28544-72.503296-93.440922-71.152538c-35.565466 0.977306-62.89705 30.882406-79.124275 64.06615L579.773747 790.800797c-3.253248 37.391565-5.677568 50.904371-12.002816 69.63497-6.651802 19.698688-19.544883 35.227341-31.650099 45.909606-14.30231 12.621414-29.59831 22.066586-45.854208 27.424563-16.28969 5.362074-30.098739 6.496973-51.536794 6.496973-19.498906 0-36.95104-2.963456-52.395418-8.850534-15.410586-5.887078-28.420403-14.313984-39.034573-25.246003-10.613146-10.930995-18.757939-24.08151-24.435507-39.525171-5.676544-15.443763-8.532685-40.195482-8.532685-59.270963l0-26.232454 74.435273 0c0 24.644301-0.17705 64.452915 8.81408 77.006848 9.02697 12.515021 22.756147 18.092032 41.148826 18.791014 16.728678 0.636518 30.032179-8.061645 30.032179-8.061645s11.922022-10.5472 14.992077-19.756954c2.674995-8.025805 3.565363-22.180147 3.565363-22.180147s2.080461-21.789286 2.080461-34.234675L489.399906 514.299369c-16.678502-18.827776-43.801395-61.938688-82.756096-60.927693-54.699008 1.419366-100.422144 70.059622-100.422144 70.059622s-56.065126-70.059622-93.440922-70.059622c-37.376717 0-91.077939 70.059622-91.077939 70.059622S105.343488 156.737741 476.742042 119.363584l53.70327-74.714624 51.373056 74.714624C964.889395 142.740992 936.857805 523.431322 936.857805 523.431322z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&quot;M533.504 268.288q33.792-41.984 71.68-75.776 32.768-27.648 74.24-50.176t86.528-19.456q63.488 5.12 105.984 30.208t67.584 63.488 34.304 87.04 6.144 99.84-17.92 97.792-36.864 87.04-48.64 74.752-53.248 61.952q-40.96 41.984-85.504 78.336t-84.992 62.464-73.728 41.472-51.712 15.36q-20.48 1.024-52.224-14.336t-69.632-41.472-79.872-61.952-82.944-75.776q-26.624-25.6-57.344-59.392t-57.856-74.24-46.592-87.552-21.504-100.352 11.264-99.84 39.936-83.456 65.536-61.952 88.064-35.328q24.576-5.12 49.152-1.536t48.128 12.288 45.056 22.016 40.96 27.648q45.056 33.792 86.016 80.896z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&quot;M741.06368 733.310464c8.075264-29.262438 20.615373-40.632422 14.64105-162.810061C966.089728 361.789952 967.93897 72.37847 967.855002 54.693683c0.279347-0.279347 0.418509-0.419533 0.418509-0.419533s-0.17705-0.00512-0.428749-0.00512c0-0.251699 0-0.428749 0-0.428749s-0.139162 0.14633-0.418509 0.425677c-17.695744-0.083866-307.10784 1.760051-515.833958 212.142592-122.181632-5.984256-133.55305 6.563533-162.815693 14.644531C235.35063 295.798886 103.552614 436.975309 90.630758 486.076621c-12.921856 49.105408 39.634227 56.859034 58.579558 58.581197 18.953421 1.724314 121.471386-9.475789 130.09111 4.309094 0 0 16.367411 11.200102 17.226035 41.346662 0.850432 29.796659 15.173222 71.354163 37.123994 97.267302-0.028672 0.027648-0.05632 0.054272-0.083866 0.074752 0.158618 0.13097 0.316211 0.261939 0.474829 0.390861 0.129946 0.149402 0.261939 0.319283 0.393011 0.468685 0.019456-0.019456 0.04608-0.049152 0.075776-0.075674 25.918362 21.961216 67.477504 36.272128 97.269248 37.122458 30.149837 0.859546 41.354547 17.234534 41.354547 17.234534 13.779354 8.608051 2.583962 111.122842 4.302131 130.075546 1.727386 18.95168 9.477222 71.498445 58.579558 58.576077C585.12896 918.526771 726.311117 786.734182 741.06368 733.310464zM595.893555 426.206003c-39.961702-39.965184-39.961702-104.75991 0-144.720077 39.970918-39.96928 104.768307-39.96928 144.730112 0 39.970918 39.960064 39.970918 104.75479 0 144.720077C700.661862 466.171187 635.864474 466.171187 595.893555 426.206003zM358.53312 769.516032c-31.923302-4.573184-54.890394-18.410291-71.41847-35.402342-16.984474-16.526438-30.830387-39.495475-35.405824-71.420621-4.649062-28.082586-20.856832-41.167565-38.76649-38.763827-17.906586 2.40681-77.046886 66.714419-80.857805 89.475891-3.80887 22.752154 29.271859 12.081152 46.424166 27.654861 17.151283 15.590093-2.139853 61.93664-14.733107 86.845952-6.441984 12.735078-10.289766 26.42176-4.22953 33.76087 7.346586 6.070272 21.03593 2.222592 33.769472-4.220109 24.912384-12.585677 71.258829-31.872922 86.842368-14.731469 15.583539 17.160806 4.911002 50.229965 27.674419 46.419251 22.754099-3.807744 87.065395-62.946611 89.466163-80.85248C399.70857 790.374093 386.627072 774.166938 358.53312 769.516032z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="string">&quot;M848.794624 939.156685 571.780416 939.156685 571.780416 653.17123l341.897539 0 0 221.100654C913.677926 909.960704 884.482867 939.156685 848.794624 939.156685zM571.780403 318.743552c-11.861606-3.210138-31.443354-8.36864-39.829709-16.176435-0.596582-0.561766-1.016218-1.246413-1.613824-1.841971-0.560845 0.596582-1.016218 1.280205-1.613824 1.841971-8.386355 7.807795-15.96631 12.965274-27.827917 16.176435l0 263.544325L141.030675 582.287877 141.030675 355.202884c0-35.687834 29.195059-64.882688 64.883302-64.882688l150.649125 0c-16.984474-9.525965-32.846438-20.56233-46.111027-32.932045-60.250624-56.144691-71.129907-137.062605-24.283034-180.767027 19.615539-18.264986 46.252237-27.124736 75.026739-27.124736 39.933133 0 83.972915 17.070797 118.995968 49.706086 20.353331 18.983322 37.722624 43.405619 50.145075 69.056819 12.457267-25.6512 29.791744-50.074419 50.180915-69.056819 35.022029-32.63529 79.062835-49.706086 118.994944-49.706086 28.74071 0 55.410176 8.860774 75.025715 27.124736 46.882611 43.704422 35.96759 124.622336-24.283034 180.767027-13.264589 12.368691-29.127578 23.40608-46.111027 32.932045l144.649234 0c35.688243 0 64.882278 29.195981 64.882278 64.882688l0 227.084948L571.780416 582.287833 571.780416 318.743508zM435.064218 147.625267c-21.476966-19.965747-49.094144-31.913882-73.868288-31.913882-7.404954 0-21.125018 1.211597-29.863322 9.386803-2.000691 1.824563-8.070144 7.439462-8.070144 21.369754 0 15.650406 8.492749 40.24873 32.319386 62.477926 29.124506 27.12576 77.202432 47.601152 111.76704 47.601152 12.176794 0 16.492237-2.666701 16.527053-2.702541C489.524736 242.54505 475.664486 185.453773 435.064218 147.625267zM577.78135 254.790963c0 0 0.034816-0.034816 0.069632-0.034816 0.807424 0 5.50871 1.790771 15.509914 1.790771 34.564608 0 82.64151-20.47529 111.76704-47.601152 23.826637-22.229299 32.283546-46.810112 32.283546-62.442189 0-13.930291-6.033613-19.562496-8.035328-21.404467-8.77312-8.17623-22.457344-9.386803-29.864346-9.386803-24.808038 0-52.390298 11.948134-73.867264 31.913882C585.325466 185.208218 571.358822 241.73865 577.78135 254.790963zM500.89513 939.156685 205.914017 939.156685c-35.688243 0-64.883302-29.195981-64.883302-64.883712L141.030714 653.17123l359.864462 0L500.895177 939.15666z&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">];</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">const</span> colors = [<span class="string">&quot;#c4332b&quot;</span>, <span class="string">&quot;#16B644&quot;</span>, <span class="string">&quot;#6862FD&quot;</span>, <span class="string">&quot;#FDC763&quot;</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="function"><span class="keyword">function</span> <span class="title">getVirtulData</span>(<span class="params">year</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  year = year || <span class="string">&#x27;2017&#x27;</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">let</span> date = +echarts.number.parseDate(year + <span class="string">&#x27;-01-01&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">let</span> end = +echarts.number.parseDate(+year + <span class="number">1</span> + <span class="string">&#x27;-01-01&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">let</span> dayTime = <span class="number">3600</span> * <span class="number">24</span> * <span class="number">1000</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">let</span> data = [];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">for</span> (<span class="keyword">let</span> time = date; time &lt; end; time += dayTime) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">let</span> items = [];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">let</span> eventCount = <span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * pathes.length);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; eventCount; i++) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      items.push(<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random() * (pathes.length - <span class="number">1</span>)));</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    data.push([echarts.format.formatTime(<span class="string">&#x27;yyyy-MM-dd&#x27;</span>, time), items.join(<span class="string">&#x27;|&#x27;</span>)]);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  <span class="keyword">return</span> data;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">name</span>: <span class="string">&quot;calendar-charts&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">components</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        VChart,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="attr">option</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">tooltip</span>: &#123;&#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">calendar</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">left</span>: <span class="string">&quot;center&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">top</span>: <span class="string">&quot;middle&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">cellSize</span>: [<span class="number">70</span>, <span class="number">70</span>], <span class="comment">// 日歷單元格的大小</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">yearLabel</span>: &#123; <span class="attr">show</span>: <span class="literal">false</span> &#125;, <span class="comment">// 年份文字</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">orient</span>: <span class="string">&quot;vertical&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">dayLabel</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">firstDay</span>: <span class="number">1</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">nameMap</span>: <span class="string">&quot;cn&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">monthLabel</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="attr">show</span>: <span class="literal">false</span>, <span class="comment">// 隱藏月份文字</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">range</span>: <span class="string">&quot;2017-03&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="attr">series</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">type</span>: <span class="string">&quot;custom&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">coordinateSystem</span>: <span class="string">&quot;calendar&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">renderItem</span>: <span class="function"><span class="keyword">function</span> (<span class="params">params, api</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> cellPoint = api.coord(api.value(<span class="number">0</span>));</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> cellWidth = params.coordSys.cellWidth;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> cellHeight = params.coordSys.cellHeight;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> value = api.value(<span class="number">1</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> events = value &amp;&amp; value.split(<span class="string">&quot;|&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">if</span> (<span class="built_in">isNaN</span>(cellPoint[<span class="number">0</span>]) || <span class="built_in">isNaN</span>(cellPoint[<span class="number">1</span>])) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="keyword">return</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">const</span> group = &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">type</span>: <span class="string">&quot;group&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">children</span>:</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    (layouts[events.length - <span class="number">1</span>] || []).map(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        <span class="function"><span class="keyword">function</span> (<span class="params">itemLayout, index</span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                            <span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">type</span>: <span class="string">&quot;path&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">shape</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">pathData</span>:</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        pathes[+events[index]],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">x</span>: -<span class="number">8</span>, <span class="comment">// 圖標左右偏移量</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">y</span>: -<span class="number">8</span>, <span class="comment">// 圖標上下偏移量</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">width</span>: <span class="number">16</span>, <span class="comment">// 圖標寬度</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">height</span>: <span class="number">16</span>, <span class="comment">// 圖標高度</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">position</span>: [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    cellPoint[<span class="number">0</span>] +</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        echarts.number.linearMap(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            itemLayout[<span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [-<span class="number">0.5</span>, <span class="number">0.5</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                -cellWidth / <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                cellWidth / <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            ]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        ),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    cellPoint[<span class="number">1</span>] +</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        echarts.number.linearMap(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            itemLayout[<span class="number">1</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [-<span class="number">0.5</span>, <span class="number">0.5</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            [</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                -cellHeight /</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                    <span class="number">2</span> +</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                    <span class="number">20</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                                cellHeight / <span class="number">2</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                            ]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        ),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                <span class="attr">style</span>: api.style(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    <span class="attr">fill</span>: colors[</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                        +events[index]</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                    ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                                &#125;),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                            &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    ) || [],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            group.children.push(&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">type</span>: <span class="string">&quot;text&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                <span class="attr">style</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">x</span>: cellPoint[<span class="number">0</span>],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">y</span>: cellPoint[<span class="number">1</span>] - cellHeight / <span class="number">2</span> + <span class="number">15</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">text</span>: echarts.format.formatTime(</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        <span class="string">&quot;dd&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                        api.value(<span class="number">0</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    ),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">fill</span>: <span class="string">&quot;#777&quot;</span>,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                    <span class="attr">textFont</span>: api.font(&#123; <span class="attr">fontSize</span>: <span class="number">14</span> &#125;), <span class="comment">// 日期文字大小</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                                &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            &#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                            <span class="keyword">return</span> group;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">dimensions</span>: [<span class="literal">undefined</span>, &#123; <span class="attr">type</span>: <span class="string">&#x27;ordinal&#x27;</span> &#125;], <span class="comment">// 鼠標滑過時顯示的文字</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="attr">data</span>: getVirtulData(),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                ],</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="css"></span></span></span><br><span class="line"><span class="css"><span class="xml"><span class="selector-class">.chart</span> &#123;</span></span></span><br><span class="line"><span class="css"><span class="xml">    <span class="attribute">height</span>: <span class="number">800px</span>;</span></span></span><br><span class="line"><span class="css"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="css"><span class="xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="註冊組件-1"><a href="#註冊組件-1" class="headerlink" title="註冊組件"></a>註冊組件</h4><p>到<code>app.js</code>註冊組件</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> CalendarCharts <span class="keyword">from</span> <span class="string">&quot;./components/CalendarCharts.vue&quot;</span>;</span><br><span class="line">Vue.component(<span class="string">&quot;calendar-charts&quot;</span>, CalendarCharts);</span><br></pre></td></tr></table></figure><h4 id="Blade-中使用-1"><a href="#Blade-中使用-1" class="headerlink" title="Blade 中使用"></a>Blade 中使用</h4><p>在 blade 中使用<code>&lt;calendar-charts&gt;&lt;/calendar-charts&gt;</code></p><h4 id="成果-1"><a href="#成果-1" class="headerlink" title="成果"></a>成果</h4><p>效果如下圖</p><p><img src="https://i.imgur.com/2Fh1Fk1.png" alt=""></p><div class="tag link"><a class="link-card" title="Apache ECharts" href="https://echarts.apache.org/zh/index.html"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Apache ECharts</p><p class="url">https://echarts.apache.org/zh/index.html</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> echarts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 執行緒與同步,非同步</title>
      <link href="/2022/01/23/js-synchronous-and-asynchronous/"/>
      <url>/2022/01/23/js-synchronous-and-asynchronous/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-執行緒與同步-非同步"><a href="#JS-執行緒與同步-非同步" class="headerlink" title="JS 執行緒與同步,非同步"></a>JS 執行緒與同步,非同步</h1><h2 id="單執行緒"><a href="#單執行緒" class="headerlink" title="單執行緒"></a>單執行緒</h2><p>JavaScript 是一種單執行緒的程式語言，單執行緒是一種作業系統的概念。</p><p>單執行緒的程式，有一個特性就是順序執行，就是都是一步一步來，前面還沒完成，就不會往後執行。</p><h2 id="同步範例"><a href="#同步範例" class="headerlink" title="同步範例"></a>同步範例</h2><p>輸出 吃晚餐 -&gt; 洗澡 -&gt; 睡覺，也就是同步執行，函式一個接一個完成</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">eatDinner</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;吃晚餐&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bath</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;洗澡&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;睡覺&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  eatDinner();</span><br><span class="line">  bath();</span><br><span class="line">  sleep();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">go();</span><br></pre></td></tr></table></figure><h2 id="事件佇列"><a href="#事件佇列" class="headerlink" title="事件佇列"></a>事件佇列</h2><p>我們可以使用 setTimeout 模擬非同步行為，而<strong>setTimeout 是一個瀏覽器提供的 API ，而不是 JS 引擎本身的功能</strong></p><p>JavaScript 本身是同步的，當他需要去呼叫其他資源使用時，因無法準確知道其完成時間，所以會以非同步的方式處理。</p><p>函式呼叫順序還是跟同步是一樣的，但在 setTimeout 裡的 function 會先移到事件佇列，等待其他同步執行完成後才執行，這邊是設定三秒後回傳，<strong>就算是設定 0 秒他也會將函式移動到事件佇列</strong></p><p>佇列內的任務會在主執行緒完成它自己的工作後執行，所以它並不會阻擋後續 Javascript 程式碼的執行。在佇列內的操作會盡快完成並將結果回傳給 Javascript 環境。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getOffWork</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;下班&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callMom</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;打電話給媽媽&quot;</span>);</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;媽媽回電&quot;</span>);</span><br><span class="line">  &#125;, <span class="number">3000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">buyDinner</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;買晚餐&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  getOffWork();</span><br><span class="line">  callMom();</span><br><span class="line">  buyDinner();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">go();</span><br></pre></td></tr></table></figure><p>輸出如下</p><p><img src="https://i.imgur.com/Z4tQNLr.gif" alt=""></p><p>再來看看執行堆疊，程式也是依序執行，但會先將 setTimeout 你的函式先放到事件佇列等待同步執行完畢，在執行</p><p><img src="https://i.imgur.com/XJJWB3v.jpg" alt=""></p><p><img src="https://i.imgur.com/bw8gmFh.gif" alt=""></p><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><ul><li>setTimeout 有設定秒數，可以知道哪個函式需先被執行</li><li>setTimeout 沒有設定秒數，則函式執行順序為隨機，此情況可以用 Promise(代表瀏覽器述說著：「我承諾我會盡快給予你一個答覆」) 來解決</li><li>監聽事件則是等使用者觸發才會執行事件，稱為非同步回呼</li><li>AJAX ，Axios，Fetch 也是非同步事件，須等他回傳資料才會有資料</li></ul><div class="tag link"><a class="link-card" title="非同步的 JavaScript 介紹" href="https://developer.mozilla.org/zh-TW/docs/Learn/JavaScript/Asynchronous/Introducing"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">非同步的 JavaScript 介紹</p><p class="url">https://developer.mozilla.org/zh-TW/docs/Learn/JavaScript/Asynchronous/Introducing</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 記憶體存放與釋放</title>
      <link href="/2022/01/23/js-memory-storage-and-release/"/>
      <url>/2022/01/23/js-memory-storage-and-release/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-記憶體存放與釋放"><a href="#JS-記憶體存放與釋放" class="headerlink" title="JS 記憶體存放與釋放"></a>JS 記憶體存放與釋放</h1><p>JavaScript 引擎具有記憶體回收的機制，會釋放不再使用的變數記憶體，基本概念為：「沒有任何的參考指向它」時則會釋放記憶體。</p><p>首先先創建一個產生大量字串的函式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rendomString</span>(<span class="params">length</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> characters =</span><br><span class="line">    <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> charactersLength = characters.length;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">    result += characters.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * charactersLength));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="範例一：使變數維持可參考的狀態（不會釋放記憶體）"><a href="#範例一：使變數維持可參考的狀態（不會釋放記憶體）" class="headerlink" title="範例一：使變數維持可參考的狀態（不會釋放記憶體）"></a>範例一：使變數維持可參考的狀態（不會釋放記憶體）</h2><p>定義一個全域變數 getData，此變數會持續維持可被參考的狀態。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> getData = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_memory</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    getData.push(rendomString(<span class="number">5000</span>));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_memory();</span><br><span class="line"><span class="built_in">console</span>.log(getData);</span><br></pre></td></tr></table></figure><p>可以到瀏覽器 F12 的記憶體，點選拍攝堆積快照，可以看到記憶體容量為 6.4MB</p><p><img src="https://i.imgur.com/J5Z4ZKX.gif" alt=""></p><h2 id="範例二：使變數無法再次被參考（執行後釋放記憶體）"><a href="#範例二：使變數無法再次被參考（執行後釋放記憶體）" class="headerlink" title="範例二：使變數無法再次被參考（執行後釋放記憶體）"></a>範例二：使變數無法再次被參考（執行後釋放記憶體）</h2><p>將變數限制在函式作用域，使變數無法再被外部參考，執行後就會釋放記憶體。</p><p>改成以下寫法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_memory</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> getData = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">    getData.push(rendomString(<span class="number">5000</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(getData);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test_memory();</span><br></pre></td></tr></table></figure><p>再到瀏覽器 F12 的記憶體，點選拍攝堆積快照，可以看到記憶體容量一樣為為 6.4MB，但是照理來講記憶體應該已被釋放，那是因為<strong>Chrome 的 console 也有占用到記憶體</strong>的，所以在清除後可以看到變成 1.4MB</p><p><img src="https://i.imgur.com/UQ6JiPs.gif" alt=""></p><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>每個人 Chrome 瀏覽器環境不同，造成記憶體大小不同，是因為有安裝瀏覽器插件而有所不同，記憶體存放位置，就是存放在用戶端電腦以及手機，因此每個人不同的裝置也會影響網頁渲染的速度。</p><div class="tag link"><a class="link-card" title="記憶體管理" href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Memory_Management"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">記憶體管理</p><p class="url">https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Memory_Management</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript 提升（Hoisting）</title>
      <link href="/2022/01/23/js-hoisting/"/>
      <url>/2022/01/23/js-hoisting/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Javascript-提升（Hoisting）"><a href="#Javascript-提升（Hoisting）" class="headerlink" title="Javascript 提升（Hoisting）"></a>Javascript 提升（Hoisting）</h1><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>提升（Hoisting）是在 <a href="https://www.ecma-international.org/ecma-262/6.0/index.html">ECMAScript® 2015 Language Specification</a> 裡面找不到的專有名詞。它是一種釐清 JaveScript 在執行階段內文如何運行的思路（尤其是在創建和執行階段）。然而，提升一詞可能會引起誤解：例如，提升看起來是單純地將變數和函式宣告，移動到程式的區塊頂端，然而並非如此。變數和函數的宣告會在編譯階段就被放入記憶體，但實際位置和程式碼中完全一樣。 by. MDN</p><h2 id="創造環境與執行"><a href="#創造環境與執行" class="headerlink" title="創造環境與執行"></a>創造環境與執行</h2><p>在創造環境的時候會先將 a 變數寫入記憶體，執行環境才將 1 賦予給 a。</p><p><img src="https://i.imgur.com/f4VbIR1.jpg" alt=""></p><h2 id="函式陳述式創造階段"><a href="#函式陳述式創造階段" class="headerlink" title="函式陳述式創造階段"></a>函式陳述式創造階段</h2><p>而函式陳述式在創造環境就被寫入，在執行任何程式碼前，JavaScript 會把函式宣告放進記憶體裡面，這樣做的優點是：可以在程式碼宣告該函式之前使用它。</p><p><img src="https://i.imgur.com/xHSMtNn.jpg" alt=""></p><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><h3 id="範例-1"><a href="#範例-1" class="headerlink" title="範例 1"></a>範例 1</h3><p>函式與變數範例</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// undefined</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下輸出 你好</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">hello();</span><br></pre></td></tr></table></figure><p>將以上程式碼拆解，就可以看到 a 是在執行階段才被賦予值，而函式陳述式在創造階段就被創造所以可以輸出”你好”</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 創造階段</span></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="comment">// 執行階段</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 創造階段</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;你好&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 執行階段</span></span><br><span class="line">hello();</span><br></pre></td></tr></table></figure><h3 id="範例-2"><a href="#範例-2" class="headerlink" title="範例 2"></a>範例 2</h3><p>函式範例</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hello = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;函式表達式&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;函式陳述式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">hello(); <span class="comment">// 函式表達式</span></span><br></pre></td></tr></table></figure><p>他會輸出 ‘函式表達式’ 因為<strong>創造階段函式優先</strong>，將以上分解</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 創造階段</span></span><br><span class="line"><span class="keyword">var</span> hello;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;函式陳述式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 執行</span></span><br><span class="line">hello = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;函式表達式&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">hello(); <span class="comment">// 函式表達式</span></span><br></pre></td></tr></table></figure><h3 id="範例-3"><a href="#範例-3" class="headerlink" title="範例 3"></a>範例 3</h3><p>再看看這個範例</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 以下輸出 undefined</span></span><br><span class="line">hello();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> text = <span class="string">&quot;Hello World&quot;</span>;</span><br></pre></td></tr></table></figure><p>將範例依照上面所說邏輯拆解，就可以看到在函式呼叫時，還未將 text 賦予 Hello World，所以會輸出 undefined</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 創造階段</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(text);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> text;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 執行</span></span><br><span class="line">hello(); <span class="comment">// undefined</span></span><br><span class="line">text = <span class="string">&quot;Hello World&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="範例-4"><a href="#範例-4" class="headerlink" title="範例 4"></a>範例 4</h3><p>看到可能會想說怎麼不是先輸出’我是第一個函式’再輸出’我是第二個函式’</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;我是第一個函式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">hello(); <span class="comment">// 我是第二個函式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;我是第二個函式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">hello(); <span class="comment">// 我是第二個函式</span></span><br></pre></td></tr></table></figure><p>來將上述範例分解，可以看到輸出’我是第一個函式’的函式被覆蓋掉了，所以都會輸出相同內容</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 創造階段</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;我是第一個函式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;我是第二個函式&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 執行</span></span><br><span class="line">hello();</span><br><span class="line">hello();</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="提升（Hoisting" href="https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">提升（Hoisting</p><p class="url">https://developer.mozilla.org/zh-TW/docs/Glossary/Hoisting</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 是如何運行</title>
      <link href="/2022/01/23/how-js-works/"/>
      <url>/2022/01/23/how-js-works/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JavaScript-是如何運行"><a href="#JavaScript-是如何運行" class="headerlink" title="JavaScript 是如何運行"></a>JavaScript 是如何運行</h1><h2 id="直譯式語言"><a href="#直譯式語言" class="headerlink" title="直譯式語言"></a>直譯式語言</h2><p>JS 是直譯式語言，不須先指定型別，也就是動態的語言，例如:JavaScript、Python、Ruby 等等。<br>也被稱作高階語言(High-level programming language)，就是被高度封裝了的程式語言，離電腦的底層比較遠，跟編譯式語言對比起來，編譯式語言就是相對低階的</p><p><img src="https://i.imgur.com/5APsZdZ.jpg" alt=""></p><p>編譯式 vs. 直譯式</p><div class="table-container"><table><thead><tr><th>/</th><th>直譯式語言</th><th>編譯式語言</th></tr></thead><tbody><tr><td>除錯速度</td><td>快</td><td>慢</td></tr><tr><td>執行速度</td><td>慢</td><td>快</td></tr><tr><td>開發速度</td><td>快</td><td>慢</td></tr><tr><td>可獨立執行</td><td>否，需依賴執行環境</td><td>是</td></tr></tbody></table></div><h2 id="直譯式轉換過程"><a href="#直譯式轉換過程" class="headerlink" title="直譯式轉換過程"></a>直譯式轉換過程</h2><p><img src="https://i.imgur.com/J0kwU8o.jpg" alt=""></p><p>我們可以到<a href="https://esprima.org/demo/parse.html#">Esprima</a>查看這個過程</p><h3 id="語法單元化"><a href="#語法單元化" class="headerlink" title="語法單元化"></a>語法單元化</h3><p>將詞彙解析，在這並不會知道甚麼是變數，只會辨識一些 ketword 或是標點符號</p><p><img src="https://i.imgur.com/Hjvlgl3.jpg" alt=""></p><h3 id="抽象結構數"><a href="#抽象結構數" class="headerlink" title="抽象結構數"></a>抽象結構數</h3><p>到這邊才知道我們正在定義一個變數，但還沒執行，要到代碼生成之後才執行，但因執行環境不同生成過程並不一樣</p><p><img src="https://i.imgur.com/T1eeCiP.jpg" alt=""></p><h2 id="LHS-RHS"><a href="#LHS-RHS" class="headerlink" title="LHS, RHS"></a>LHS, RHS</h2><h3 id="LHS-left-hand-side"><a href="#LHS-left-hand-side" class="headerlink" title="LHS(left-hand side)"></a>LHS(left-hand side)</h3><p><strong>LHS 用來賦予值到左邊的變數上</strong></p><p>此範例將 1 賦予到左邊的變數上</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>當賦予發生錯誤<code>Uncaught SyntaxError: Invalid left-hand side in assignment</code>分配中的左邊無效</p><p><img src="https://i.imgur.com/v652wCq.jpg" alt=""></p><h3 id="RHS-right-hand-side"><a href="#RHS-right-hand-side" class="headerlink" title="RHS(right-hand side)"></a>RHS(right-hand side)</h3><p><strong>RHS 取值來自於右側的變數上</strong></p><p>此範例就是將會從右側取值，記得要先定義 num 變數，不然會發生錯誤</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(num);</span><br></pre></td></tr></table></figure><h2 id="語法作用域"><a href="#語法作用域" class="headerlink" title="語法作用域"></a>語法作用域</h2><p>JS 屬於語法作用域也稱為靜態作用域，有靜態當然也有動態來看看差別</p><p><img src="https://i.imgur.com/EYZ0U9A.jpg" alt=""></p><div class="table-container"><table><thead><tr><th>/</th><th>靜態作用域</th><th>動態作用域</th></tr></thead><tbody><tr><td>差別</td><td>變數作用域在語法解析時，就已經確定作用域，且不會再改變</td><td>變數的作用域再函式調用時才決定</td></tr></tbody></table></div><h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><p>JS 在函式中會先尋找該函式裡是否由此變數名稱的變數，若沒有就會往外查找，再找不到就會出現錯誤</p><p><img src="https://i.imgur.com/RRi4M2J.jpg" alt=""></p><p>在此舉例，fun1 會先尋找 fun1 裡是否有 num 變數，找不到所以他向全域尋找，所以會輸出 1。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(num); <span class="comment">// 語法作用域: 1</span></span><br><span class="line">  <span class="comment">// 如果是動態作用輸出 2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> num = <span class="number">2</span>;</span><br><span class="line">  fun1();</span><br><span class="line">&#125;</span><br><span class="line">fun2();</span><br></pre></td></tr></table></figure><h2 id="執行環境"><a href="#執行環境" class="headerlink" title="執行環境"></a>執行環境</h2><p>這邊來講講執行環境與執行堆疊</p><p>函式執行環境，要在 call 函式之後才會出現</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">callMe</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/O66SNem.jpg" alt=""></p><p>全域執行環境在一開啟時就會執行</p><p><img src="https://i.imgur.com/x0Mndwz.jpg" alt=""></p><h3 id="執行堆疊"><a href="#執行堆疊" class="headerlink" title="執行堆疊"></a>執行堆疊</h3><p>JS 執行是一層一層堆疊，離開時也是一層一層離開</p><p>依照下圖範例，執行環境依照，<strong>全域環境-&gt;fun2 函式-&gt;fun1 函式</strong>，的方式堆疊，<br>再由 f<strong>un1 先離開-&gt;fun2 函式離開，然後回到全域環境</strong></p><p><img src="https://i.imgur.com/55MPm1v.gif" alt=""></p><div class="tag link"><a class="link-card" title="JavaScript 是什麼?" href="https://developer.mozilla.org/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">JavaScript 是什麼?</p><p class="url">https://developer.mozilla.org/zh-TW/docs/Learn/JavaScript/First_steps/What_is_JavaScript</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel8 Scout Search</title>
      <link href="/2022/01/04/laravel-scout-search-example/"/>
      <url>/2022/01/04/laravel-scout-search-example/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel8-Scout-Search"><a href="#Laravel8-Scout-Search" class="headerlink" title="Laravel8 Scout Search"></a>Laravel8 Scout Search</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>懶得看詳細介紹可直接跳至<a href="#簡單完整範例">簡單完整範例</a>，但必須先安裝完成相關套件及申請<a href="https://www.algolia.com/">Algolia</a>專案<br><img src="https://i.imgur.com/vCVSGdw.gif" alt=""></p><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p><code>Laravel Scout</code>提供了一個簡單的、基於驅動程序的解決方案，用於為您的<code>Eloquent</code> 模型添加全文搜索。使用模型觀察器，Scout 會自動使您的搜索索引與您的 <code>Eloquent</code> 記錄保持同步。</p><p>目前，<code>Scout</code> 附帶<code>Algolia</code>和<code>MeiliSearch</code>驅動程序。此外，<code>Scout</code> 包含一個“集合”驅動程序，專為本地開發使用而設計，不需要任何外部依賴項或第三方服務。此外，編寫自定義驅動程序很簡單，您可以使用自己的搜索實現自由擴展 <code>Scout</code>。</p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="安裝-Laravel-Scout"><a href="#安裝-Laravel-Scout" class="headerlink" title="安裝 Laravel Scout"></a>安裝 Laravel Scout</h3><p><code>composer require laravel/scout</code></p><h4 id="發佈配置"><a href="#發佈配置" class="headerlink" title="發佈配置"></a>發佈配置</h4><p><code>php artisan vendor:publish --provider=&quot;Laravel\Scout\ScoutServiceProvider&quot;</code></p><p>最後，將<code>Laravel\Scout\Searchable</code>特徵添加到您希望使其可搜索的模型中。此特徵將註冊一個模型觀察者，該觀察者將自動使模型與您的搜索驅動程序保持同步：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Scout</span>\<span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Searchable</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="申請-Algolia"><a href="#申請-Algolia" class="headerlink" title="申請 Algolia"></a>申請 Algolia</h2><p>到<a href="https://www.algolia.com/">algolia</a>申請新的專案</p><p><img src="https://i.imgur.com/4uNNxGe.jpg" alt=""></p><p>選擇香港區域<br><img src="https://i.imgur.com/3l7Bsrt.jpg" alt=""></p><p>複製專案 ID 以及 SECRET<br><img src="https://i.imgur.com/8Axuuxz.jpg" alt=""></p><h2 id="使用-Algolia-驅動"><a href="#使用-Algolia-驅動" class="headerlink" title="使用 Algolia 驅動"></a>使用 Algolia 驅動</h2><p>使用 Algolia 驅動程序時，您應該在<code>config/scout.php</code>中配置您的 Algolia id 和 secret key 。配置憑據後，您還需要通過 Composer 包管理器安裝 Algolia PHP SDK：</p><p><code>composer require algolia/algoliasearch-client-php</code></p><p><code>.env</code>檔案填入剛剛複製的專案 id 以及 key</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALGOLIA_APP_ID=</span><br><span class="line">ALGOLIA_SECRET=</span><br></pre></td></tr></table></figure><h3 id="queue"><a href="#queue" class="headerlink" title="queue"></a>queue</h3><p>運行 queue 將允許 Scout 將您的模型信息同步到您的搜索索引的操作進行排隊，從而為您的應用程序的 Web 界面提供更好的響應時間。</p><p>配置隊列驅動程序後，將配置文件中的 queue 選項值設置 config/scout.php 為 true：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SCOUT_QUEUE=true</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="配置模型索引"><a href="#配置模型索引" class="headerlink" title="配置模型索引"></a>配置模型索引</h3><p>每個 Eloquent 模型都與給定的搜索“索引”同步，該索引包含該模型的所有可搜索記錄。換句話說，您可以將每個索引視為一個 MySQL 表。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Scout</span>\<span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the name of the index associated with the model.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">searchableAs</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 在Algolia Index的名稱</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;productts_index&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置可搜索數據"><a href="#配置可搜索數據" class="headerlink" title="配置可搜索數據"></a>配置可搜索數據</h3><p>默認情況下，<code>toArray</code>給定模型的整個表單將被持久化到其搜索索引。如果您想自定義與搜索索引同步的數據，您可以覆蓋<code>toSearchableArray</code>模型上的方法：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Scout</span>\<span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Post</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the indexable data array for the model.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toSearchableArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">$this</span>-&gt;toArray();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Customize the data array...</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 有一對一關聯可以這樣寫</span></span><br><span class="line">        <span class="variable">$array</span>[<span class="string">&#x27;user&#x27;</span>] = <span class="keyword">$this</span>-&gt;user-&gt;name;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 可以自訂義欄位</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="配置模型-ID"><a href="#配置模型-ID" class="headerlink" title="配置模型 ID"></a>配置模型 ID</h3><p>默認情況下，Scout 將使用模型的主鍵作為存儲在搜索索引中的模型的唯一 ID/鍵。如果您需要自定義此行為，您可以覆蓋模型上的 getScoutKey 和 getScoutKeyName 方法：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Scout</span>\<span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the value used to index the model.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getScoutKey</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;email;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the key name used to index the model.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getScoutKeyName</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;email&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="本地開發"><a href="#本地開發" class="headerlink" title="本地開發"></a>本地開發</h2><p>雖然您在本地開發過程中可以自由使用 <code>Algolia</code> 或 <code>MeiliSearch</code> 搜索引擎，但您可能會發現使用“<code>collection</code>”引擎更方便。<code>collection</code>引擎將對您現有數據庫中的結果使用“where”子句和收集過濾，以確定適用於您的查詢的搜索結果。使用此引擎時，沒有必要為您的可搜索模型“編制索引”，因為它們只會從您的本地數據庫中檢索。</p><p>要使用<code>collection</code>引擎，您可以簡單地將 SCOUT_DRIVER 環境變量的值設置為<code>collection</code>，或者直接在應用程序的 scout 配置文件中指定驅動程序：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SCOUT_DRIVER=collection</span><br></pre></td></tr></table></figure><p>一旦您將集合驅動程序指定為首選驅動程序，您就可以開始對您的模型執行搜索查詢。使用收集引擎時，不需要搜索引擎索引，例如<code>Algolia</code> 或 <code>MeiliSearch</code> 索引所需的索引。</p><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="批量導入索引"><a href="#批量導入索引" class="headerlink" title="批量導入索引"></a>批量導入索引</h3><p>使用<code>scout:importArtisan</code> 指令，該指令將所有現有記錄導入到您的搜索索引中：</p><p><code>php artisan scout:import &quot;App\Models\Post&quot;</code></p><p><code>flush</code>命令可用於從搜索索引中刪除模型的所有記錄：</p><p><code>php artisan scout:flush &quot;App\Models\Post&quot;</code></p><h4 id="修改導入查詢"><a href="#修改導入查詢" class="headerlink" title="修改導入查詢"></a>修改導入查詢</h4><p>如果您想修改用於檢索所有模型以進行批量導入的查詢，您可以 makeAllSearchableUsing 在模型上定義一個方法。這是在導入模型之前添加可能需要的任何急切關係加載的好地方：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Modify the query used to retrieve models when making all of the models searchable.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  \Illuminate\Database\Eloquent\Builder  $query</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> \Illuminate\Database\Eloquent\Builder</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">makeAllSearchableUsing</span>(<span class="params"><span class="variable">$query</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$query</span>-&gt;with(<span class="string">&#x27;author&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加記錄"><a href="#添加記錄" class="headerlink" title="添加記錄"></a>添加記錄</h3><p>一旦你已經添加了<code>Laravel\Scout\Searchable</code>性狀的模型，所有你需要做的是<code>save</code>或<code>create</code>模型實例，它會自動被添加到您的搜索索引。如果您已將 Scout 配置為使用隊列，則此操作將由 queue 在後台執行：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Order</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$order</span> = <span class="keyword">new</span> Order;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$order</span>-&gt;save();</span><br></pre></td></tr></table></figure><h2 id="搜尋"><a href="#搜尋" class="headerlink" title="搜尋"></a>搜尋</h2><p>使用該 search 方法搜索模型。search 方法接受將用於搜索模型的單個字符串。然後，您應該將該 get 方法鏈接到搜索查詢上，以檢索與給定搜索查詢匹配的 Eloquent 模型：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Order</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$orders</span> = Order::search(<span class="string">&#x27;Star Trek&#x27;</span>)-&gt;get();</span><br></pre></td></tr></table></figure><p>如果您想在將原始搜索結果轉換為 Eloquent 模型之前獲得原始搜索結果，您可以使用以下 raw 方法：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$orders</span> = Order::search(<span class="string">&#x27;Star Trek&#x27;</span>)-&gt;raw();</span><br></pre></td></tr></table></figure><h4 id="自定義索引"><a href="#自定義索引" class="headerlink" title="自定義索引"></a>自定義索引</h4><p>搜索查詢通常在模型<code>searchableAs</code>方法指定的索引上執行。但是，您可以使用該<code>within</code>方法來指定應該搜索的自定義索引：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$orders</span> = Order::search(<span class="string">&#x27;Star Trek&#x27;</span>)</span><br><span class="line">    -&gt;within(<span class="string">&#x27;tv_shows_popularity_desc&#x27;</span>)</span><br><span class="line">    -&gt;get();</span><br></pre></td></tr></table></figure><h3 id="分頁"><a href="#分頁" class="headerlink" title="分頁"></a>分頁</h3><p>除了檢索模型集合之外，您還可以使用該<code>paginate</code>方法對搜索結果進行分頁。此方法將返回一個<code>Illuminate\Pagination\LengthAwarePaginator</code>實例，就像您對<a href="https://laravel.com/docs/8.x/pagination">傳統的 Eloquent 查詢分頁一樣</a>：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Order</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$orders</span> = Order::search(<span class="string">&#x27;Star Trek&#x27;</span>)-&gt;paginate();</span><br></pre></td></tr></table></figure><p>您可以通過將數量作為第一個參數傳遞給<code>paginate</code>方法來指定每頁檢索多少模型：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$orders</span> = Order::search(<span class="string">&#x27;Star Trek&#x27;</span>)-&gt;paginate(<span class="number">15</span>);</span><br></pre></td></tr></table></figure><p>檢索結果後，您可以使用 Blade 顯示結果並呈現頁面鏈接，就像對傳統的 Eloquent 查詢進行分頁一樣：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot;&gt;</span></span><br><span class="line"><span class="class">    @<span class="title">foreach</span> ($<span class="title">orders</span> <span class="title">as</span> $<span class="title">order</span>)</span></span><br><span class="line"><span class="class">        </span>&#123;&#123; <span class="variable">$order</span>-&gt;price &#125;&#125;</span><br><span class="line">    @<span class="keyword">endforeach</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&#123;&#123; <span class="variable">$orders</span>-&gt;links() &#125;&#125;</span><br></pre></td></tr></table></figure><p>當然，如果您想以 JSON 形式檢索分頁結果，您可以直接從路由或控制器返回分頁器實例：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Order</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/orders&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">Request <span class="variable">$request</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Order::search(<span class="variable">$request</span>-&gt;input(<span class="string">&#x27;query&#x27;</span>))-&gt;paginate(<span class="number">15</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="簡單完整範例"><a href="#簡單完整範例" class="headerlink" title="簡單完整範例"></a>簡單完整範例</h2><h3 id="env-配置"><a href="#env-配置" class="headerlink" title=".env 配置"></a>.env 配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SCOUT_QUEUE=true</span><br><span class="line">ALGOLIA_APP_ID=YOUR APP_ID</span><br><span class="line">ALGOLIA_SECRET=YOUR SECRET</span><br></pre></td></tr></table></figure><h3 id="Product-Migration"><a href="#Product-Migration" class="headerlink" title="Product Migration"></a>Product Migration</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateProductsTable</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::create(<span class="string">&#x27;products&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">Blueprint <span class="variable">$table</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$table</span>-&gt;id();</span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;name&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;text(<span class="string">&#x27;details&#x27;</span>);</span><br><span class="line">            <span class="variable">$table</span>-&gt;timestamps();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Reverse the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::dropIfExists(<span class="string">&#x27;products&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Product-Model"><a href="#Product-Model" class="headerlink" title="Product Model"></a>Product Model</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Factories</span>\<span class="title">HasFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Scout</span>\<span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">HasFactory</span>, <span class="title">Searchable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;details&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">searchableAs</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;products_index&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toSearchableArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">$this</span>-&gt;toArray();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Product-Controller"><a href="#Product-Controller" class="headerlink" title="Product Controller"></a>Product Controller</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$request</span>-&gt;has(<span class="string">&#x27;keyword&#x27;</span>)) &#123;</span><br><span class="line">        <span class="variable">$products</span> = Product::search(<span class="variable">$request</span>-&gt;keyword)</span><br><span class="line">            -&gt;paginate(<span class="number">5</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$products</span> = Product::paginate(<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;products&#x27;</span>, compact(<span class="string">&#x27;products&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="路由-web-php"><a href="#路由-web-php" class="headerlink" title="路由 web.php"></a>路由 web.php</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;/products&#x27;</span>, <span class="string">&#x27;App\Http\Controllers\ProductController@index&#x27;</span>)-&gt;name(<span class="string">&#x27;products&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="View-products-blade-php"><a href="#View-products-blade-php" class="headerlink" title="View products.blade.php"></a>View <code>products.blade.php</code></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Laravel 使用scount全文檢索範例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Latest compiled and minified CSS --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">      <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">href</span>=<span class="string">&quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">integrity</span>=<span class="string">&quot;sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span>Laravel 使用scount全文檢索範例<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;form-inline mb-5&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">method</span>=<span class="string">&quot;GET&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">action</span>=<span class="string">&quot;&#123;&#123; route(&#x27;products&#x27;) &#125;&#125;&quot;</span></span></span><br><span class="line"><span class="tag">      &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-outline-secondary&quot;</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>搜尋<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span>id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>名稱<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>介紹<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span>&gt;</span>創建時間<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        @if($products-&gt;count()) @foreach($products as $key =&gt; $product)</span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $product-&gt;id &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $product-&gt;name &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $product-&gt;details &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; $product-&gt;created_at-&gt;format(&#x27;d-m-Y&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        @endforeach @endif</span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">      &#123;&#123; $products-&gt;links() &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="導入索引"><a href="#導入索引" class="headerlink" title="導入索引"></a>導入索引</h3><p><code>php artisan scout:import &quot;App\Models\Product&quot;</code></p><p>導入後可以發現 Algolia 多了相關的索引<br><img src="https://i.imgur.com/Vq3zPw7.jpg" alt=""></p><p>run <code>php artisan serve</code><br><img src="https://i.imgur.com/vCVSGdw.gif" alt=""></p><div class="tag link"><a class="link-card" title="Laravel scout 官方" href="https://laravel.com/docs/8.x/scout"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Laravel scout 官方</p><p class="url">https://laravel.com/docs/8.x/scout</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> search </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 列排序以及分頁範例</title>
      <link href="/2022/01/04/laravel-column-sorting-and-paging-example/"/>
      <url>/2022/01/04/laravel-column-sorting-and-paging-example/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-列排序以及分頁範例"><a href="#Laravel-列排序以及分頁範例" class="headerlink" title="Laravel 列排序以及分頁範例"></a>Laravel 列排序以及分頁範例</h1><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://i.imgur.com/14eMW7p.gif" alt=""></p><h2 id="安裝-kyslik-column-sortable"><a href="#安裝-kyslik-column-sortable" class="headerlink" title="安裝 kyslik/column-sortable"></a>安裝 kyslik/column-sortable</h2><p>此包可用於 Laravel 5/6/7/8</p><h3 id="composer"><a href="#composer" class="headerlink" title="composer"></a>composer</h3><p><code>composer require kyslik/column-sortable</code></p><h3 id="手動安裝-laravel-5-5-之前版本"><a href="#手動安裝-laravel-5-5-之前版本" class="headerlink" title="手動安裝(laravel 5.5 之前版本)"></a>手動安裝(laravel 5.5 之前版本)</h3><p>在<code>config/app.php</code>添加服務提供者</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;providers&#x27;</span> =&gt; [</span><br><span class="line"></span><br><span class="line">    App\Providers\RouteServiceProvider::class,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Third Party Service Providers...</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Kyslik\ColumnSortable\ColumnSortableServiceProvider::class,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="發佈配置"><a href="#發佈配置" class="headerlink" title="發佈配置"></a>發佈配置</h3><p><code>php artisan vendor:publish --provider=&quot;Kyslik\ColumnSortable\ColumnSortableServiceProvider&quot; --tag=&quot;config&quot;</code></p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><h3 id="In-Model"><a href="#In-Model" class="headerlink" title="In Model"></a>In Model</h3><p>在你想使用排序的<code>model</code>使用<code>Sortable</code><br>，將要使用排序欄位定義在<code>$sortable</code>陣列當中</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Kyslik</span>\<span class="title">ColumnSortable</span>\<span class="title">Sortable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Product</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Sortable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sortable</span> = [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;updated_at&#x27;</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Sortable trait 為模型添加了 Sortable 範圍，因此您可以將其與分頁一起使用。</p><h3 id="In-Blade"><a href="#In-Blade" class="headerlink" title="In Blade"></a>In Blade</h3><p>在 Blade 中使用<code>@sortablelink()</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@sortablelink(<span class="string">&#x27;column&#x27;</span>, <span class="string">&#x27;Title&#x27;</span>, [<span class="string">&#x27;parameter&#x27;</span> =&gt; <span class="string">&#x27;smile&#x27;</span>],  [<span class="string">&#x27;rel&#x27;</span> =&gt; <span class="string">&#x27;nofollow&#x27;</span>])</span><br></pre></td></tr></table></figure><ol><li>第一個參數: 要排序的欄位名稱</li><li>第二個參數: 在前端要顯示的名稱</li><li>第三個參數: Http GET 默認查詢字符串參數<code>?parameter=smile</code></li><li>第四個參數: 可以在第 4 個參數中使用自定義 URL 作為 ‘href’ 屬性，查詢字符串將附加到它。此範例會將<code>rel=&quot;nofollow&quot;</code>附加在<code>a tag</code>上</li></ol><p>可以省略第二，第三，第四個參數</p><p>官方提供可能使用範例與情境</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@sortablelink(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">@sortablelink(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;Username&#x27;</span>)</span><br><span class="line">@sortablelink(<span class="string">&#x27;address&#x27;</span>, trans(<span class="string">&#x27;fields.address&#x27;</span>), [<span class="string">&#x27;filter&#x27;</span> =&gt; <span class="string">&#x27;active, visible&#x27;</span>])</span><br><span class="line">@sortablelink(<span class="string">&#x27;address&#x27;</span>, trans(<span class="string">&#x27;fields.address&#x27;</span>), [<span class="string">&#x27;filter&#x27;</span> =&gt; <span class="string">&#x27;active, visible&#x27;</span>], [<span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;btn btn-block&#x27;</span>, <span class="string">&#x27;rel&#x27;</span> =&gt; <span class="string">&#x27;nofollow&#x27;</span>, <span class="string">&#x27;href&#x27;</span> =&gt; route(<span class="string">&#x27;my.custom.route&#x27;</span>)])</span><br></pre></td></tr></table></figure><div class="note info modern"><p>可以設置應用於標題（第二個參數）的默認格式功能，默認情況下設置為<a href="https://www.php.net/manual/en/function.ucfirst.php"><code>ucfirst</code></a>。</p></div><h3 id="簡單的配置"><a href="#簡單的配置" class="headerlink" title="簡單的配置"></a>簡單的配置</h3><p>Sortablelink blade 區分類型（數字、數量和 alpha），並為每種類型應用不同的類，可以自行新增或修改對應的 icon</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;columns&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;numeric&#x27;</span>  =&gt; [</span><br><span class="line">        <span class="string">&#x27;rows&#x27;</span> =&gt; [<span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;updated_at&#x27;</span>, <span class="string">&#x27;level&#x27;</span>, <span class="string">&#x27;id&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;fa fa-sort-numeric&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;amount&#x27;</span>   =&gt; [</span><br><span class="line">        <span class="string">&#x27;rows&#x27;</span> =&gt; [<span class="string">&#x27;price&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;fa fa-sort-amount&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&#x27;alpha&#x27;</span>    =&gt; [</span><br><span class="line">        <span class="string">&#x27;rows&#x27;</span> =&gt; [<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;description&#x27;</span>, <span class="string">&#x27;email&#x27;</span>, <span class="string">&#x27;slug&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;fa fa-sort-alpha&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h3 id="Font-Awesome-預設的字體類"><a href="#Font-Awesome-預設的字體類" class="headerlink" title="Font Awesome(預設的字體類)"></a>Font Awesome(預設的字體類)</h3><p>安裝<a href="https://fontawesome.com/v4.7/">Font-Awesome</a></p><h4 id="Font-Awesome-5"><a href="#Font-Awesome-5" class="headerlink" title="Font Awesome 5"></a>Font Awesome 5</h4><p>更改正序倒序的 icon，將配置文件中的後綴類分別從 -asc/-desc (FA 4) 更改為 -up/-down (FA 5)。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* this is FA 5 compatible.</span></span><br><span class="line"><span class="comment">suffix class that is appended when ascending direction is applied */</span></span><br><span class="line"><span class="string">&#x27;asc_suffix&#x27;</span>                    =&gt; <span class="string">&#x27;-up&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">/* suffix class that is appended when descending direction is applied */</span></span><br><span class="line"><span class="string">&#x27;desc_suffix&#x27;</span>                   =&gt; <span class="string">&#x27;-down&#x27;</span>,</span><br></pre></td></tr></table></figure><div class="note info modern"><p>如未發布配置文件請參考<a href="#發佈配置">發佈配置</a></p></div><h2 id="完整範例"><a href="#完整範例" class="headerlink" title="完整範例"></a>完整範例</h2><h3 id="Routes"><a href="#Routes" class="headerlink" title="Routes"></a>Routes</h3><p><code>Route::get(&#39;/products&#39;, &#39;App\Http\Controllers\ProductController@index&#39;);</code></p><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$products</span> = Product::sortable()-&gt;paginate(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;products&#x27;</span>, compact(<span class="string">&#x27;products&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="View-包括分頁"><a href="#View-包括分頁" class="headerlink" title="View(包括分頁)"></a>View(包括分頁)</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@sortablelink(&#x27;id&#x27;, &#x27;產品ID&#x27;)</span><br><span class="line">@sortablelink(&#x27;name&#x27;, &#x27;名稱&#x27;)</span><br><span class="line">@sortablelink(&#x27;created_at&#x27;, &#x27;創建日期&#x27;)</span><br><span class="line"></span><br><span class="line">@foreach ($products as $product)</span><br><span class="line">    &#123;&#123; $product-&gt;id &#125;&#125;</span><br><span class="line">    &#123;&#123; $product-&gt;name &#125;&#125;</span><br><span class="line">    &#123;&#123; $product-&gt;created_at &#125;&#125;</span><br><span class="line">@endforeach</span><br><span class="line"></span><br><span class="line">&#123;&#123;-- 此為分頁 --&#125;&#125;</span><br><span class="line">&#123;!! $users-&gt;appends(\Request::except(&#x27;page&#x27;))-&gt;render() !!&#125;</span><br></pre></td></tr></table></figure><div class="note warning modern"><p>注意：Blade 識別指令的能力取決於指令本身之前的空格 \<tr> @sortablelink(‘Name’)</p></div><h2 id="HasOne-BelongsTo-關聯排序"><a href="#HasOne-BelongsTo-關聯排序" class="headerlink" title="HasOne / BelongsTo 關聯排序"></a>HasOne / BelongsTo 關聯排序</h2><h3 id="定義-hasOne-關聯"><a href="#定義-hasOne-關聯" class="headerlink" title="定義 hasOne 關聯"></a>定義 hasOne 關聯</h3><p>要使用關聯排序，需要先在 model 定義<code>hasOne()</code>關聯</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Get the user_detail record associated with the user.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detail</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;hasOne(App\UserDetail::class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定義-BelongsTo-關聯"><a href="#定義-BelongsTo-關聯" class="headerlink" title="定義 BelongsTo 關聯"></a>定義 BelongsTo 關聯</h3><div class="note info modern"><p>如果有自引用模型（如評論、類別等）；父表將使用 parent_ 字符串作為別名，有關更多信息，請參閱<a href="https://github.com/Kyslik/column-sortable/issues/60">issue #60</a>。</p></div><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the user that owns the phone.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;belongsTo(App\User::class, parent_id, user_id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定義-sortable-陣列"><a href="#定義-sortable-陣列" class="headerlink" title="定義$sortable 陣列"></a>定義<code>$sortable</code> 陣列</h3><p>在兩個模型中定義 $sortable 數組（否則，package 使用 Scheme::hasColumn() 這是一個額外的數據庫查詢）</p><p>User Model</p><p><code>public $sortable = [&#39;id&#39;, &#39;name&#39;, &#39;email&#39;, &#39;created_at&#39;, &#39;updated_at&#39;];</code></p><p>UserDetail Model</p><p><code>public $sortable = [&#39;address&#39;, &#39;phone_number&#39;];</code></p><h3 id="Blade-的關聯排序"><a href="#Blade-的關聯排序" class="headerlink" title="Blade 的關聯排序"></a>Blade 的關聯排序</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">@sortablelink(<span class="string">&#x27;detail.phone_number&#x27;</span>, <span class="string">&#x27;phone&#x27;</span>)</span><br><span class="line">@sortablelink(<span class="string">&#x27;user.name&#x27;</span>, <span class="string">&#x27;name&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="note info modern"><p>這裡使用的是在模型中定義的關係“名稱”（方法）而不是使用表名稱。</p></div><div class="note warning modern"><p>不要同時使用兩個不同關係的組合，你會得到關係未定義的錯誤</p></div><p>預設使用<code>.</code>做為關聯預設符號，如果<code>.</code>不是你想要的可以到配置文件中修改</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;uri_relation_column_separator&#x27;</span> =&gt; <span class="string">&#x27;.&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="ColumnSortable-overriding-advanced"><a href="#ColumnSortable-overriding-advanced" class="headerlink" title="ColumnSortable overriding (advanced)"></a>ColumnSortable overriding (advanced)</h2><p>可以覆蓋 ColumnSortable 關係功能，基本上您可以編寫自己的連接/查詢並手動應用 orderBy()</p><p>範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Sortable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sortable</span> = [<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addressSortable</span>(<span class="params"><span class="variable">$query</span>, <span class="variable">$direction</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$query</span>-&gt;join(<span class="string">&#x27;user_details&#x27;</span>, <span class="string">&#x27;users.id&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;user_details.user_id&#x27;</span>)</span><br><span class="line">                    -&gt;orderBy(<span class="string">&#x27;address&#x27;</span>, <span class="variable">$direction</span>)</span><br><span class="line">                    -&gt;select(<span class="string">&#x27;users.*&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>controller 中一樣使用<code>$users = $user-&gt;sortable()-&gt;paginate(10);</code></p><p>在 view 中<code>@sortablelink(&#39;address&#39;)</code></p><h2 id="捕捉異常-try-catch"><a href="#捕捉異常-try-catch" class="headerlink" title="捕捉異常 try catch"></a>捕捉異常 try catch</h2><p><code>ColumnSortableException</code>使用三個代碼（0、1、2）拋出自定義異常 。</p><p>代碼 0 表示<code>explode()</code> 無法將 URI 參數“排序”分解為兩個值。例如：<code>sort=detail..phone_number</code> - 生成大小為 3 的數組，這會導致 package 拋出代碼為 0 的異常。</p><p>代碼 1 表示 <code>$query-&gt;getRelation()</code> 方法失敗，這意味著關聯名稱無效（不存在，未在模型中聲明）。</p><p>代碼 2 表示通過排序參數提供的關係不是 hasOne 的實例。</p><p>捕捉異常範例：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$users</span> = <span class="variable">$user</span>-&gt;with(<span class="string">&#x27;detail&#x27;</span>)-&gt;sortable([<span class="string">&#x27;detail.phone_number&#x27;</span>])-&gt;paginate(<span class="number">5</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (\Kyslik\ColumnSortable\Exceptions\ColumnSortableException <span class="variable">$e</span>) &#123;</span><br><span class="line">    dd(<span class="variable">$e</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="column-sortable" href="https://github.com/Kyslik/column-sortable"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">column-sortable</p><p class="url">https://github.com/Kyslik/column-sortable</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> sortable </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel-Notification-Channels-FCM</title>
      <link href="/2021/12/26/Laravel-Notification-Channels-FCM/"/>
      <url>/2021/12/26/Laravel-Notification-Channels-FCM/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-Notification-Channels-FCM-Firebase-Cloud-Messaging"><a href="#Laravel-Notification-Channels-FCM-Firebase-Cloud-Messaging" class="headerlink" title="Laravel Notification Channels FCM (Firebase Cloud Messaging)"></a>Laravel Notification Channels FCM (Firebase Cloud Messaging)</h1><h2 id="初始化專案"><a href="#初始化專案" class="headerlink" title="初始化專案"></a>初始化專案</h2><p><code>laravel new fcm_test</code></p><h3 id="使用-laravel-ui-創建身分認證"><a href="#使用-laravel-ui-創建身分認證" class="headerlink" title="使用 laravel/ui 創建身分認證"></a>使用 laravel/ui 創建身分認證</h3><p>使用<a href="https://laravel.com/docs/8.x/starter-kits">Laravel Breeze</a>也可以</p><p><code>composer require laravel/ui</code></p><h3 id="創建-auth"><a href="#創建-auth" class="headerlink" title="創建 auth"></a>創建 auth</h3><p><code>php artisan ui bootstrap --auth</code></p><p><code>npm install</code></p><p><code>npm run dev</code></p><h3 id="新增-user-欄位，儲存要發送裝置-token"><a href="#新增-user-欄位，儲存要發送裝置-token" class="headerlink" title="新增 user 欄位，儲存要發送裝置 token"></a>新增 user 欄位，儲存要發送裝置 token</h3><p><code>php artisan make:migration add_column_device_token_to_users</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Migrations</span>\<span class="title">Migration</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Schema</span>\<span class="title">Blueprint</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Schema</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AddColumnDeviceTokenToUsers</span> <span class="keyword">extends</span> <span class="title">Migration</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">up</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::table(<span class="string">&#x27;users&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">Blueprint <span class="variable">$table</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$table</span>-&gt;string(<span class="string">&#x27;device_token&#x27;</span>)-&gt;nullable();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Reverse the migrations.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">down</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Schema::table(<span class="string">&#x27;users&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">Blueprint <span class="variable">$table</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$table</span>-&gt;dropColumn(<span class="string">&#x27;device_token&#x27;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更改-user-model"><a href="#更改-user-model" class="headerlink" title="更改 user model"></a>更改 user model</h3><p>將 device_token 欄位設成可更新</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Models</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Auth</span>\<span class="title">MustVerifyEmail</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Factories</span>\<span class="title">HasFactory</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Auth</span>\<span class="title">User</span> <span class="title">as</span> <span class="title">Authenticatable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Sanctum</span>\<span class="title">HasApiTokens</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">HasApiTokens</span>, <span class="title">HasFactory</span>, <span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that are mass assignable.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array&lt;int, string&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;device_token&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be hidden for serialization.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array&lt;int, string&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$hidden</span> = [</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;remember_token&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be cast.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array&lt;string, string&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$casts</span> = [</span><br><span class="line">        <span class="string">&#x27;email_verified_at&#x27;</span> =&gt; <span class="string">&#x27;datetime&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遷移"><a href="#遷移" class="headerlink" title="遷移"></a>遷移</h3><p><code>php artisan migrate</code></p><h2 id="安裝-laravel-notification-channels-fcm"><a href="#安裝-laravel-notification-channels-fcm" class="headerlink" title="安裝 laravel-notification-channels/fcm"></a>安裝 laravel-notification-channels/fcm</h2><p><code>composer require laravel-notification-channels/fcm:~2.0</code></p><h2 id="申請-Firebase-專案"><a href="#申請-Firebase-專案" class="headerlink" title="申請 Firebase 專案"></a>申請 Firebase 專案</h2><p>到<a href="https://console.firebase.google.com">firebase</a></p><p>申請專案<br><img src="https://i.imgur.com/NQzaDUR.jpg" alt=""></p><p><img src="https://i.imgur.com/2lW1vcT.jpg" alt=""></p><p>點選專案設定<br><img src="https://i.imgur.com/lcklbaH.jpg" alt=""></p><p>選擇網頁應用<br><img src="https://i.imgur.com/nfxpXea.jpg" alt=""></p><p>初始化的 SDK<br><img src="https://i.imgur.com/KBCGfSx.jpg" alt=""></p><p>產生 json 檔案<br><img src="https://i.imgur.com/S1lzMMv.jpg" alt=""></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>下載服務帳戶 JSON 文件後，您可以通過在.env 文件中指定以 FIREBASE_開頭的環境變量來配置包。通常，包的工作需要以下條件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 服務帳戶 JSON 文件的相對或完整路徑</span><br><span class="line">FIREBASE_CREDENTIALS=</span><br><span class="line"># 您可以在以下位置找到項目的數據庫 URL</span><br><span class="line"># https://console.firebase.google.com/project/_/database</span><br><span class="line">FIREBASE_DATABASE_URL=https://&lt;your-project&gt;.firebaseio.com</span><br></pre></td></tr></table></figure><p>以剛剛創建的專案為例</p><p>將 JOSN 檔案放在專案根目錄<br>\<your-project>填入專案 ID</p><p><img src="https://i.imgur.com/3Bj3qjP.jpg" alt=""></p><p><code>.env</code>檔案配置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FIREBASE_CREDENTIALS=firebase-adminsdk.json</span><br><span class="line">FIREBASE_DATABASE_URL=https://laravel-test-974f3.firebaseio.com</span><br></pre></td></tr></table></figure><p>配置查看<a href="https://github.com/kreait/laravel-firebase#configuration">laravel-firebase#configuration</a></p><h2 id="創建通知"><a href="#創建通知" class="headerlink" title="創建通知"></a>創建通知</h2><p><code>php artisan make:notification HelloNotification</code></p><p>每個通知類別都有一個 via 方法用於判別要將通知寄送哪個頻道。</p><p>toFcm 會接收一個 $notifiable 實體並且返回一個 NotificationChannels\Fcm\FcmMessage 實例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notification</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">FcmChannel</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">FcmMessage</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">Resources</span>\<span class="title">AndroidConfig</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">Resources</span>\<span class="title">AndroidFcmOptions</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">Resources</span>\<span class="title">AndroidNotification</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">Resources</span>\<span class="title">ApnsConfig</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">NotificationChannels</span>\<span class="title">Fcm</span>\<span class="title">Resources</span>\<span class="title">ApnsFcmOptions</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloNotification</span> <span class="keyword">extends</span> <span class="title">Notification</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">via</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [FcmChannel::class];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toFcm</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> FcmMessage::create()</span><br><span class="line">            -&gt;setData([<span class="string">&#x27;data1&#x27;</span> =&gt; <span class="string">&#x27;value&#x27;</span>, <span class="string">&#x27;data2&#x27;</span> =&gt; <span class="string">&#x27;value2&#x27;</span>])</span><br><span class="line">            -&gt;setNotification(\NotificationChannels\Fcm\Resources\Notification::create()</span><br><span class="line">                -&gt;setTitle(<span class="string">&#x27;你好&#x27;</span>)</span><br><span class="line">                -&gt;setBody(<span class="string">&#x27;測試通知.&#x27;</span>)</span><br><span class="line">                -&gt;setImage(<span class="string">&#x27;https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Laravel.svg/1200px-Laravel.svg.png&#x27;</span>))</span><br><span class="line">            -&gt;setAndroid(</span><br><span class="line">                AndroidConfig::create()</span><br><span class="line">                    -&gt;setFcmOptions(AndroidFcmOptions::create()-&gt;setAnalyticsLabel(<span class="string">&#x27;analytics&#x27;</span>))</span><br><span class="line">                    -&gt;setNotification(AndroidNotification::create()-&gt;setColor(<span class="string">&#x27;#0A0A0A&#x27;</span>))</span><br><span class="line">            )-&gt;setApns(</span><br><span class="line">                ApnsConfig::create()</span><br><span class="line">                    -&gt;setFcmOptions(ApnsFcmOptions::create()-&gt;setAnalyticsLabel(<span class="string">&#x27;analytics_ios&#x27;</span>))</span><br><span class="line">            );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// optional method when using kreait/laravel-firebase:^3.0, this method can be omitted, defaults to the default project</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fcmProject</span>(<span class="params"><span class="variable">$notifiable</span>, <span class="variable">$message</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// $message is what is returned by `toFcm`</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;app&#x27;</span>; <span class="comment">// name of the firebase project to use</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="創建推播的-controller"><a href="#創建推播的-controller" class="headerlink" title="創建推播的 controller"></a>創建推播的 controller</h2><p><code>php artisan make:controller PushController</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Http</span>\<span class="title">Request</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Notifications</span>\<span class="title">HelloNotification</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PushController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">push</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$user</span> = Auth::user();</span><br><span class="line">        <span class="variable">$user</span>-&gt;notify(<span class="keyword">new</span> HelloNotification());</span><br><span class="line">        <span class="keyword">return</span> redirect()-&gt;back();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fcmToken</span>(<span class="params">Request <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (Auth::user()-&gt;device_token == <span class="variable">$request</span>-&gt;token) &#123;</span><br><span class="line">                <span class="keyword">return</span> response()-&gt;json([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">true</span>], <span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                Auth::user()-&gt;update([<span class="string">&#x27;device_token&#x27;</span> =&gt; <span class="variable">$request</span>-&gt;token]);</span><br><span class="line">                <span class="keyword">return</span> response()-&gt;json([<span class="string">&#x27;success&#x27;</span> =&gt; <span class="literal">true</span>], <span class="number">200</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Throwable</span> <span class="variable">$th</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="variable">$th</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新增路由"><a href="#新增路由" class="headerlink" title="新增路由"></a>新增路由</h2><p><code>web.php</code>新增路由</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 測試通知push</span></span><br><span class="line">Route::get(<span class="string">&#x27;/push&#x27;</span>, [App\Http\Controllers\PushController::class, <span class="string">&#x27;push&#x27;</span>])-&gt;name(<span class="string">&#x27;push&#x27;</span>)-&gt;middleware(<span class="string">&#x27;auth&#x27;</span>);</span><br><span class="line"><span class="comment">// 取得fcm token</span></span><br><span class="line">Route::post(<span class="string">&#x27;/fcm-token&#x27;</span>, [App\Http\Controllers\PushController::class, <span class="string">&#x27;fcmToken&#x27;</span>])-&gt;name(<span class="string">&#x27;fcm.token&#x27;</span>)-&gt;middleware(<span class="string">&#x27;auth&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="在通知模型中設置一個方法"><a href="#在通知模型中設置一個方法" class="headerlink" title="在通知模型中設置一個方法"></a>在通知模型中設置一個方法</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line">    ....</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Specifies the user&#x27;s FCM token</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string|array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">routeNotificationForFcm</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;device_token;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="更新home-blade-php"><a href="#更新home-blade-php" class="headerlink" title="更新home.blade.php"></a>更新<code>home.blade.php</code></h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">@extends(&#x27;layouts.app&#x27;) @section(&#x27;content&#x27;)</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row justify-content-center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-header&quot;</span>&gt;</span>&#123;&#123; __(&#x27;Dashboard&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;card-body&quot;</span>&gt;</span></span><br><span class="line">          @if (session(&#x27;status&#x27;))</span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;alert alert-success&quot;</span> <span class="attr">role</span>=<span class="string">&quot;alert&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123; session(&#x27;status&#x27;) &#125;&#125;</span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          @endif &#123;&#123; __(&#x27;You are logged in!&#x27;) &#125;&#125;</span><br><span class="line"></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123;route(&#x27;push&#x27;)&#125;&#125;&quot;</span>&gt;</span>測試通知!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">integrity</span>=<span class="string">&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://www.gstatic.com/firebasejs/8.3.2/firebase.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> firebaseConfig = &#123;</span></span><br><span class="line"><span class="javascript">    <span class="attr">apiKey</span>: <span class="string">&quot;XXXX&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">authDomain</span>: <span class="string">&quot;XXXX.firebaseapp.com&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">projectId</span>: <span class="string">&quot;XXXX&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">storageBucket</span>: <span class="string">&quot;XXXX&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">messagingSenderId</span>: <span class="string">&quot;XXXX&quot;</span>,</span></span><br><span class="line"><span class="javascript">    <span class="attr">appId</span>: <span class="string">&quot;XXXX&quot;</span>,</span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  firebase.initializeApp(firebaseConfig);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> messaging = firebase.messaging();</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">notifyMe</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 讓我們檢查瀏覽器是否支持通知</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">if</span> (!(<span class="string">&quot;Notification&quot;</span> <span class="keyword">in</span> <span class="built_in">window</span>)) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">console</span>.log(<span class="string">&quot;This browser does not support desktop notification&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 讓我們檢查是否已經授予通知權限</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (Notification.permission === <span class="string">&quot;granted&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">      <span class="comment">// 如果同意取得通知權限，則可啟動通知</span></span></span><br><span class="line"><span class="javascript">      startFCM();</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 否則，我們需要徵求用戶的許可</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">else</span> <span class="keyword">if</span> (</span></span><br><span class="line"><span class="javascript">      Notification.permission !== <span class="string">&quot;denied&quot;</span> ||</span></span><br><span class="line"><span class="javascript">      Notification.permission === <span class="string">&quot;default&quot;</span></span></span><br><span class="line"><span class="javascript">    ) &#123;</span></span><br><span class="line"><span class="javascript">      Notification.requestPermission(<span class="function"><span class="keyword">function</span> (<span class="params">permission</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// If the user accepts, let&#x27;s create a notification</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (permission === <span class="string">&quot;granted&quot;</span>) &#123;</span></span><br><span class="line"><span class="javascript">          startFCM();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 最後，如果用戶拒絕通知，而你想要尊重他們就沒有必要再打擾他們了</span></span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="keyword">function</span> <span class="title">startFCM</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    messaging</span></span><br><span class="line"><span class="javascript">      .requestPermission()</span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">return</span> messaging.getToken();</span></span><br><span class="line"><span class="javascript">      &#125;)</span></span><br><span class="line"><span class="javascript">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">request</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajaxSetup(&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">headers</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;X-CSRF-TOKEN&quot;</span>: $(<span class="string">&#x27;meta[name=&quot;csrf-token&quot;]&#x27;</span>).attr(<span class="string">&quot;content&quot;</span>),</span></span><br><span class="line"><span class="javascript">          &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">url</span>: <span class="string">&#x27;&#123;&#123; route(&quot;fcm.token&quot;) &#125;&#125;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="comment">// 將 token 傳送到 /fcm-token 進行處理</span></span></span><br><span class="line"><span class="javascript">          <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">token</span>: request,</span></span><br><span class="line"><span class="javascript">          &#125;,</span></span><br><span class="line"><span class="javascript">          <span class="attr">dataType</span>: <span class="string">&quot;JSON&quot;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">request</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(<span class="string">&quot;取得token成功&quot;</span>);</span></span><br><span class="line"><span class="javascript">          &#125;,</span></span><br><span class="line"><span class="javascript">          <span class="attr">error</span>: <span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">          &#125;,</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">      &#125;)</span></span><br><span class="line"><span class="javascript">      .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  messaging.onMessage(<span class="function"><span class="keyword">function</span> (<span class="params">payload</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> title = payload.notification.title;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">const</span> options = &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">body</span>: payload.notification.body,</span></span><br><span class="line"><span class="javascript">      <span class="attr">icon</span>: payload.notification.image,</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Notification(title, options);</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  notifyMe();</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure><h2 id="創建firebase-messaging-sw-js"><a href="#創建firebase-messaging-sw-js" class="headerlink" title="創建firebase-messaging-sw.js"></a>創建<code>firebase-messaging-sw.js</code></h2><p>為 Web 推送通知設置 firebase 配置文件，並將提供的代碼放在<code>public/firebase-messaging-sw.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Give the service worker access to Firebase Messaging.</span></span><br><span class="line"><span class="comment">// Note that you can only use Firebase Messaging here. Other Firebase libraries</span></span><br><span class="line"><span class="comment">// are not available in the service worker.importScripts(&#x27;https://www.gstatic.com/firebasejs/7.23.0/firebase-app.js&#x27;);</span></span><br><span class="line">importScripts(<span class="string">&quot;https://www.gstatic.com/firebasejs/8.3.2/firebase-app.js&quot;</span>);</span><br><span class="line">importScripts(<span class="string">&quot;https://www.gstatic.com/firebasejs/8.3.2/firebase-messaging.js&quot;</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Initialize the Firebase app in the service worker by passing in the messagingSenderId.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">firebase.initializeApp(&#123;</span><br><span class="line">  <span class="attr">apiKey</span>: <span class="string">&quot;XXXX&quot;</span>,</span><br><span class="line">  <span class="attr">authDomain</span>: <span class="string">&quot;XXXX.firebaseapp.com&quot;</span>,</span><br><span class="line">  <span class="attr">projectId</span>: <span class="string">&quot;XXXX&quot;</span>,</span><br><span class="line">  <span class="attr">storageBucket</span>: <span class="string">&quot;XXXX&quot;</span>,</span><br><span class="line">  <span class="attr">messagingSenderId</span>: <span class="string">&quot;XXXX&quot;</span>,</span><br><span class="line">  <span class="attr">appId</span>: <span class="string">&quot;XXXX&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> messaging = firebase.messaging();</span><br><span class="line"></span><br><span class="line">messaging.setBackgroundMessageHandler(<span class="function"><span class="keyword">function</span> (<span class="params">payload</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;Message received.&quot;</span>, payload);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> title = <span class="string">&quot;Hello world is awesome&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> options = &#123;</span><br><span class="line">    <span class="attr">body</span>: <span class="string">&quot;Your notificaiton message .&quot;</span>,</span><br><span class="line">    <span class="attr">icon</span>: <span class="string">&quot;/firebase-logo.png&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> self.registration.showNotification(title, options);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="展示"><a href="#展示" class="headerlink" title="展示"></a>展示</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1"><i class="fas fa-book"></i>成果</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fas fa-calculator"></i>常見問題</button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-snowman"></i>參考來源</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><img src="https://i.imgur.com/98Zaci1.gif" alt=""></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><code>cURL error 60: SSL certificate: unable to get local issuer certificate</code></p><p>如在本地端運行發生<code>cURL error 60: SSL certificate: unable to get local issuer certificate</code></p><p>請至<a href="https://curl.se/docs/caextract.html">caextract</a>下載證書包</p><p>更改<code>php.ini</code>，找到<code>curl.cainfo</code>取消註解，並指向剛剛下載的檔案<code>C:/cacert.pem</code></p><p>如還是有誤請參考<a href="https://stackoverflow.com/questions/29822686/curl-error-60-ssl-certificate-unable-to-get-local-issuer-certificate">stackoverflow</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class="tag link"><a class="link-card" title="firebase quickstart" href="https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">firebase quickstart</p><p class="url">https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission</p></div></a></div><div class="tag link"><a class="link-card" title="laravel-notification-channels-fcm" href="https://laravel-notification-channels.com/fcm/#usage"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">laravel-notification-channels-fcm</p><p class="url">https://laravel-notification-channels.com/fcm/#usage</p></div></a></div><div class="tag link"><a class="link-card" title="Notification.permission" href="https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Notification.permission</p><p class="url">https://developer.mozilla.org/en-US/docs/Web/API/Notification/permission</p></div></a></div><div class="tag link"><a class="link-card" title="Firebase Cloud Messaging" href="https://firebase.google.com/docs/cloud-messaging"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Firebase Cloud Messaging</p><p class="url">https://firebase.google.com/docs/cloud-messaging</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tag link"><a class="link-card" title="Demo" href="https://github.com/joe94113/laravel-notification-channels-FCM-demo"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">Demo</p><p class="url">https://github.com/joe94113/laravel-notification-channels-FCM-demo</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> Notification </tag>
            
            <tag> FCM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Javascript todolist 經典題實作</title>
      <link href="/2021/12/22/js-basic-todolist/"/>
      <url>/2021/12/22/js-basic-todolist/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Javascript-todolist-經典題實作"><a href="#Javascript-todolist-經典題實作" class="headerlink" title="Javascript todolist 經典題實作"></a>Javascript todolist 經典題實作</h1><h2 id="資料初始化渲染"><a href="#資料初始化渲染" class="headerlink" title="資料初始化渲染"></a>資料初始化渲染</h2><p>創建一個<code>todolist.html</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Js todolist<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;輸入待辦事項&quot;</span> <span class="attr">class</span>=<span class="string">&quot;txt&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;create&quot;</span> <span class="attr">value</span>=<span class="string">&quot;新增待辦&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;todo-list&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>創建<code>index.js</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 創建初始資料</span></span><br><span class="line"><span class="keyword">let</span> data = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;起床&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;吃早餐&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="comment">// 利用foreach跑初始資料</span></span><br><span class="line">  data.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    str += <span class="string">`&lt;li&gt;<span class="subst">$&#123;item.content&#125;</span>&lt;input class=&quot;delete&quot; type=&quot;button&quot; value=&quot;刪除待辦&quot;&gt;&lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// 找到class = todo-list將li加在後面</span></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&quot;.todo-list&quot;</span>).innerHTML = str;</span><br><span class="line">&#125;</span><br><span class="line">initData();</span><br></pre></td></tr></table></figure><p>效果:</p><p><img src="https://i.imgur.com/q2W4lAC.jpg" alt=""></p><h2 id="新增待辦事項"><a href="#新增待辦事項" class="headerlink" title="新增待辦事項"></a>新增待辦事項</h2><p><code>index.js</code>更新如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> txt = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.txt&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> create = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.create&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> data = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  data.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">    str += <span class="string">`&lt;li&gt;<span class="subst">$&#123;item.content&#125;</span>&lt;input class=&quot;delete&quot; type=&quot;button&quot; value=&quot;刪除待辦&quot;&gt;&lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&quot;.todo-list&quot;</span>).innerHTML = str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">create.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 防呆</span></span><br><span class="line">  <span class="keyword">if</span> (txt.value === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    alert(<span class="string">&quot;請輸入待辦事項&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 增加進去data的array</span></span><br><span class="line">  data.push(&#123; <span class="attr">content</span>: txt.value &#125;);</span><br><span class="line">  <span class="comment">// 重新呼叫</span></span><br><span class="line">  initData();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>效果:<br><img src="https://i.imgur.com/V07n6rW.jpg" alt=""></p><h2 id="刪除待辦事項"><a href="#刪除待辦事項" class="headerlink" title="刪除待辦事項"></a>刪除待辦事項</h2><p><code>index.js</code>更新如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> txt = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.txt&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> create = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.create&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> list = <span class="built_in">document</span>.querySelector(<span class="string">&quot;.todo-list&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> data = [];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  data.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">item, index</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 利用取得index知道該刪除哪一個li tag</span></span><br><span class="line">    str += <span class="string">`&lt;li&gt;<span class="subst">$&#123;item.content&#125;</span>&lt;input class=&quot;delete&quot; type=&quot;button&quot; data-num=<span class="subst">$&#123;index&#125;</span> value=&quot;刪除待辦&quot;&gt;&lt;/li&gt;`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="built_in">document</span>.querySelector(<span class="string">&quot;.todo-list&quot;</span>).innerHTML = str;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 新增待辦監聽</span></span><br><span class="line">create.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (txt.value === <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    alert(<span class="string">&quot;請輸入待辦事項&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  data.push(&#123; <span class="attr">content</span>: txt.value &#125;);</span><br><span class="line">  txt.value = <span class="string">&quot;&quot;</span>; <span class="comment">// 點擊輸入後，清空輸入框</span></span><br><span class="line">  initData();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 刪除待辦監聽</span></span><br><span class="line">list.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (e.target.className === <span class="string">&quot;delete&quot;</span>) &#123;</span><br><span class="line">    data.splice(e.target.dataset.num, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">// 也可以使用以下方式取得data-num的值</span></span><br><span class="line">    <span class="comment">// data.splice(e.target.getAttribute(&quot;data-num&quot;), 1);</span></span><br><span class="line">    initData();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="codepen"><a href="#codepen" class="headerlink" title="codepen"></a>codepen</h2><iframe height="300" style="width: 100%;" scrolling="no" title="Untitled" src="https://codepen.io/joe94113/embed/xxXXVxq?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/joe94113/pen/xxXXVxq">  Untitled</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><p><p class="codepen" data-height="531" data-default-tab="html,result" data-slug-hash="WNZdLeo" data-user="joe94113" style="height: 531px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/joe94113/pen/WNZdLeo">  JavaScript 必修篇 - todolist 待辦事項</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</span></p></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>這邊順便推薦一個 css 選擇器的小遊戲</p><div class="tag link"><a class="link-card" title="Css Diner" href="https://flukeout.github.io/"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Css Diner</p><p class="url">https://flukeout.github.io/</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
            <tag> todolist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel notification table 連接到其他資料庫</title>
      <link href="/2021/12/21/Laravel-change-Connection-for-Notifications-table/"/>
      <url>/2021/12/21/Laravel-change-Connection-for-Notifications-table/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="laravel-notification-table-連接到其他資料庫"><a href="#laravel-notification-table-連接到其他資料庫" class="headerlink" title="laravel notification table 連接到其他資料庫"></a>laravel notification table 連接到其他資料庫</h1><h2 id="問題如下"><a href="#問題如下" class="headerlink" title="問題如下"></a>問題如下</h2><p>環境: laravel7</p><p>User 的 model 是連接到 A 資料庫，notification 要連接到 B 資料庫，但因為 User model 連接到 A 表所以他會去找 A 資料庫底下的 notification 資料表，導致錯誤</p><h2 id="如何解決"><a href="#如何解決" class="headerlink" title="如何解決"></a>如何解決</h2><p>覆蓋掉原先包裡面程式碼，我將覆蓋的程式碼放在<code>App\Overrides\Notifications</code>裡面，你也可以自行定義，但要記得更改<code>namespace</code></p><h3 id="創建Notifiable-php"><a href="#創建Notifiable-php" class="headerlink" title="創建Notifiable.php"></a>創建<code>Notifiable.php</code></h3><p>這個檔案要覆蓋掉在 User Model 裡使用的<code>Notifiable</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Overrides</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Overrides</span>\<span class="title">Notifications</span>\<span class="title">HasDatabaseNotifications</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">RoutesNotifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">Notifiable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">HasDatabaseNotifications</span>, <span class="title">RoutesNotifications</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="創建DatabaseNotification-php"><a href="#創建DatabaseNotification-php" class="headerlink" title="創建DatabaseNotification.php"></a>創建<code>DatabaseNotification.php</code></h3><p>這是要覆蓋掉原先的 notification 的 model，加上<code>protected $connection = &#39;&#39;;</code>就可以連接到自定義的資料庫</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Overrides</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseNotification</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$connection</span> = <span class="string">&#x27;B資料庫&#x27;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The &quot;type&quot; of the primary key ID.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$keyType</span> = <span class="string">&#x27;string&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Indicates if the IDs are auto-incrementing.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$incrementing</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The table associated with the model.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$table</span> = <span class="string">&#x27;notifications&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The guarded attributes on the model.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$guarded</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that should be cast to native types.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$casts</span> = [</span><br><span class="line">        <span class="string">&#x27;data&#x27;</span> =&gt; <span class="string">&#x27;array&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;read_at&#x27;</span> =&gt; <span class="string">&#x27;datetime&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the notifiable entity that the notification belongs to.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Database\Eloquent\Relations\MorphTo</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">notifiable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;morphTo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Mark the notification as read.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">markAsRead</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_null(<span class="keyword">$this</span>-&gt;read_at)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;forceFill([<span class="string">&#x27;read_at&#x27;</span> =&gt; <span class="keyword">$this</span>-&gt;freshTimestamp()])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Mark the notification as unread.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">markAsUnread</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (! is_null(<span class="keyword">$this</span>-&gt;read_at)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;forceFill([<span class="string">&#x27;read_at&#x27;</span> =&gt; <span class="literal">null</span>])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if a notification has been read.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;read_at !== <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Determine if a notification has not been read.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unread</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;read_at === <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new database notification collection instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  array  $models</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Notifications\DatabaseNotificationCollection</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">newCollection</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$models</span> = []</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DatabaseNotificationCollection(<span class="variable">$models</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="創建HasDatabaseNotifications-php"><a href="#創建HasDatabaseNotifications-php" class="headerlink" title="創建HasDatabaseNotifications.php"></a>創建<code>HasDatabaseNotifications.php</code></h3><p>這裡的<code>DatabaseNotification</code>連接到的是剛剛創建的<code>DatabaseNotification.php</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Overrides</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">HasDatabaseNotifications</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the entity&#x27;s notifications.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Database\Eloquent\Relations\MorphMany</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">notifications</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;morphMany(DatabaseNotification::class, <span class="string">&#x27;notifiable&#x27;</span>)-&gt;orderBy(<span class="string">&#x27;created_at&#x27;</span>, <span class="string">&#x27;desc&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the entity&#x27;s read notifications.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Database\Query\Builder</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readNotifications</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;notifications()-&gt;whereNotNull(<span class="string">&#x27;read_at&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the entity&#x27;s unread notifications.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Database\Query\Builder</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unreadNotifications</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;notifications()-&gt;whereNull(<span class="string">&#x27;read_at&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="創建DatabaseNotificationCollection-php"><a href="#創建DatabaseNotificationCollection-php" class="headerlink" title="創建DatabaseNotificationCollection.php"></a>創建<code>DatabaseNotificationCollection.php</code></h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Overrides</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Collection</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseNotificationCollection</span> <span class="keyword">extends</span> <span class="title">Collection</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Mark all notifications as read.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">markAsRead</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;each-&gt;markAsRead();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Mark all notifications as unread.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">markAsUnread</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;each-&gt;markAsUnread();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="更改-User-Model"><a href="#更改-User-Model" class="headerlink" title="更改 User Model"></a>更改 User Model</h3><p>都創建完畢後到你自己的 User model，將<code>Notifiable</code>更改成剛剛創建的檔案，就大功告成囉</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Overrides</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$connection</span> = <span class="string">&#x27;A資料庫&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="參考 stackoverflow" href="https://stackoverflow.com/questions/41521255/laravel-change-connection-for-notifications-table"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">參考 stackoverflow</p><p class="url">https://stackoverflow.com/questions/41521255/laravel-change-connection-for-notifications-table</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> Notifications </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery 監聽 enter 事件</title>
      <link href="/2021/12/19/jQuery-listens-for-enter-key/"/>
      <url>/2021/12/19/jQuery-listens-for-enter-key/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="jQuery-監聽-enter-事件"><a href="#jQuery-監聽-enter-事件" class="headerlink" title="jQuery 監聽 enter 事件"></a>jQuery 監聽 enter 事件</h1><h2 id="監聽-input-觸發搜尋"><a href="#監聽-input-觸發搜尋" class="headerlink" title="監聽 input 觸發搜尋"></a>監聽 input 觸發搜尋</h2><p>假如有一個 input tag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input id=&quot;search&quot; name=&quot;search&quot; /&gt;</span><br></pre></td></tr></table></figure><p>可以監聽如有使用者在這輸入框按下 Enter 觸發</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;#search&#x27;</span>).pressEnter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 按下enter想做的事情寫在這</span></span><br><span class="line">    alert(<span class="string">&quot;enter&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="全局監聽"><a href="#全局監聽" class="headerlink" title="全局監聽"></a>全局監聽</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).keydown(<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event.keyCode == <span class="number">13</span>) &#123;</span><br><span class="line">        <span class="comment">// 按下enter想做的事情寫在這</span></span><br><span class="line">        alert(<span class="string">&quot;enter&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="監聽其他按鍵"><a href="#監聽其他按鍵" class="headerlink" title="監聽其他按鍵"></a>監聽其他按鍵</h2><p>想取得其他按鍵的 KeyCodes 可以參考以下網站</p><div class="tag link"><a class="link-card" title="JavaScript Event KeyCodes" href="https://keycode.info/"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">JavaScript Event KeyCodes</p><p class="url">https://keycode.info/</p></div></a></div><p>效果如下圖</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/qfokhBD.jpg" style="width:400px;"/></div></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JQuery </tag>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 數值型別特性</title>
      <link href="/2021/12/18/javascript-numerical-characteristics/"/>
      <url>/2021/12/18/javascript-numerical-characteristics/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JavaScript-數值型別特性"><a href="#JavaScript-數值型別特性" class="headerlink" title="JavaScript 數值型別特性"></a>JavaScript 數值型別特性</h1><p>以下先附上經典圖</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/4XfwT6q.png" style="width:400px;"/></div></div><h2 id="number-型別"><a href="#number-型別" class="headerlink" title="number 型別"></a>number 型別</h2><p>這就是我們常見的數值型別</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">typeof</span> a; <span class="comment">// &#x27;number&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Number-物件"><a href="#Number-物件" class="headerlink" title="Number 物件"></a>Number 物件</h2><p>Number 的物件，他是在 js run 起來就存在的物件被放在根物件底下<code>window.Number</code><br><img src="https://i.imgur.com/yEnbkJH.jpg" alt=""></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">typeof</span> num; <span class="comment">// &#x27;object&#x27;</span></span><br></pre></td></tr></table></figure><p>可以看到 num print 出來是一個物件，想要取得 PrimitiveValue 裡的數值可以使用<code>num.valueOf()</code>，在這裏面的數值被創建出來後是不易更改的。<br><img src="https://i.imgur.com/0NOEjAZ.jpg" alt=""></p><h2 id="字串轉成數值"><a href="#字串轉成數值" class="headerlink" title="字串轉成數值"></a>字串轉成數值</h2><p>字串轉型成數值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="built_in">Number</span>(<span class="string">&quot;100&quot;</span>); <span class="comment">// 轉型成功</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="built_in">Number</span>(<span class="string">&quot;100abc&quot;</span>); <span class="comment">// 轉失敗變成NaN(not a number)</span></span><br></pre></td></tr></table></figure><p>也可以使用+觸發型別自動轉換</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = +<span class="string">&quot;100&quot;</span>; <span class="comment">// 100</span></span><br><span class="line"><span class="keyword">let</span> num2 = +num; <span class="comment">// 100</span></span><br></pre></td></tr></table></figure><h3 id="parseInt-函式"><a href="#parseInt-函式" class="headerlink" title="parseInt()函式"></a>parseInt()函式</h3><p>parseInt()可以轉換型別變成整數<br>只要他遇到看不懂的就會變成 NaN</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;100&quot;</span>); <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;100 abc&quot;</span>); <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;100.00&quot;</span>); <span class="comment">// 100</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;100.00.00&quot;</span>); <span class="comment">// NaN</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;$100&quot;</span>); <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><p>parseInt()的第二個參數可以設定是幾進制轉換，預設是十進制</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 二進制</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;1000&quot;</span>, <span class="number">2</span>); <span class="comment">// 8</span></span><br><span class="line"><span class="comment">// 八進制</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;1000&quot;</span>, <span class="number">8</span>); <span class="comment">// 512</span></span><br><span class="line"><span class="comment">// 十六進制</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;1000&quot;</span>, <span class="number">16</span>); <span class="comment">// 4096</span></span><br></pre></td></tr></table></figure><div class="tip warning faa-horizontal animated-hover"><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>請勿使用以下寫法，parseInt()的第一個參數是放 String 型別，所以才有以下錯誤，因為當小數到達一定程度後，會自動轉成科學記號表示法，js 會把他轉成字串再進行 parse，導致了以下錯誤</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.001</span>); <span class="comment">// 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="number">0.0000001</span>); <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 演變過程</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">0.0000001</span>; <span class="comment">// 1e-8</span></span><br><span class="line">(<span class="number">1e-8</span>).toString(); <span class="comment">// &#x27;1e-8&#x27;</span></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;1e-8&quot;</span>);</span><br></pre></td></tr></table></figure><p>正確寫法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;0.0000001&quot;</span>); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure></div><h2 id="數值轉成字串"><a href="#數值轉成字串" class="headerlink" title="數值轉成字串"></a>數值轉成字串</h2><p>數值轉成字串可以使用 toString()函式，函式裡面參數可以設定進制的轉換</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">100.</span>toString(); <span class="comment">// 會報錯</span></span><br><span class="line">(<span class="number">100</span>).toString(); <span class="comment">// &#x27;100&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 2進制轉換</span></span><br><span class="line">(<span class="number">100</span>).toString(<span class="number">2</span>); <span class="comment">// &#x27;1100100&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 怪異寫法可以work不推薦使用</span></span><br><span class="line"><span class="number">100.</span>.toString(); <span class="comment">// &#x27;100&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h2><p>NaN,也就是 not a number</p><p>NaN 是數值型別，但是 NaN 不等於 NaN，跟 NaN 計算的數值結果都會變成 NaN。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typeof</span> <span class="literal">NaN</span>; <span class="comment">// &#x27;number&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="literal">NaN</span> == <span class="literal">NaN</span>; <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="literal">NaN</span> === <span class="literal">NaN</span>; <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p>當要判斷是否是 NaN 時可以使用</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="literal">NaN</span>;</span><br><span class="line"><span class="built_in">Number</span>.isNaN(num);</span><br><span class="line"><span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h2 id="整數運算特性"><a href="#整數運算特性" class="headerlink" title="整數運算特性"></a>整數運算特性</h2><h3 id="最大值和最小值"><a href="#最大值和最小值" class="headerlink" title="最大值和最小值"></a>最大值和最小值</h3><p>JavaScript 是採用浮點數運算系統(到一定位數會有精準度問題)</p><p>先來查看最大值和最小值，這裡的最小值是大於 0 的最小值哦</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 最大值</span></span><br><span class="line"><span class="built_in">Number</span>.MAX_VALUE; <span class="comment">// 1.7976931348623157e+308</span></span><br><span class="line"><span class="comment">// 最小值</span></span><br><span class="line"><span class="built_in">Number</span>.MIN_VALUE; <span class="comment">// 5e-324</span></span><br><span class="line"><span class="built_in">Number</span>.MIN_VALUE &gt; <span class="number">0</span>; <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p>可以使用 toString(2)轉換最大值來查看，可以發現整數在大於某一個數之後，就會變得沒那麼精準</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Number</span>.MAX_VALUE.toString(<span class="number">2</span>);</span><br><span class="line"><span class="comment">// 輸出以下</span></span><br><span class="line"><span class="comment">// &#xx27;</span></span><br></pre></td></tr></table></figure><h3 id="最大安全整數"><a href="#最大安全整數" class="headerlink" title="最大安全整數"></a>最大安全整數</h3><p>再來介紹最大安全整數，可以發現使用最大值 toString(2)後有 1 的位數去做 parseInt 轉換會得到與最大安全整數相同的結果。</p><p>最大安全整數會等於<code>2**53-1</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Number</span>.MAX_SAFE_INTEGER; <span class="comment">// 9007199254740991</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>.MAX_SAFE_INTEGER == <span class="number">2</span> ** <span class="number">53</span> - <span class="number">1</span>; <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">parseInt</span>(<span class="string">&quot;11111111111111111111111111111111111111111111111111111&quot;</span>, <span class="number">2</span>); <span class="comment">// 9007199254740991</span></span><br></pre></td></tr></table></figure><p>在超過最大安全數後的計算會有誤差的問題，所以盡量不要這麼做</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Number</span>.MAX_SAFE_INTEGER + <span class="number">1</span>; <span class="comment">// 9007199254740992</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>.MAX_SAFE_INTEGER + <span class="number">2</span>; <span class="comment">// 9007199254740992</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>.MAX_SAFE_INTEGER + <span class="number">3</span>; <span class="comment">// 9007199254740994</span></span><br></pre></td></tr></table></figure><h2 id="無限大數值-Infinity"><a href="#無限大數值-Infinity" class="headerlink" title="無限大數值 Infinity"></a>無限大數值 Infinity</h2><p>Infinity 也是數值，也就是無限大數值，甚麼時候會跑出 Infinity 呢，來查看以下範例</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="literal">Infinity</span> - <span class="comment">// 無限大</span></span><br><span class="line">  <span class="literal">Infinity</span>; <span class="comment">// 負無限大</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="number">100</span> / <span class="number">0</span>; <span class="comment">// Infinity</span></span><br></pre></td></tr></table></figure><p>利用 Infinity 去做其他數值運算都會是 Infinity，除了使用 Infinity 和 Infinity 去做運算會變成 NaN。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="literal">Infinity</span> / <span class="number">100</span>; <span class="comment">// Infinity</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="literal">Infinity</span> + <span class="number">100</span>; <span class="comment">// Infinity</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = <span class="literal">Infinity</span> / <span class="literal">Infinity</span>; <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><p>無限大判斷，無限大會等於無限大</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Number</span>.POSITIVE_INFINITY == <span class="literal">Infinity</span>; <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Number</span>.NEGATIVE_INFINITY == -<span class="literal">Infinity</span>; <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="literal">Infinity</span> == <span class="literal">Infinity</span>; <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="BigInt"><a href="#BigInt" class="headerlink" title="BigInt"></a>BigInt</h2><p>bigint 就是超大整數<br><img src="https://i.imgur.com/tb7rr9u.jpg" alt=""><br>那要如何使用呢? 只要在數值後面加上一個 n，bigint 只能跟 bigint 做計算，否則會出錯</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">123n</span>;</span><br><span class="line"><span class="keyword">typeof</span> num; <span class="comment">// &#x27;bigint&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = num + <span class="number">123</span>; <span class="comment">// Uncaught TypeError: Cannot mix BigInt and other types</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> num = num + <span class="number">123n</span>; <span class="comment">// 246n</span></span><br></pre></td></tr></table></figure><h2 id="浮點數計算"><a href="#浮點數計算" class="headerlink" title="浮點數計算"></a>浮點數計算</h2><p>0.1 加上 0.2 不等於 0.3，是因為 javascript 使用<a href="https://0.30000000000000004.com/">Floating Point Math</a>，導致無法整除，所以使用的時候要多加留意</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">0.1</span> + <span class="number">0.2</span> == <span class="number">0.3</span>; <span class="comment">// false</span></span><br><span class="line"><span class="number">0.2</span> + <span class="number">0.4</span> == <span class="number">0.6</span>; <span class="comment">// false</span></span><br><span class="line"><span class="number">0.3</span> + <span class="number">0.6</span> == <span class="number">0.9</span>; <span class="comment">// false</span></span><br><span class="line"><span class="number">0.4</span> + <span class="number">0.8</span> == <span class="number">1.2</span>; <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0.1</span> + <span class="number">0.2</span>); <span class="comment">// 0.30000000000000004</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Math.ceil() 函式會回傳大於等於所給數字的最小整數。</span></span><br><span class="line"><span class="built_in">Math</span>.ceil(<span class="number">0.1</span> * <span class="number">0.2</span> * <span class="number">100</span>); <span class="comment">// 3</span></span><br><span class="line"><span class="built_in">Math</span>.ceil(<span class="number">0.1</span> * <span class="number">0.2</span> * <span class="number">1000</span>); <span class="comment">// 21</span></span><br><span class="line"><span class="built_in">Math</span>.ceil(<span class="number">0.1</span> * <span class="number">0.2</span> * <span class="number">10000</span>); <span class="comment">// 201</span></span><br><span class="line"></span><br><span class="line">(<span class="number">0.1</span>).toString(<span class="number">2</span>); <span class="comment">// &#x27;0.0001100110011001100110011001100110011001100110011001101&#x27;</span></span><br><span class="line">(<span class="number">0.2</span>)</span><br><span class="line">  .toString(<span class="number">2</span>)(</span><br><span class="line">    <span class="comment">// &#x27;0.001100110011001100110011001100110011001100110011001101&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="number">0.3</span></span><br><span class="line">  )</span><br><span class="line">  .toString(<span class="number">2</span>); <span class="comment">// &#x27;0.010011001100110011001100110011001100110011001100110011&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1"><i class="fas fa-book"></i>延伸閱讀</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fas fa-calculator"></i>數值運算套件</button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-snowman"></i>參考來源</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/JavaScript/Reference/Global_Objects/Math">Math</a></p><p><a href="https://caniuse.com/">CanIUse</a> 是一個非常有用的工具，用於快速可視化哪些前端技術與哪些瀏覽器兼容。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><div class="tag link"><a class="link-card" title="Numeral-js" href="https://github.com/adamwdraper/Numeral-js"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">Numeral-js</p><p class="url">https://github.com/adamwdraper/Numeral-js</p></div></a></div><div class="tag link"><a class="link-card" title="decimal.js" href="https://github.com/MikeMcl/decimal.js"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">decimal.js</p><p class="url">https://github.com/MikeMcl/decimal.js</p></div></a></div><div class="tag link"><a class="link-card" title="bignumber.js" href="https://github.com/MikeMcl/bignumber.js"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">bignumber.js</p><p class="url">https://github.com/MikeMcl/bignumber.js</p></div></a></div><div class="tag link"><a class="link-card" title="big.js" href="https://github.com/MikeMcl/big.js"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">big.js</p><p class="url">https://github.com/MikeMcl/big.js</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class="tag link"><a class="link-card" title="Will 保哥的技術交流中心" href="https://www.facebook.com/will.fans/"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Will 保哥的技術交流中心</p><p class="url">https://www.facebook.com/will.fans/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel實作第三方登入</title>
      <link href="/2021/12/14/laravel-socialite/"/>
      <url>/2021/12/14/laravel-socialite/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-實作第三方登入"><a href="#Laravel-實作第三方登入" class="headerlink" title="Laravel 實作第三方登入"></a>Laravel 實作第三方登入</h1><h2 id="Laravel-Breeze"><a href="#Laravel-Breeze" class="headerlink" title="Laravel Breeze"></a>Laravel Breeze</h2><p>Laravel Breeze 是 Laravel 身份驗證功能的最小、簡單實現，包括登錄、註冊、密碼重置、電子郵件驗證和密碼確認。Laravel Breeze 的默認視圖層由使用 Tailwind CSS 樣式的簡單 Blade 模板組成，利用此套件生成基本登入登出很方便。</p><h3 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h3><p>首先，創建一個新的 Laravel 應用程序，配置您的數據庫，並運行您的數據庫遷移：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">laravel new example</span><br><span class="line"></span><br><span class="line">cd example</span><br><span class="line"></span><br><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><p>創建新的 Laravel 應用程序後，您可以使用 Composer 安裝 Laravel Breeze：</p><p><code>composer require laravel/breeze --dev</code></p><p>安裝完成後，可以運行 breeze:installArtisan 指令。此指令將身份驗證視圖、路由、控制器和其他資源發佈到我們的應用程序。</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">php artisan breeze:install</span><br><span class="line"></span><br><span class="line">npm install</span><br><span class="line">npm run dev</span><br><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><p>之後執行<code>php artisan serve</code>到 login 和 register 路由就可以看到基本的登入註冊畫面</p><p><img src="https://i.imgur.com/BIc9Q6R.jpg" alt=""></p><p><img src="https://i.imgur.com/srxKxru.jpg" alt=""></p><h2 id="Laravel-Socialite"><a href="#Laravel-Socialite" class="headerlink" title="Laravel Socialite"></a>Laravel Socialite</h2><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><p>這個套件是最常拿來做 laravel 第三方登入的套件，向 OAuth 提供者進行身份驗證。Socialite 目前支持通過 Facebook、Twitter、LinkedIn、Google、GitHub、GitLab 和 Bitbucket 進行身份驗證。</p><p>如果還想要串其他的第三方登入，可以到<a href="https://socialiteproviders.com/">Socialite Providers</a>查看，只需要載入套件，添加 provider 事件監聽器，剩餘做法與以下範例相同。</p><h3 id="安裝-1"><a href="#安裝-1" class="headerlink" title="安裝"></a>安裝</h3><p>使用 composer 安裝包<br><code>composer require laravel/socialite</code></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>配置檔案會生成在<code>config/services.php</code>，並應使用鍵 facebook，twitter，linkedin，google，github，gitlab，或者 bitbucket，根據您的應用需要提供：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;facebook&#x27;</span> =&gt; [</span><br><span class="line">    <span class="string">&#x27;client_id&#x27;</span> =&gt; env(<span class="string">&#x27;FACEBOOK_CLIENT_ID&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;client_secret&#x27;</span> =&gt; env(<span class="string">&#x27;FACEBOOK_CLIENT_SECRET&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;redirect&#x27;</span> =&gt; env(<span class="string">&#x27;FACEBOOK_REDIRECT_URI&#x27;</span>),</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>到.env 設定</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FACEBOOK_CLIENT_ID=&quot;&quot;</span><br><span class="line">FACEBOOK_CLIENT_SECRET=&quot;&quot;</span><br><span class="line">FACEBOOK_REDIRECT_URI=&quot;http://localhost:8000/auth/callback&quot;</span><br></pre></td></tr></table></figure><h3 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h3><p>要使用 OAuth 提供程序對用戶進行身份驗證，您將需要兩條路由：一條用於將用戶重定向到 OAuth 提供程序，另一條用於在身份驗證後接收來自提供程序的回調。下面的示例控制器演示了兩個路由的實現：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Socialite</span>\<span class="title">Facades</span>\<span class="title">Socialite</span>;</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/auth/redirect&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Socialite::driver(<span class="string">&#x27;facebook&#x27;</span>)-&gt;redirect();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/auth/callback&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$user</span> = Socialite::driver(<span class="string">&#x27;facebook&#x27;</span>)-&gt;user();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// $user-&gt;token</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>Facade<code>redirect</code>提供的方法<code>Socialite</code>負責將用戶重定向到 OAuth 提供者，而該 user 方法將讀取傳入的請求並在用戶通過身份驗證後從提供者處檢索用戶的信息。</p><h3 id="檢索用戶詳細信息"><a href="#檢索用戶詳細信息" class="headerlink" title="檢索用戶詳細信息"></a>檢索用戶詳細信息</h3><p>在用戶重定向回您的身份驗證回調路由後，您可以使用 Socialite 的 user 方法檢索用戶的詳細信息。該 user 方法返回的用戶對象提供了多種屬性和方法，您可以使用這些屬性和方法將有關用戶的信息存儲在您自己的數據庫中。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Socialite</span>\<span class="title">Facades</span>\<span class="title">Socialite</span>;</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/auth/callback&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$user</span> = Socialite::driver(<span class="string">&#x27;github&#x27;</span>)-&gt;user();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OAuth 2.0 providers...</span></span><br><span class="line">    <span class="variable">$token</span> = <span class="variable">$user</span>-&gt;token;</span><br><span class="line">    <span class="variable">$refreshToken</span> = <span class="variable">$user</span>-&gt;refreshToken;</span><br><span class="line">    <span class="variable">$expiresIn</span> = <span class="variable">$user</span>-&gt;expiresIn;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// OAuth 1.0 providers...</span></span><br><span class="line">    <span class="variable">$token</span> = <span class="variable">$user</span>-&gt;token;</span><br><span class="line">    <span class="variable">$tokenSecret</span> = <span class="variable">$user</span>-&gt;tokenSecret;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// All providers...</span></span><br><span class="line">    <span class="variable">$user</span>-&gt;getId();</span><br><span class="line">    <span class="variable">$user</span>-&gt;getNickname();</span><br><span class="line">    <span class="variable">$user</span>-&gt;getName();</span><br><span class="line">    <span class="variable">$user</span>-&gt;getEmail();</span><br><span class="line">    <span class="variable">$user</span>-&gt;getAvatar();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="申請-Facebook-登入"><a href="#申請-Facebook-登入" class="headerlink" title="申請 Facebook 登入"></a>申請 Facebook 登入</h2><p>到<a href="https://developers.facebook.com/apps/">Facebook for Developers</a>進行申請</p><p>創建一個應用程式<br><img src="https://i.imgur.com/emGi0Yj.jpg" alt=""><br>輸入應用程式名稱<br><img src="https://i.imgur.com/GxBJAmS.jpg" alt=""><br>選擇 facebook 登入<br><img src="https://i.imgur.com/rv8Dir3.jpg" alt=""></p><p><img src="https://i.imgur.com/xrEkdtP.jpg" alt=""><br>到應用程式設定為本地<br><img src="https://i.imgur.com/HthvV7V.jpg" alt=""><br>在紅色框框輸入你的網域，因我在本地測試所以為<code>localhost</code></p><p>藍色框框的資料填入.env 檔案中<br><img src="https://i.imgur.com/Eif7O7m.jpg" alt=""></p><div class="note warning flat"><p>如果不是在本機端開發，記得在設定填入 callback 的 Url<br><img src="https://i.imgur.com/fs8iAUQ.jpg" alt=""></p></div><h2 id="let-go-測試"><a href="#let-go-測試" class="headerlink" title="let go 測試"></a>let go 測試</h2><p>首先在<code>login.blade.php</code>加上一個 a tag</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&#123;&#123; route(&#x27;socialite.redirect&#x27;) &#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  Facebook 登入</span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>設定好路由，就可以開始拉，</p><div class="note info flat"><p>懶得新建資料表所以我直接去資料庫把 user 的 password 欄位改成允許 null</p></div><p>這裡的 stateless()意味著沒有存儲 sessions，官方稱為 Stateless Authentication(無狀態認證)</p><div class="tip warning faa-horizontal animated faa-fast"><p>無狀態身份驗證不適用於 Twitter 驅動程序，它使用 OAuth 1.0 進行身份驗證。</p></div><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Facades</span>\<span class="title">Auth</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Laravel</span>\<span class="title">Socialite</span>\<span class="title">Facades</span>\<span class="title">Socialite</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Providers</span>\<span class="title">RouteServiceProvider</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">User</span>;</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/auth/redirect&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Socialite::driver(<span class="string">&#x27;facebook&#x27;</span>)-&gt;stateless()-&gt;redirect();</span><br><span class="line">&#125;)-&gt;name(<span class="string">&#x27;socialite.redirect&#x27;</span>);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;/auth/callback&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$User</span> = Socialite::driver(<span class="string">&#x27;facebook&#x27;</span>)-&gt;stateless()-&gt;user();</span><br><span class="line">    <span class="variable">$users</span> = User::where([<span class="string">&#x27;email&#x27;</span> =&gt; <span class="variable">$User</span>-&gt;email])-&gt;first();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$users</span>)&#123;</span><br><span class="line">                Auth::login(<span class="variable">$users</span>);</span><br><span class="line">                <span class="keyword">return</span> redirect()-&gt;intended(RouteServiceProvider::HOME);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$user</span> = User::create([</span><br><span class="line">                    <span class="string">&#x27;name&#x27;</span>          =&gt; <span class="variable">$User</span>-&gt;name,</span><br><span class="line">                    <span class="string">&#x27;email&#x27;</span>         =&gt; <span class="variable">$User</span>-&gt;email,</span><br><span class="line">                ]);</span><br><span class="line">                Auth::login(<span class="variable">$user</span>);</span><br><span class="line">                <span class="keyword">return</span> redirect()-&gt;intended(RouteServiceProvider::HOME);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// $user-&gt;token</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>前往<code>http://localhost:8000/login</code>點選 facebook 登入<br><img src="https://i.imgur.com/Rugr9Mo.jpg" alt=""><br>點選同意<br><img src="https://i.imgur.com/qUTADnf.jpg" alt=""><br>就成功登入拉<br><img src="https://i.imgur.com/qjLja9K.jpg" alt=""></p><p>也可以看到 User 資料表新增一筆資料囉。</p><div class="tag link"><a class="link-card" title="laravel/socialite" href="https://github.com/laravel/socialite"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">laravel/socialite</p><p class="url">https://github.com/laravel/socialite</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10更換預設瀏覽器</title>
      <link href="/2021/12/02/win10%E6%9B%B4%E6%8F%9B%E9%A0%90%E8%A8%AD%E7%80%8F%E8%A6%BD%E5%99%A8/"/>
      <url>/2021/12/02/win10%E6%9B%B4%E6%8F%9B%E9%A0%90%E8%A8%AD%E7%80%8F%E8%A6%BD%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="win10-更換預設瀏覽器"><a href="#win10-更換預設瀏覽器" class="headerlink" title="win10 更換預設瀏覽器"></a>win10 更換預設瀏覽器</h1><p>在電腦上按一下 「開始」 功能表。按一下「設定」圖示，選擇應用程式。</p><p><img src="https://i.imgur.com/torT5L6.jpg" alt=""></p><p>點選「預設應用程式」。</p><p><img src="https://i.imgur.com/hmvNkFd.jpg" alt=""></p><p>依序按一下 「應用程式」 下一步 「預設應用程式」即可選擇。</p><p><img src="https://i.imgur.com/qeZSC7w.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel哈希數據ID</title>
      <link href="/2021/12/02/Laravel%E5%93%88%E5%B8%8C%E6%95%B8%E6%93%9AID/"/>
      <url>/2021/12/02/Laravel%E5%93%88%E5%B8%8C%E6%95%B8%E6%93%9AID/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-哈希數據-ID"><a href="#Laravel-哈希數據-ID" class="headerlink" title="Laravel 哈希數據 ID"></a>Laravel 哈希數據 ID</h1><h2 id="為甚麼需要-hash-ID"><a href="#為甚麼需要-hash-ID" class="headerlink" title="為甚麼需要 hash ID"></a>為甚麼需要 hash ID</h2><p>在專案中，我們數據的 ID 通常是自行增加的，如使用 Url get 的參數是商品 ID 會造成以下問題</p><ol><li>數據的 ID 是公開的，不希望對外暴露有規則索引</li><li>防止爬蟲侵擾</li><li>容易根據 ID 猜測數專案中的商品數量</li><li>隨著數據的增長，ID 會越來越大，無法統一長度</li></ol><p>這時後就可以靠 hash id 來加密解決問題，還有很多種解決方案，例如使用 UUID，使用自己的邏輯創建新的 id 欄位，今天來介紹一個簡單的解決方案是基於<a href="https://github.com/vinkla/hashids">hashids/hashids</a>的項目<a href="https://github.com/vinkla/laravel-hashids">vinkla/hashids</a></p><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p><code>composer require vinkla/hashids</code></p><p>我是使用 laravel7 在安裝過程中報錯，<br>有遇到此問題的小夥伴可以安裝看看版本 8.0.0 試試</p><p><code>composer require vinkla/hashids ^8.0.0</code></p><p>Laravel Hashids 需要連接配置。首先，您需要發布所有供應商資產<br><code>php artisan vendor:publish --provider=&quot;Vinkla\Hashids\HashidsServiceProvider&quot;</code></p><h2 id="調整配置"><a href="#調整配置" class="headerlink" title="調整配置"></a>調整配置</h2><p>到<code>config\hashids.php</code>調整參數</p><p>更改 salt，可以為目標數字增加變量，確保他人沒有相同的 salt 情況下，無法轉換回數字</p><p>更改 length，可以指定轉換後的字符串最小長度</p><p>vinkla/hashids 是透過對數字進行編碼形成字符串，當然也可以對編碼過的字符串進行解碼，達成加密數據 ID 的效果</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;connections&#x27;</span> =&gt; [</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;main&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;salt&#x27;</span> =&gt; <span class="string">&#x27;example&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;length&#x27;</span> =&gt; <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;alternative&#x27;</span> =&gt; [</span><br><span class="line">        <span class="string">&#x27;salt&#x27;</span> =&gt; <span class="string">&#x27;your-salt-string&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;length&#x27;</span> =&gt; <span class="string">&#x27;your-length-integer&#x27;</span>,</span><br><span class="line">    ],</span><br><span class="line"></span><br><span class="line">],</span><br></pre></td></tr></table></figure><h2 id="基本範例"><a href="#基本範例" class="headerlink" title="基本範例"></a>基本範例</h2><p>可以使用<code>php artisan tinker</code>在 shell 中嘗試</p><p>In shell</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Hashids::encode(1);</span></span><br><span class="line">=&gt; &quot;E6R3Qg&quot;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt; Hashids::decode(<span class="string">&quot;E6R3Qg&quot;</span>);</span></span><br><span class="line">=&gt; [</span><br><span class="line">     1,</span><br><span class="line">   ]</span><br></pre></td></tr></table></figure><p>In controller</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Vinkla</span>\<span class="title">Hashids</span>\<span class="title">Facades</span>\<span class="title">Hashids</span>;</span><br><span class="line"></span><br><span class="line">Hashids::encode(<span class="number">1</span>); <span class="comment">// 生成E6R3Qg</span></span><br><span class="line"></span><br><span class="line">Hashids::decode(<span class="string">&#x27;E6R3Qg&#x27;</span>); <span class="comment">// 解碼後得到數組 [1]</span></span><br></pre></td></tr></table></figure><h3 id="更換不同連接規則"><a href="#更換不同連接規則" class="headerlink" title="更換不同連接規則"></a>更換不同連接規則</h3><p>如更改後找不到連接器，清除 config cache，<code>php artisan config:cache</code></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用alternative的配置encode</span></span><br><span class="line">Hashids::connection(<span class="string">&#x27;alternative&#x27;</span>)-&gt;encode(<span class="variable">$id</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用alternative的配置decode</span></span><br><span class="line">Hashids::connection(<span class="string">&#x27;alternative&#x27;</span>)-&gt;decode(<span class="variable">$id</span>);</span><br></pre></td></tr></table></figure><h3 id="更改預設連接"><a href="#更改預設連接" class="headerlink" title="更改預設連接"></a>更改預設連接</h3><p>預設是使用<code>main</code>的配置</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Hashids::getDefaultConnection(); <span class="comment">// 會回傳 main.</span></span><br></pre></td></tr></table></figure><p>可以使用以下方法更改預設連接</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Hashids::setDefaultConnection(<span class="string">&#x27;alternative&#x27;</span>); <span class="comment">// 此時預設會變成 `alternative`.</span></span><br></pre></td></tr></table></figure><h2 id="使用情境"><a href="#使用情境" class="headerlink" title="使用情境"></a>使用情境</h2><p>我是使用在 model，增加一個 hashid 的欄位，假如 model 名為 Store，就可以使用<code>Store::find(1)-&gt;hashid</code>取得 ID 是 1 的 store hashid</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="variable">$appends</span> = <span class="keyword">array</span>(<span class="string">&#x27;hashid&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHashidAttribute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Hashids::encode(<span class="keyword">$this</span>-&gt;id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="tag link"><a class="link-card" title="laravel-hashids" href="https://github.com/vinkla/laravel-hashids"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">laravel-hashids</p><p class="url">https://github.com/vinkla/laravel-hashids</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios basic</title>
      <link href="/2021/12/02/axios-basic/"/>
      <url>/2021/12/02/axios-basic/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="axios-基本語法"><a href="#axios-基本語法" class="headerlink" title="axios 基本語法"></a>axios 基本語法</h1><h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>axios 是一種 HTTP 的請求工具，也是 Vue 的作者尤雨溪推薦使用，比起 ajax 更為輕量，跟 fetch 一樣使用 promise 物件，卻不限至瀏覽器，只需要短短幾行程式碼即可，寫法更加直覺，以下為官方表明特點。</p><ol><li>從瀏覽器發出 XMLHttpRequests</li><li>可以從 node.js 發出 http 請求</li><li>支持 Promise API</li><li>攔截請求和響應</li><li>轉換請求和響應數據</li><li>取消請求</li><li>JSON 數據的自動轉換</li><li>客戶端支持防止 XSRF</li></ol><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p>介紹常見的安裝方式，其他請查閱文檔</p><h3 id="使用-NPM"><a href="#使用-NPM" class="headerlink" title="使用 NPM"></a>使用 NPM</h3><p><code>$ npm install axios</code></p><h3 id="引入-CDN"><a href="#引入-CDN" class="headerlink" title="引入 CDN"></a>引入 CDN</h3><p><code>&lt;script src=&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></p><h2 id="axios-基本用法"><a href="#axios-基本用法" class="headerlink" title="axios 基本用法"></a>axios 基本用法</h2><h3 id="axios-get-方法"><a href="#axios-get-方法" class="headerlink" title="axios get 方法"></a>axios get 方法</h3><p>沒有參數時 get 請求</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios</span><br><span class="line">  .get(<span class="string">&quot;https://example.com&quot;</span>) <span class="comment">// 放入要發出get請求網址</span></span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 當請求成功時</span></span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 請求失敗時</span></span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 總是執行</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>有參數</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios</span><br><span class="line">  .get(<span class="string">&quot;https://example.com&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="attr">ID</span>: <span class="number">123</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;) <span class="comment">// 幫你組合成https://example.com?ID=123</span></span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 當請求成功時</span></span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 請求失敗時</span></span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 總是執行</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="axios-post-方法"><a href="#axios-post-方法" class="headerlink" title="axios post 方法"></a>axios post 方法</h3><p>使用 post 請求，傳送 name 和 eamil 資料</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios</span><br><span class="line">  .post(<span class="string">&quot;/signup&quot;</span>, &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Joe&quot;</span>,</span><br><span class="line">    <span class="attr">email</span>: <span class="string">&quot;joe94113@gmail.com&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="回傳的資料"><a href="#回傳的資料" class="headerlink" title="回傳的資料"></a>回傳的資料</h3><p>當然除了 get，post 之外還有其他 HTTP 請求可以使用，使用方式也是大同小異，就是路由以及 HTTP method 的改變而已。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios.get(<span class="string">&quot;/user/12345&quot;</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(response.data);</span><br><span class="line">  <span class="built_in">console</span>.log(response.status);</span><br><span class="line">  <span class="built_in">console</span>.log(response.statusText);</span><br><span class="line">  <span class="built_in">console</span>.log(response.headers);</span><br><span class="line">  <span class="built_in">console</span>.log(response.config);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="使用六角註冊登入-API-axios-範例程式碼"><a href="#使用六角註冊登入-API-axios-範例程式碼" class="headerlink" title="使用六角註冊登入 API axios 範例程式碼"></a>使用六角註冊登入 API axios 範例程式碼</h2><iframe height="300" style="width: 100%;" scrolling="no" title="CodePen Home Hexschool AJAX POST 小節作業" src="https://codepen.io/joe94113/embed/YzrPjEQ?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/joe94113/pen/YzrPjEQ">  CodePen Home Hexschool AJAX POST 小節作業</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><div class="tag link"><a class="link-card" title="axios" href="https://github.com/axios/axios"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">axios</p><p class="url">https://github.com/axios/axios</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap Modal傳遞資料</title>
      <link href="/2021/12/01/Bootstrap-Modal%E5%82%B3%E9%81%9E%E8%B3%87%E6%96%99/"/>
      <url>/2021/12/01/Bootstrap-Modal%E5%82%B3%E9%81%9E%E8%B3%87%E6%96%99/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Bootstrap-Modal-傳遞資料"><a href="#Bootstrap-Modal-傳遞資料" class="headerlink" title="Bootstrap Modal 傳遞資料"></a>Bootstrap Modal 傳遞資料</h1><h2 id="創建基本-modal"><a href="#創建基本-modal" class="headerlink" title="創建基本 modal"></a>創建基本 modal</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;button type=<span class="string">&quot;button&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;btn btn-outline-dark&quot;</span> data-toggle=<span class="string">&quot;modal&quot;</span> data-target=<span class="string">&quot;#exampleModal&quot;</span> data-id=<span class="string">&quot;example&quot;</span>&gt;點擊查看效果&lt;/button&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal fade&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleModal&quot;</span> <span class="attr">tabindex</span>=<span class="string">&quot;-1&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;exampleModalLabel&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-dialog&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-header&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">h5</span> <span class="attr">class</span>=<span class="string">&quot;modal-title&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleModalLabel&quot;</span>&gt;</span>取得資料<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;close&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span> <span class="attr">aria-label</span>=<span class="string">&quot;Close&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-body&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                ...</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;modal-footer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;targetID&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary submit&quot;</span>&gt;</span>送出<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-secondary&quot;</span> <span class="attr">data-dismiss</span>=<span class="string">&quot;modal&quot;</span>&gt;</span>取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="點擊時傳遞-data-id-資料"><a href="#點擊時傳遞-data-id-資料" class="headerlink" title="點擊時傳遞 data-id 資料"></a>點擊時傳遞 data-id 資料</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;#exampleModal&quot;</span>).on(<span class="string">&quot;show.bs.modal&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 當點擊時取得data-id資料</span></span><br><span class="line">    <span class="keyword">var</span> targetID = $(e.relatedTarget).data(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    <span class="comment">// 填入input</span></span><br><span class="line">    $(e.currentTarget).find(<span class="string">&quot;input[name=targetID]&quot;</span>).val(targetID);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="完整範例程式碼"><a href="#完整範例程式碼" class="headerlink" title="完整範例程式碼"></a>完整範例程式碼</h2><iframe height="300" style="width: 100%;" scrolling="no" title="Passing data to a bootstrap modal" src="https://codepen.io/joe94113/embed/gOGbxKV?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/joe94113/pen/gOGbxKV">  Passing data to a bootstrap modal</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe>]]></content>
      
      
      <categories>
          
          <category> Bootstrap </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Bootstrap </tag>
            
            <tag> JQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用jQuery取得HTML Select的text和value</title>
      <link href="/2021/12/01/%E4%BD%BF%E7%94%A8jQuery%E5%8F%96%E5%BE%97HTML-Select%E7%9A%84text%E5%92%8Cvalue/"/>
      <url>/2021/12/01/%E4%BD%BF%E7%94%A8jQuery%E5%8F%96%E5%BE%97HTML-Select%E7%9A%84text%E5%92%8Cvalue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用-jQuery-取得-HTML-Select-的-text-和-value"><a href="#使用-jQuery-取得-HTML-Select-的-text-和-value" class="headerlink" title="使用 jQuery 取得 HTML Select 的 text 和 value"></a>使用 jQuery 取得 HTML Select 的 text 和 value</h1><h2 id="How-to-do"><a href="#How-to-do" class="headerlink" title="How to do"></a>How to do</h2><p>select 選項如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;select&quot;</span>&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>蘋果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>芭樂<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>&gt;</span>番茄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p>假設所選選項為”1”蘋果</p><p>取得 value</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#select&quot;</span>).val(); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p>取得 text</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#select option:selected&quot;</span>).text(); <span class="comment">// 蘋果</span></span><br></pre></td></tr></table></figure><h2 id="範例"><a href="#範例" class="headerlink" title="範例"></a>範例</h2><p>範例程式碼如下:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">      <span class="attr">src</span>=<span class="string">&quot;https://code.jquery.com/jquery-3.6.0.min.js&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">      <span class="attr">integrity</span>=<span class="string">&quot;sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">      <span class="attr">crossorigin</span>=<span class="string">&quot;anonymous&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="xml">    &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="function"><span class="keyword">function</span> <span class="title">clickselect</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> frultVal = $(<span class="string">&quot;#select&quot;</span>).val();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">let</span> frultText = $(<span class="string">&quot;#select option:selected&quot;</span>).text();</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        alert(<span class="string">`value<span class="subst">$&#123;frultVal&#125;</span> text<span class="subst">$&#123;frultText&#125;</span>`</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;select&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>蘋果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>芭樂<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;5&quot;</span>&gt;</span>番茄<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;clickselect()&quot;</span>&gt;</span>點擊<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>範例效果:<br><img src="https://i.imgur.com/wUYiXiX.gif" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JQuery </tag>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>v-for循環內的v-if</title>
      <link href="/2021/11/30/v-for%E5%BE%AA%E7%92%B0%E5%85%A7%E7%9A%84v-if/"/>
      <url>/2021/11/30/v-for%E5%BE%AA%E7%92%B0%E5%85%A7%E7%9A%84v-if/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="v-for-循環內的-v-if（顯示個別組件）"><a href="#v-for-循環內的-v-if（顯示個別組件）" class="headerlink" title="v-for 循環內的 v-if（顯示個別組件）"></a>v-for 循環內的 v-if（顯示個別組件）</h1><p>利用取得物件 ID 去判斷點擊的目標</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">  &lt;h2&gt;Todos:&lt;/h2&gt;</span><br><span class="line">  &lt;ol&gt;</span><br><span class="line">    &lt;li v-for=&quot;todo in todos&quot;&gt;</span><br><span class="line">    &lt;a v-on:click=&quot;toggle(todo)&quot; href=&quot;javascript:;&quot;&gt;【待辦事項】&lt;/a&gt;</span><br><span class="line">        &lt;span v-if=&quot;isActive == todo.id&quot;&gt;</span><br><span class="line">          &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">        &lt;/span&gt;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ol&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>以下為 Vue 的程式碼</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&quot;#app&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">todos</span>: [</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">1</span>, <span class="attr">text</span>: <span class="string">&quot;Learn JavaScript&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">2</span>, <span class="attr">text</span>: <span class="string">&quot;Learn Vue&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">3</span>, <span class="attr">text</span>: <span class="string">&quot;Play around in JSFiddle&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">id</span>: <span class="number">4</span>, <span class="attr">text</span>: <span class="string">&quot;Build something awesome&quot;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">isActive</span>: <span class="string">&quot;false&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="attr">toggle</span>: <span class="function"><span class="keyword">function</span> (<span class="params">todo</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">this</span>.isActive = todo.id;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>codepen 範例</p><iframe height="300" style="width: 100%;" scrolling="no" title="v-for 循環內的 v-if（顯示個別組件）" src="https://codepen.io/joe94113/embed/preview/vYeYdJK?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/joe94113/pen/vYeYdJK">  v-for 循環內的 v-if（顯示個別組件）</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php A non-numeric value encountered_error</title>
      <link href="/2021/11/30/php-A-non-numeric-value-encountered-error/"/>
      <url>/2021/11/30/php-A-non-numeric-value-encountered-error/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="php-報錯-A-non-numeric-value-encountered-問題的原因及解決方法"><a href="#php-報錯-A-non-numeric-value-encountered-問題的原因及解決方法" class="headerlink" title="php 報錯: A non-numeric value encountered 問題的原因及解決方法"></a>php 報錯: A non-numeric value encountered 問題的原因及解決方法</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$date</span> = <span class="string">&quot;2021-12-10&quot;</span>;</span><br><span class="line"><span class="variable">$time</span> = <span class="string">&quot;11:48:00&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$date</span> + <span class="variable">$time</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以上執行後會提示 Warning: A non-numeric value encountered</p><p>根據<a href="https://www.php.net/manual/en/migration71.other-changes.php">PHP7 文檔</a>說明：</p><p>在使用(+ - * / ** % &lt;&lt; &gt;&gt; | &amp; ^) 運算時，例如 a+b，如果 a 是開始一個數字值，但包含非數字字符(2021-12-10)，b 不是數字值開始時(11:48:00)，就會有 A non-numeric value encountered 警告。</p><p>如果只是想要字串相加，可以使用”.”連接，”+”不可行。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$date</span> = <span class="string">&quot;2021-12-10&quot;</span>;</span><br><span class="line"><span class="variable">$time</span> = <span class="string">&quot;11:48:00&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$date</span>.<span class="variable">$time</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fix_laravel_postman_419</title>
      <link href="/2021/11/30/fix-laravel-postman-419/"/>
      <url>/2021/11/30/fix-laravel-postman-419/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-解決使用-postman-post-時-419-頁面逾時"><a href="#Laravel-解決使用-postman-post-時-419-頁面逾時" class="headerlink" title="Laravel 解決使用 postman post 時 419 頁面逾時"></a>Laravel 解決使用 postman post 時 419 頁面逾時</h1><p>狀況如下圖，這是因為沒有帶入 CSRF Token</p><p><img src="https://i.imgur.com/2HJr8Sa.jpg" alt=""></p><p>讓我們來解決這問題，首先先創建一個路由，取得 CSRF Token</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;/token&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> csrf_token();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/H4sTnJB.jpg" alt=""></p><p>取得 CSRF Token 將他帶入 header<br><img src="https://i.imgur.com/700uEmv.jpg" alt=""></p><p>之後再嘗試 POST 一次問題就解決啦</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Laravel </tag>
            
            <tag> Postman </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel Seeders</title>
      <link href="/2021/10/27/Laravel_Seeder/"/>
      <url>/2021/10/27/Laravel_Seeder/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-Seeders"><a href="#Laravel-Seeders" class="headerlink" title="Laravel Seeders"></a>Laravel Seeders</h1><h2 id="簡介"><a href="#簡介" class="headerlink" title="簡介"></a>簡介</h2><p>Laravel 可以使用 seed 類別，填充測試用的資料，或者是說這個資料表的資料都是固定的不會更動，也可以使用 seed 來創建資料</p><h2 id="撰寫-seeder"><a href="#撰寫-seeder" class="headerlink" title="撰寫 seeder"></a>撰寫 seeder</h2><p>首先透過 artisan 指令來生成 seeder 檔案，命名規則也應遵守大小寫，類似<code>UserTableSeeder</code> 。</p><p><code>php artisan make:seeder UserTableSeeder</code></p><p>創建完成後開啟，會看到只有一個預設的方法:run。當執行<code>db:seed</code>就會跑 run 底下的程式碼，在 run 方法中可以新增你想新增進資料庫的數據，可以使用 DB 或是 Eloquent ORM 對資料進行新增。</p><p>laravel 有預先有一個<code>DatabaseSeeder</code>的檔案，在<code>database\seeds</code>底下，可以在 run 裡面新增程式碼。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Seeder</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Database</span>\<span class="title">Eloquent</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DatabaseSeeder</span> <span class="keyword">extends</span> <span class="title">Seeder</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Run the database seeds.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        DB::table(<span class="string">&#x27;users&#x27;</span>)-&gt;insert([</span><br><span class="line">            <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;joe&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;email&#x27;</span> =&gt; <span class="string">&#x27;joe@gmail.com&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span> =&gt; bcrypt(<span class="string">&#x27;secret&#x27;</span>),</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-factory-創建假資料"><a href="#使用-factory-創建假資料" class="headerlink" title="使用 factory 創建假資料"></a>使用 factory 創建假資料</h3><p>手動為 seed 要一一指定屬性是很麻煩的，可以使用 factory 這個輔助方法函式來新增數據到資料庫中，當一開始資料庫沒有資料，要測試的時候可以這麼做。</p><p>舉例創建 50 個 user 並與 post 關聯。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    factory(App\User::class, <span class="number">50</span>)-&gt;create()-&gt;each(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$u</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$u</span>-&gt;posts()-&gt;save(factory(App\Post::class)-&gt;make());</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="呼叫其他-Seeders"><a href="#呼叫其他-Seeders" class="headerlink" title="呼叫其他 Seeders"></a>呼叫其他 Seeders</h3><p>在<code>DatabaseSeeder</code>類別，可以使用 call 方法執行其他的 seed 類別。<br>這樣可以避免單一個 seeders 過於龐大。</p><p>只需要傳遞你想要 run 的 seeder 類別名稱就好</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Run the database seeds.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Model::unguard();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">$this</span>-&gt;call(UsersTableSeeder::class);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;call(PostsTableSeeder::class);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;call(CommentsTableSeeder::class);</span><br><span class="line"></span><br><span class="line">    Model::reguard();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="執行-seeders"><a href="#執行-seeders" class="headerlink" title="執行 seeders"></a>執行 seeders</h2><p>一旦撰寫完成 seeder 類別，可以使用<code>db:seed</code>的 artisan 指令對資料庫進行填充，<code>db:seed</code>將會運行<code>DatabaseSeeder</code>類別，透過他來呼叫其他 seeders，但也可以使用—class 來單獨運行指定的 seeder 類別:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">php artisan db:seed</span><br><span class="line"></span><br><span class="line">php artisan db:seed --<span class="class"><span class="keyword">class</span>=<span class="title">UserTableSeeder</span></span></span><br></pre></td></tr></table></figure><p>你也可以使用 migrate:refresh 指令來對資料庫進行資料填充，它會推回所有 migration(遷移檔案)並再次執行所有遷移並執行所有 seeder。在完全重建你的資料庫時這個指令是非常有用的：</p><p><code>php artisan migrate:refresh --seed</code></p><div class="tag link"><a class="link-card" title="Database: Seeding" href="https://laravel.com/docs/8.x/seeding"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Database: Seeding</p><p class="url">https://laravel.com/docs/8.x/seeding</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DATE、TIME、DATETIME 和 TIMESTAMP 類型之間有什麼區別</title>
      <link href="/2021/10/27/SQL_time_type_difference/"/>
      <url>/2021/10/27/SQL_time_type_difference/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="DATE、TIME、DATETIME-和-TIMESTAMP-類型之間有什麼區別"><a href="#DATE、TIME、DATETIME-和-TIMESTAMP-類型之間有什麼區別" class="headerlink" title="DATE、TIME、DATETIME 和 TIMESTAMP 類型之間有什麼區別"></a>DATE、TIME、DATETIME 和 TIMESTAMP 類型之間有什麼區別</h1><h3 id="DATE："><a href="#DATE：" class="headerlink" title="DATE："></a>DATE：</h3><p>具有日期部分但沒有時間部分的值。<br>MySQL 以<strong>YYYY-MM-DD</strong>格式檢索和顯示 DATE 值。支持的範圍是 1000-01-01 到 9999-12-31。</p><h3 id="DATETIME："><a href="#DATETIME：" class="headerlink" title="DATETIME："></a>DATETIME：</h3><p>用於包含日期和時間部分的值。<br>MySQL 以<strong>YYYY-MM-DD HH:MM:SS</strong>格式顯示 DATETIME 值。<br>支持的範圍是 1000-01-01 00:00:00 到 9999-12-31 23:59:59。</p><h3 id="TIMESTAMP："><a href="#TIMESTAMP：" class="headerlink" title="TIMESTAMP："></a>TIMESTAMP：</h3><p>包含日期和時間部分的值，並包括時區。<br>TIMESTAMP 的範圍是 1970-01-01 00:00:01UTC 到 2038-01-19 03:14:07UTC。</p><h3 id="TIME："><a href="#TIME：" class="headerlink" title="TIME："></a>TIME：</h3><p>其值採用<strong>HH:MM:SS</strong>格式（或 HHH:MM:SS 格式用於大小時值）。<br>TIME 值範圍從-838:59:59 到 838:59:59。小時部分可能如此之大，因為 TIME 類型不僅可以用於表示一天中的某個時間（必須小於 24 小時），還可以表示經過的時間或兩個事件之間的時間間隔（可能遠大於 24 小時，甚至是負的）。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel csrf token mismatch for ajax POST Request</title>
      <link href="/2021/10/25/Laravel%E4%BD%BF%E7%94%A8AJAX_POST%E5%95%8F%E9%A1%8C/"/>
      <url>/2021/10/25/Laravel%E4%BD%BF%E7%94%A8AJAX_POST%E5%95%8F%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-csrf-token-mismatch-for-ajax-POST-Request"><a href="#Laravel-csrf-token-mismatch-for-ajax-POST-Request" class="headerlink" title="Laravel csrf token mismatch for ajax POST Request"></a>Laravel csrf token mismatch for ajax POST Request</h1><p>在 laravel 裡使用 ajax post 方法遇到 CSRF Token 不符問題</p><p><strong>In header</strong></p><p><code>&lt;meta name=&quot;csrf-token&quot; content=&quot;&#123;&#123; csrf_token() &#125;&#125;&quot; /&gt;</code></p><p><strong>In script</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">$.ajaxSetup(&#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;X-CSRF-TOKEN&#x27;</span>: $(<span class="string">&#x27;meta[name=&quot;csrf-token&quot;]&#x27;</span>).attr(<span class="string">&#x27;content&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> AJAX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解決 json_encode 格式化的數據出現反斜杠的問題</title>
      <link href="/2021/10/25/%E8%A7%A3%E6%B1%BA%20json_encode%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%95%8F%E9%A1%8C/"/>
      <url>/2021/10/25/%E8%A7%A3%E6%B1%BA%20json_encode%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%95%8F%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="解決-json-encode-格式化的數據出現反斜杠的問題"><a href="#解決-json-encode-格式化的數據出現反斜杠的問題" class="headerlink" title="解決 json_encode 格式化的數據出現反斜杠的問題"></a>解決 json_encode 格式化的數據出現反斜杠的問題</h1><p>在上傳多個圖片檔案使用 json_encode 格式化完成時發現</p><p>原先陣列資料：<code>[&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;]</code></p><p>陣列路徑被轉換以下<br><code>[&quot;\/img\/store\/1635141776.png&quot;,&quot;\/img\/store\/1635141776.png&quot;,&quot;\/img\/store\/1635141776.png&quot;]</code><br>只要有” / “就會變成” \/ “，這樣無法讀取到檔案</p><p>可以使用以下兩種解決辦法<br><code>$data = [&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;,&quot;/img/store/1635141776.png&quot;]</code></p><ol><li><p>使用 PHP 自帶的參數：JSON_UNESCAPED_SLASHES<br><code>json_encode($data, JSON_UNESCAPED_SLASHES);</code></p></li><li><p>字串替換<br><code>str_replace(&quot;\\&quot;, &quot;/&quot;, json_encode($data))</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel use notification when some data add</title>
      <link href="/2021/10/14/laravel_storeAdd_notification_to_user/"/>
      <url>/2021/10/14/laravel_storeAdd_notification_to_user/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-use-notification-when-some-data-add"><a href="#Laravel-use-notification-when-some-data-add" class="headerlink" title="Laravel use notification when some data add"></a>Laravel use notification when some data add</h1><h4 id="今天就舉一個例子，如果有商家新增了，將通知給使用者"><a href="#今天就舉一個例子，如果有商家新增了，將通知給使用者" class="headerlink" title="今天就舉一個例子，如果有商家新增了，將通知給使用者"></a>今天就舉一個例子，如果有商家新增了，將通知給使用者</h4><h3 id="1-下載-laravel-notofocation-資料表"><a href="#1-下載-laravel-notofocation-資料表" class="headerlink" title="1. 下載 laravel notofocation 資料表"></a>1. 下載 laravel notofocation 資料表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan notifications:table</span><br><span class="line"></span><br><span class="line">php artisan migrate</span><br></pre></td></tr></table></figure><h3 id="2-創建-notification"><a href="#2-創建-notification" class="headerlink" title="2. 創建 notification"></a>2. 創建 notification</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan make:notification StoreAdded</span><br></pre></td></tr></table></figure><h3 id="3-撰寫-StoreAdded-php-回傳程式碼"><a href="#3-撰寫-StoreAdded-php-回傳程式碼" class="headerlink" title="3. 撰寫 StoreAdded.php 回傳程式碼"></a>3. 撰寫 StoreAdded.php 回傳程式碼</h3><p>toarray 函式，就是我們要發送的資料，會是一個 json。<br>因為是使用 database，所以要將 via 裡改成 database</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Notifications</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Bus</span>\<span class="title">Queueable</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Contracts</span>\<span class="title">Queue</span>\<span class="title">ShouldQueue</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Messages</span>\<span class="title">MailMessage</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notification</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StoreAdded</span> <span class="keyword">extends</span> <span class="title">Notification</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Queueable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new notification instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$store</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;store = <span class="variable">$store</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the notification&#x27;s delivery channels.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $notifiable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">via</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;database&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the mail representation of the notification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $notifiable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Illuminate\Notifications\Messages\MailMessage</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toMail</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">new</span> MailMessage)</span><br><span class="line">            -&gt;line(<span class="string">&#x27;The introduction to the notification.&#x27;</span>)</span><br><span class="line">            -&gt;action(<span class="string">&#x27;Notification Action&#x27;</span>, url(<span class="string">&#x27;/&#x27;</span>))</span><br><span class="line">            -&gt;line(<span class="string">&#x27;Thank you for using our application!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the array representation of the notification.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $notifiable</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"><span class="variable">$notifiable</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span> =&gt; <span class="keyword">$this</span>-&gt;store-&gt;name . <span class="string">&#x27;加入囉！&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;date&#x27;</span> =&gt; Carbon::now()-&gt;format(<span class="string">&#x27;m-d H:i&#x27;</span>),</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-在-User-模型加入-Notifiable"><a href="#4-在-User-模型加入-Notifiable" class="headerlink" title="4. 在 User 模型加入 Notifiable"></a>4. 在 User 模型加入 Notifiable</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Notifications</span>\<span class="title">StoreAdded</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Notifications</span>\<span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Authenticatable</span> <span class="keyword">implements</span> <span class="title">MustVerifyEmail</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Notifiable</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The attributes that are mass assignable.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$fillable</span> = [</span><br><span class="line">        <span class="string">&#x27;name&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendStoreAddedNotification</span>(<span class="params"><span class="variable">$store</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;notify(<span class="keyword">new</span> StoreAdded(<span class="variable">$store</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-新增商家發送通知"><a href="#5-新增商家發送通知" class="headerlink" title="5. 新增商家發送通知"></a>5. 新增商家發送通知</h3><p>將發送通知程式碼接在 save 後面，當新增成功才將通知加到資料庫，user 可以設定要傳給哪些人</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 找到所有使用者發送</span></span><br><span class="line"><span class="variable">$users</span> = User::all();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$users</span> <span class="keyword">as</span> <span class="variable">$user</span>) &#123;</span><br><span class="line">    <span class="variable">$user</span>-&gt;sendStoreAddedNotification(<span class="variable">$store</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-讀取通知"><a href="#6-讀取通知" class="headerlink" title="6. 讀取通知"></a>6. 讀取通知</h3><p>以下為讀取所有通知</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span>=App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span>-&gt;notifications <span class="keyword">as</span> <span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$notification</span>-&gt;type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下為讀取未讀取通知</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span>=App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span>-&gt;unreadNotifications <span class="keyword">as</span> <span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$notification</span>-&gt;type;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-將通知變成已讀取"><a href="#7-將通知變成已讀取" class="headerlink" title="7. 將通知變成已讀取"></a>7. 將通知變成已讀取</h3><p>可以一條一條設為已讀取</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span>=App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$user</span>-&gt;unreadNotifications <span class="keyword">as</span> <span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="variable">$notification</span>-&gt;markAsRead();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以一次把撈出來的 user 通知設為已讀取<br><code>$user-&gt;unreadNotifications-&gt;markAsRead();</code></p><p>取出單筆通知(不一定是個好方法)</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$user</span> = App\Models\User::find(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$notification</span> = <span class="variable">$user</span>-&gt;notifications()-&gt;find(<span class="variable">$notificationid</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$notification</span>) &#123;</span><br><span class="line">    <span class="variable">$notification</span>-&gt;markAsRead();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刪除通知<br><code>$user-&gt;notifications()-&gt;delete();</code></p><h3 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h3><p>內建 notification 模型放在這裡，可以使用普通數據庫查詢<br><code>Illuminate\Notifications\DatabaseNotification</code></p><div class="tag link"><a class="link-card" title="Notifications" href="https://laravel.com/docs/8.x/notifications"><div class="left"><img src="https://imgur.com/99bXWYP.jpg"/></div><div class="right"><p class="text">Notifications</p><p class="url">https://laravel.com/docs/8.x/notifications</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
            <tag> Notifications </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS取得目前瀏覽器位置</title>
      <link href="/2021/10/14/js_get_location/"/>
      <url>/2021/10/14/js_get_location/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-取得目前瀏覽器位置"><a href="#JS-取得目前瀏覽器位置" class="headerlink" title="JS 取得目前瀏覽器位置"></a>JS 取得目前瀏覽器位置</h1><p><a href="https://developer.mozilla.org/zh-TW/docs/Web/API/Navigator/geolocation">Navigator.geolocation DOC</a></p><p><code>Navigator.geolocation</code> 回傳一個唯讀的 <code>Geolocation</code> 物件，透過這個物件可以存取設備的位置訊息。同時也允許網站或應用程式根據使用者的位置提供客製化的結果。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;getLocation()&quot;</span>&gt;</span>取得您目前所在位置的經緯度<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="keyword">var</span> m = <span class="built_in">document</span>.getElementById(<span class="string">&quot;msg&quot;</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">getLocation</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//取得 經緯度</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (navigator.geolocation) &#123;</span></span><br><span class="line"><span class="javascript">          <span class="comment">//</span></span></span><br><span class="line"><span class="javascript">          navigator.geolocation.getCurrentPosition(showPosition); <span class="comment">//有拿到位置就呼叫 showPosition 函式</span></span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          m.innerHTML =</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;您的瀏覽器不支援 顯示地理位置 API ，請使用其它瀏覽器開啟 這個網址&quot;</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">      <span class="function"><span class="keyword">function</span> <span class="title">showPosition</span>(<span class="params">position</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        m.innerHTML =</span></span><br><span class="line"><span class="javascript">          <span class="string">&quot; 緯度 (Latitude): &quot;</span> +</span></span><br><span class="line"><span class="javascript">          position.coords.latitude +</span></span><br><span class="line"><span class="javascript">          <span class="string">&quot;&lt;br&gt;經度 (Longitude): &quot;</span> +</span></span><br><span class="line"><span class="javascript">          position.coords.longitude;</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下來實測看看</p><p><img src="https://i.imgur.com/Xua1a5u.gif" alt=""></p><p>成功拉!!!</p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel Carbon</title>
      <link href="/2021/10/14/Laravel_Carbon/"/>
      <url>/2021/10/14/Laravel_Carbon/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-Carbon"><a href="#Laravel-Carbon" class="headerlink" title="Laravel Carbon"></a>Laravel Carbon</h1><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><p><code>composer require nesbot/carbon</code></p><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><p>可以在<code>php artisan tinker</code>裡測試<code>Carbon\Carbon::now()</code></p><p>以下是我個人在工作上常使用的範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>; <span class="comment">// 使用套件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$now</span> = Carbon::now(); <span class="comment">// 2021-11-19 14:07:58.592068 Asia/Taipei (+08:00)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$formatedDate</span> = <span class="variable">$now</span>-&gt;format(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$nowTime</span> = <span class="variable">$now</span>-&gt;toTimeString(); <span class="comment">// 14:15:16</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$nowDay</span> = <span class="variable">$now</span>-&gt;dayOfWeek <span class="comment">// 0~6 0 = 星期日</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$nowDate</span> = <span class="variable">$now</span>-&gt;toDateString(); <span class="comment">// 2019-12-12</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$nowDateTime</span> = <span class="variable">$now</span>-&gt;toDateTimeString(); <span class="comment">// 2019-12-12 14:15:16</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$nowTimestamp</span> = <span class="variable">$now</span>-&gt;timestamp; <span class="comment">// 時間戳</span></span><br></pre></td></tr></table></figure><h2 id="官方範例程式碼"><a href="#官方範例程式碼" class="headerlink" title="官方範例程式碼"></a>官方範例程式碼</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Carbon</span>\<span class="title">Carbon</span>;</span><br><span class="line"></span><br><span class="line">printf(<span class="string">&quot;Right now is %s&quot;</span>, Carbon::now()-&gt;toDateTimeString());</span><br><span class="line">printf(<span class="string">&quot;Right now in Vancouver is %s&quot;</span>, Carbon::now(<span class="string">&#x27;America/Vancouver&#x27;</span>));  <span class="comment">//implicit __toString()</span></span><br><span class="line"><span class="variable">$tomorrow</span> = Carbon::now()-&gt;addDay();</span><br><span class="line"><span class="variable">$lastWeek</span> = Carbon::now()-&gt;subWeek();</span><br><span class="line"><span class="variable">$nextSummerOlympics</span> = Carbon::createFromDate(<span class="number">2016</span>)-&gt;addYears(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$officialDate</span> = Carbon::now()-&gt;toRfc2822String();</span><br><span class="line"></span><br><span class="line"><span class="variable">$howOldAmI</span> = Carbon::createFromDate(<span class="number">1975</span>, <span class="number">5</span>, <span class="number">21</span>)-&gt;age;</span><br><span class="line"></span><br><span class="line"><span class="variable">$noonTodayLondonTime</span> = Carbon::createFromTime(<span class="number">12</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;Europe/London&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$internetWillBlowUpOn</span> = Carbon::create(<span class="number">2038</span>, <span class="number">01</span>, <span class="number">19</span>, <span class="number">3</span>, <span class="number">14</span>, <span class="number">7</span>, <span class="string">&#x27;GMT&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Don&#x27;t really want this to happen so mock now</span></span><br><span class="line">Carbon::setTestNow(Carbon::createFromDate(<span class="number">2000</span>, <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// comparisons are always done in UTC</span></span><br><span class="line"><span class="keyword">if</span> (Carbon::now()-&gt;gte(<span class="variable">$internetWillBlowUpOn</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Phew! Return to normal behaviour</span></span><br><span class="line">Carbon::setTestNow();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Carbon::now()-&gt;isWeekend()) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Party!&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Over 200 languages (and over 500 regional variants) supported:</span></span><br><span class="line"><span class="keyword">echo</span> Carbon::now()-&gt;subMinutes(<span class="number">2</span>)-&gt;diffForHumans(); <span class="comment">// &#x27;2 minutes ago&#x27;</span></span><br><span class="line"><span class="keyword">echo</span> Carbon::now()-&gt;subMinutes(<span class="number">2</span>)-&gt;locale(<span class="string">&#x27;zh_CN&#x27;</span>)-&gt;diffForHumans(); <span class="comment">// &#x27;2分钟前&#x27;</span></span><br><span class="line"><span class="keyword">echo</span> Carbon::parse(<span class="string">&#x27;2019-07-23 14:51&#x27;</span>)-&gt;isoFormat(<span class="string">&#x27;LLLL&#x27;</span>); <span class="comment">// &#x27;Tuesday, July 23, 2019 2:51 PM&#x27;</span></span><br><span class="line"><span class="keyword">echo</span> Carbon::parse(<span class="string">&#x27;2019-07-23 14:51&#x27;</span>)-&gt;locale(<span class="string">&#x27;fr_FR&#x27;</span>)-&gt;isoFormat(<span class="string">&#x27;LLLL&#x27;</span>); <span class="comment">// &#x27;mardi 23 juillet 2019 14:51&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ... but also does &#x27;from now&#x27;, &#x27;after&#x27; and &#x27;before&#x27;</span></span><br><span class="line"><span class="comment">// rolling up to seconds, minutes, hours, days, months, years</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$daysSinceEpoch</span> = Carbon::createFromTimestamp(<span class="number">0</span>)-&gt;diffInDays();</span><br></pre></td></tr></table></figure><p>更多用法請見<a href="https://carbon.nesbot.com/">官方網站</a></p><div class="tag link"><a class="link-card" title="briannesbitt/carbon" href="https://github.com/briannesbitt/carbon"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">briannesbitt/carbon</p><p class="url">https://github.com/briannesbitt/carbon</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel how to post values from a multiple select</title>
      <link href="/2021/10/13/laravel_post_MultipleSelect_values/"/>
      <url>/2021/10/13/laravel_post_MultipleSelect_values/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-how-to-post-values-from-a-multiple-select"><a href="#Laravel-how-to-post-values-from-a-multiple-select" class="headerlink" title="Laravel how to post values from a multiple select"></a>Laravel how to post values from a multiple select</h1><p>首先，記得在你的 select tag 的 name 後面加上括號[]，這樣子在複選後，傳到後端去的時候才會取得到複選的所有值。</p><p>使用 dd() 函式印出，就可以看到陣列裡面包含選住的值</p><p>First , remember to add parentheses [] after the name of your select tag, so that after the select, all the checked values will be obtained when it is passed to the backend.</p><p>Use the dd() function to print out, you can see that the array contains the selected value.</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;form&quot;</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;number&quot;</span> <span class="attr">name</span>=<span class="string">&quot;number[]&quot;</span> <span class="attr">multiple</span>=<span class="string">&quot;multiple&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;3&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;4&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use Chosen JQuery plugin on Laravel</title>
      <link href="/2021/10/13/laravel_use_chosen/"/>
      <url>/2021/10/13/laravel_use_chosen/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="How-to-use-Chosen-JQuery-plugin-on-Laravel"><a href="#How-to-use-Chosen-JQuery-plugin-on-Laravel" class="headerlink" title="How to use Chosen JQuery plugin on Laravel"></a>How to use Chosen JQuery plugin on Laravel</h1><p><a href="https://packagist.org/packages/harvesthq/chosen">chosen packagist</a></p><h3 id="1-Install"><a href="#1-Install" class="headerlink" title="1. Install"></a>1. Install</h3><pre><code>`composer require harvesthq/chosen`</code></pre><h3 id="2-Import"><a href="#2-Import" class="headerlink" title="2. Import"></a>2. Import</h3><p>Import jquery first, otherwise an error will occur</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-add-form"><a href="#3-add-form" class="headerlink" title="3. add form"></a>3. add form</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span></span></span><br><span class="line"><span class="tag">  <span class="attr">href</span>=<span class="string">&quot;https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;.chosen-select&quot;</span>).chosen(&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">no_results_text</span>: <span class="string">&quot;Oops, nothing found!&quot;</span>,</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript">  &#125;);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://httpbin.org/post&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span></span></span><br><span class="line"><span class="tag">    <span class="attr">data-placeholder</span>=<span class="string">&quot;select your favorite fruit&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">multiple</span></span></span><br><span class="line"><span class="tag">    <span class="attr">class</span>=<span class="string">&quot;chosen-select&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">name</span>=<span class="string">&quot;fruit[]&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Banana<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Cherry<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Kiwi fruit<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Mango<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Orange<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Papaya<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>Sapota<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Run code</li></ol><p><img src="https://i.imgur.com/PAuSrFF.png" alt=""></p><ol><li>Submit</li></ol><p><img src="https://i.imgur.com/kNCfZCS.jpg" alt=""></p><p>Need more changes see <a href="https://harvesthq.github.io/chosen/">chosen doc</a></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JQuery </tag>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP學習筆記(持續更新中)</title>
      <link href="/2021/10/05/php_learn/"/>
      <url>/2021/10/05/php_learn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PHP-學習筆記-持續更新中"><a href="#PHP-學習筆記-持續更新中" class="headerlink" title="PHP 學習筆記(持續更新中)"></a>PHP 學習筆記(持續更新中)</h1><h2 id="PHP-的資料型態"><a href="#PHP-的資料型態" class="headerlink" title="PHP 的資料型態"></a>PHP 的資料型態</h2><h3 id="Bollean-布林值"><a href="#Bollean-布林值" class="headerlink" title="Bollean 布林值"></a>Bollean 布林值</h3><p>算是最簡單的資料型態，可以為 true 跟 false 不區分大小寫。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$foo</span> = <span class="literal">true</span>; <span class="comment">// 設置foo變數為true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>常用在判斷式</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 兩個等於代表操作符，檢測兩個遍量是否相等，返回布林值</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$password</span> == <span class="string">&#x27;123&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;pass&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這樣寫是不必要的</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$check</span> == <span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;check in&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用以下方式</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$check</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;check in&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Integer-整數型態"><a href="#Integer-整數型態" class="headerlink" title="Integer 整數型態"></a>Integer 整數型態</h3><p>整型值 int 可以使用十进制，十六进制，八进制或二进制表示，前面可以加上可選的符號（- 或者 +）。 可以用負運算符 来表示一个負的 int。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>; <span class="comment">// 十進位</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">012</span>; <span class="comment">// 八進位 (等於十進位 10)</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">0xa</span>; <span class="comment">// 十六進位 (等于十進制 10)</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">0b1010</span>; <span class="comment">// 二進制数字 (等于十進制 10)</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1_0_1_0</span>_; <span class="comment">// 整型数值 (PHP 7.4.0 以后)輸出1010</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>整數溢出，如果超過 int 範圍會轉換成 float 型態。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// var_dump()方法是判斷一個變量的類型與長度,並輸出變量的數值</span></span><br><span class="line"><span class="variable">$large_number</span> = <span class="number">2147483647</span>;</span><br><span class="line">var_dump(<span class="variable">$large_number</span>); <span class="comment">// int(2147483647)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$large_number</span> = <span class="number">2147483648</span>;</span><br><span class="line">var_dump(<span class="variable">$large_number</span>); <span class="comment">// float(2147483648)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Float-符點數"><a href="#Float-符點數" class="headerlink" title="Float 符點數"></a>Float 符點數</h3><p>擁有小數點的正負數值，<br>通常最大值是 1.8e308 並具有 14 位十進制數字的精度。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$num</span> = <span class="number">99.01</span>;</span><br><span class="line"><span class="variable">$num</span> = -<span class="number">50.30</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="string-字符串"><a href="#string-字符串" class="headerlink" title="string 字符串"></a>string 字符串</h3><p>由字符組成，每個字符等同於一個字節。這意味著 PHP 只能支持 256 的字符集，因此不支持 Unicode 。</p><blockquote><p>注意:在 32 位版本中，string 最大可以達到 2GB（最多 2147483647 字節）。</p></blockquote><p>定義一個字符串最簡單就是用’’單引號刮起來。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$text</span> = <span class="string">&#x27;This is test string&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$text</span>; <span class="comment">// 輸出: This is test string</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果包含在雙引號內就可以對特殊字符進行解析。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 可以直接將變數帶入</span></span><br><span class="line"><span class="variable">$food</span> = <span class="string">&#x27;noodles&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hi \n&quot;</span>; <span class="comment">// 換行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;I like to eat <span class="subst">$food</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Array-數組"><a href="#Array-數組" class="headerlink" title="Array 數組"></a>Array 數組</h3><p>PHP 中的 array 實際上是一個有序映射。映射是一種把 values 關聯到 keys 的類型。</p><p>可以用 array() 方法來結構一個 array 。接受任意數量用逗號分隔的 鍵（key） =&gt; 值（value） 。以下範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arry</span> = <span class="keyword">array</span>( <span class="number">0</span> =&gt; <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">               <span class="number">1</span> =&gt; <span class="string">&#x27;tomato&#x27;</span>,</span><br><span class="line">               <span class="number">2</span> =&gt; <span class="string">&#x27;banana&#x27;</span>,);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arry</span>[<span class="number">0</span>]; <span class="comment">// apple</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用以下短數組語法</span></span><br><span class="line"><span class="variable">$arry</span> = [ <span class="number">0</span> =&gt; <span class="string">&#x27;apple&#x27;</span>,</span><br><span class="line">          <span class="number">1</span> =&gt; <span class="string">&#x27;tomato&#x27;</span>,</span><br><span class="line">          <span class="number">2</span> =&gt; <span class="string">&#x27;banana&#x27;</span>,];</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arry</span>[<span class="number">0</span>]; <span class="comment">// apple</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>沒有鍵名的索引數組</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;tomato&quot;</span>, <span class="string">&quot;banana&quot;</span>, );</span><br><span class="line">var_dump(<span class="variable">$array</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;apple&quot;</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;tomato&quot;</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">6</span>) <span class="string">&quot;banana&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>數組可以用在許多地方，以下有些範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$map</span> = <span class="keyword">array</span>( <span class="string">&#x27;version&#x27;</span> =&gt; <span class="number">4</span>,</span><br><span class="line">              <span class="string">&#x27;OS&#x27;</span> =&gt; <span class="string">&#x27;Linux&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;lang&#x27;</span> =&gt; <span class="string">&#x27;english&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;short_tags&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"><span class="comment">// . . .完全等同於:</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;version&#x27;</span>] = <span class="number">4</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;os&#x27;</span>] = <span class="string">&#x27;Linux&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;lang&#x27;</span>] = <span class="string">&#x27;english&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;short_tags&#x27;</span>]  = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$a</span>[<span class="string">&#x27;os&#x27;</span>]); <span class="comment">// 刪除 &quot;Linux&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>輸出集合</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$maps</span> = <span class="keyword">array</span>( <span class="string">&#x27;version&#x27;</span> =&gt; <span class="number">4</span>,</span><br><span class="line">              <span class="string">&#x27;OS&#x27;</span> =&gt; <span class="string">&#x27;Linux&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;lang&#x27;</span> =&gt; <span class="string">&#x27;english&#x27;</span>,</span><br><span class="line">              <span class="string">&#x27;short_tags&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$maps</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$key</span> is <span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// version is 4</span></span><br><span class="line"><span class="comment">// OS is Linux</span></span><br><span class="line"><span class="comment">// lang is english</span></span><br><span class="line"><span class="comment">// short_tags is 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>Array 是有序的。也可以使用不同的排序函数来改變順序。</p><p>數組排序範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">sort(<span class="variable">$files</span>); <span class="comment">// 對value排序</span></span><br><span class="line">print_r(<span class="variable">$files</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Iterable-可迭代對象"><a href="#Iterable-可迭代對象" class="headerlink" title="Iterable 可迭代對象"></a>Iterable 可迭代對象</h3><p>它接受任何 array 或實現了 Traversable(可遍歷) 接口的對象。<br>這些類型都能用 foreach 迭代， 也可以和 生成器 里的 yield from 一起使用。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen</span>(<span class="params"></span>): <span class="title">iterable</span> </span>&#123; <span class="comment">// 建立一個可迭代生成器</span></span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$iterable</span> = gen(); <span class="comment">// 實例化</span></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$iterable</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 答案相同</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen</span>(<span class="params"></span>): <span class="title">iterable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$iterable</span> = gen();</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$iterable</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$value</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Object-對象"><a href="#Object-對象" class="headerlink" title="Object 對象"></a>Object 對象</h3><p>要創建一个新的對象 object，使用 new 語句實例化一个類：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SayHi</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">do_sayhi</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Hello.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">new</span> foo;</span><br><span class="line"><span class="variable">$bar</span>-&gt;do_sayhi(); <span class="comment">// Hello</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果將 Object 轉換成 Object 將不會有任何變化，如果其它任何類型的值被轉換成對象，將會創建一个内置類 stdClass 的實例。如果该值为 null，則新的實例為空。<br>array 轉換成 object 將使 Key 值成為屬性名並具有相對應的值，參考以下範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$obj</span> = (<span class="keyword">object</span>) <span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span> =&gt; <span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">var_dump(<span class="keyword">isset</span>(<span class="variable">$obj</span>-&gt;&#123;<span class="string">&#x27;1&#x27;</span>&#125;)); <span class="comment">// PHP 7.2.0 後輸出 &#x27;bool(true)&#x27;，之前版本會輸出 &#x27;bool(false)&#x27;</span></span><br><span class="line">var_dump(key(<span class="variable">$obj</span>)); <span class="comment">// PHP 7.2.0 後輸出 &#x27;string(1) &quot;1&quot;&#x27;，之前版本輸出  &#x27;int(1)&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>對於其他值，會包含進成員變量名 scalar。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$obj</span> = (<span class="keyword">object</span>) <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;scalar;  <span class="comment">// outputs &#x27;hello&#x27;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="Null-類型"><a href="#Null-類型" class="headerlink" title="Null 類型"></a>Null 類型</h3><p>特殊的 null 值表示一个變數没有值。NULL 類型唯一可能的值就是 null。</p><p>在下列情况下一个變數被认为是 null：</p><ul><li><p>被賦值为 null。</p></li><li><p>尚未被賦值。</p></li><li><p>被 unset()。</p></li></ul><p>null 類型只有一个值，就是不區分大小寫的常量 null。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$var</span> = <span class="literal">NULL</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PHP-變數命名規則"><a href="#PHP-變數命名規則" class="headerlink" title="PHP 變數命名規則"></a>PHP 變數命名規則</h2><p>PHP 中的變數用一个美元符號後面跟變數名稱来表示。變數名是區分大小寫的。</p><p>變數名與 PHP 中其它的標籤一样遵循相同的規則。一个有效的變量名由字母或者底線開頭，後面加上任意数量的字母，数字，或者底線。 按照正常的正規表示法，他將被表達為：’\^[a-zA-Z_\x80-\xff][a-za-z0-9_\x80-\xff]*$’。</p><blockquote><p>$this 是一個特殊變數，他不能被賦值。</p></blockquote><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$firstName</span> = <span class="string">&#x27;Wang&#x27;</span>;</span><br><span class="line"><span class="variable">$lastName</span> = <span class="string">&#x27;Joe&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$firstName</span>, <span class="subst">$lastName</span>&quot;</span>;      <span class="comment">// 输出 &quot;Wang, Joe&quot;</span></span><br><span class="line"></span><br><span class="line">$<span class="number">4</span>site = <span class="string">&#x27;not yet&#x27;</span>;     <span class="comment">// 非法變數名；以數字開頭</span></span><br><span class="line"><span class="variable">$_4site</span> = <span class="string">&#x27;not yet&#x27;</span>;    <span class="comment">// 合法變數名；以底線開頭</span></span><br><span class="line"><span class="variable">$i</span>站點is = <span class="string">&#x27;TW&#x27;</span>;  <span class="comment">// 合法變數名；可以用中文</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h2><p>可以使用 const 關鍵字或 define() 函數兩種方法來定義一個常量。函數 define() 允許將常量定義為一個表達式，而 const 關鍵字有一些限制。一個常量一旦被定義，就不能再改變或者取消定義。</p><p>使用 const 關鍵字定義常量時，只能包含標量數據（bool、int、float 、string）。可以將常量定義為一個表達式，也可以定義為一個 array。還可以定義 resource 為常量，但應盡量避免，因為可能會造成不可預料的結果。</p><p>可以簡單的通過指定其名字來取得常量的值，與變量不同，不應該在常量前面加上 $ 符號。如果常量名是動態的，也可以用函數 constant() 來獲取常量的值。用 get_defined_constants() 可以獲得所有已定義的常量列表。</p><p>以下為定義常量範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;CONSTANT&quot;</span>, <span class="string">&quot;Hello world.&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> CONSTANT; <span class="comment">// 輸出 &quot;Hello world.&quot;</span></span><br><span class="line"><span class="keyword">echo</span> Constant; <span class="comment">// 拋出錯誤：未定義的常量 &quot;Constant&quot;</span></span><br><span class="line">               <span class="comment">// 在 PHP 8.0.0 之前，输出 &quot;Constant&quot; 會併發出一個提示級別錯誤訊息</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下範例為使用關鍵字 const 定義常量</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 簡單的標量值</span></span><br><span class="line"><span class="keyword">const</span> CONSTANT = <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> CONSTANT;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 標量表達式</span></span><br><span class="line"><span class="keyword">const</span> ANOTHER_CONST = CONSTANT.<span class="string">&#x27;; Goodbye World&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> ANOTHER_CONST;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ANIMALS = <span class="keyword">array</span>(<span class="string">&#x27;dog&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;bird&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> ANIMALS[<span class="number">1</span>]; <span class="comment">// 將輸出 &quot;cat&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 常量數組</span></span><br><span class="line">define(<span class="string">&#x27;ANIMALS&#x27;</span>, <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;dog&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cat&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;bird&#x27;</span></span><br><span class="line">));</span><br><span class="line"><span class="keyword">echo</span> ANIMALS[<span class="number">1</span>]; <span class="comment">// 將輸出 &quot;cat&quot;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>魔術常量</p><div class="table-container"><table><thead><tr><th>名字</th><th>說明</th></tr></thead><tbody><tr><td>__LINE__</td><td>文件中的當前行號</td></tr><tr><td>__FILE__</td><td>文件的完整路徑和文件名。如果用在被包含文件中，則返回被包含的文件名。</td></tr><tr><td>__DIR__</td><td>文件所在的目錄。如果用在被包括文件中，則返回被包括的文件所在的目錄。它等價於 dirname(__FILE__)。除非是根目錄，否則目錄中名不包括末尾的斜杠。</td></tr><tr><td>__FUNCTION__</td><td>當前函數的名稱。匿名函數則為 {closure}。</td></tr><tr><td>__CLASS__</td><td>當前類的名稱。類名包括其被聲明的作用域（例如 Foo\Bar）。當用在 trait 方法中時，__CLASS__ 是調用 trait 方法的類的名字</td></tr><tr><td>__TRAIT__</td><td>Trait 的名字。 Trait 名包括其被聲明的作用域（例如 Foo\Bar）。</td></tr><tr><td>__METHOD__</td><td>class 的方法名</td></tr><tr><td>__NAMESPACE__</td><td>當前命名空間名稱</td></tr><tr><td>ClassName::class</td><td>完整的 class 名稱</td></tr></tbody></table></div><p>以下為魔術常量範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UserModel</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">User</span> &#123;</span><br><span class="line">        <span class="title">public</span> <span class="title">function</span> <span class="title">__construct</span>() &#123;</span><br><span class="line">            <span class="title">echo</span> &#x27;<span class="title">I</span> <span class="title">am</span> <span class="title">in</span> &#x27;.<span class="title">__CLASS__</span>.&quot;\<span class="title">n</span>&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">showData</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;I am in &#x27;</span>.<span class="keyword">__METHOD__</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> User;</span><br><span class="line">    <span class="variable">$obj</span>-&gt;showData();</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">__NAMESPACE__</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// I am in UserModel\User</span></span><br><span class="line"><span class="comment">// I am in UserModel\User::showData</span></span><br><span class="line"><span class="comment">// UserModel</span></span><br></pre></td></tr></table></figure><h2 id="PHP-運算符"><a href="#PHP-運算符" class="headerlink" title="PHP 運算符"></a>PHP 運算符</h2><h3 id="算數運算符"><a href="#算數運算符" class="headerlink" title="算數運算符"></a>算數運算符</h3><p>跟國中小數學基本數學知識相同。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> + <span class="number">1</span> * <span class="variable">$b</span>; <span class="comment">// output: 3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下圖表為算術運算符</p><div class="table-container"><table><thead><tr><th>例子</th><th>名称</th><th>结果</th></tr></thead><tbody><tr><td>+$a</td><td>標識</td><td>根據情况將 $a 轉化為 int 或 float。</td></tr><tr><td>-$a</td><td>取反</td><td>$a 的負值。</td></tr><tr><td>$a + $b</td><td>加法</td><td>$a 和 $b 的和。</td></tr><tr><td>$a - $b</td><td>减法</td><td>$a 和 $b 的差。</td></tr><tr><td>$a * $b</td><td>乘法</td><td>$a 和 $b 的積。</td></tr><tr><td>$a / $b</td><td>除法</td><td>$a 除以 $b 的商。</td></tr><tr><td>$a % $b</td><td>取模</td><td>$a 除以 $b 的餘數。</td></tr><tr><td>$a ** $b</td><td>求幂</td><td>$a 的 $b 次方的值。</td></tr></tbody></table></div><hr><h3 id="賦值運算符"><a href="#賦值運算符" class="headerlink" title="賦值運算符"></a>賦值運算符</h3><p>基本的賦值運算符是“=”。一開始可能會以為它是“等於”，其實不是的。它實際上意味著把右邊表達式的值賦給左邊的運算數</p><p>下圖為算術賦值運算符</p><div class="table-container"><table><thead><tr><th>例子</th><th>等同於</th><th>操作</th></tr></thead><tbody><tr><td>$a += $b</td><td>$a = $a + $b</td><td>加法</td></tr><tr><td>$a -= $b</td><td>$a = $a - $b</td><td>减法</td></tr><tr><td>$a *= $b</td><td>$a = $a * $b</td><td>乘法</td></tr><tr><td>$a /= $b</td><td>$a = $a / $b</td><td>除法</td></tr><tr><td>$a %= $b</td><td>$a = $a % $b</td><td>取餘數</td></tr><tr><td>$a **= $b</td><td>$a = $a ** $b</td><td>指數</td></tr></tbody></table></div><p>下圖為其他賦值運算符</p><div class="table-container"><table><thead><tr><th>例子</th><th>等同於</th><th>操作</th></tr></thead><tbody><tr><td>$a .= $b</td><td>$a = $a . $b</td><td>字符串拼接</td></tr><tr><td>$a ?? $b</td><td>$a = $a ?? $b</td><td>NULL 合併</td></tr></tbody></table></div><hr><h3 id="位元運算"><a href="#位元運算" class="headerlink" title="位元運算"></a>位元運算</h3><p>位運算符允許對整型數中指定的位進行求值和操作。</p><p>下圖為位元運算符號<br>| 例子 | 名稱 | 结果 |<br>| ———— | —————————- | ———————————————————————————— |<br>| $a &amp; $b | And（按位與） | 將把 $a 和 $b 中都為 1 的位設為 1。 |<br>| $a | $b | Or（按位或） | 將把 $a 和 $b 中任何一個為 1 的位設為 1。 |<br>| $a ^ $b | Xor（按位異或） | 將把 $a 和 $b 中一個為 1 另一個為 0 的位設為 1。 |<br>| ~ $a | Not（按位取反） | 將 $a 中為 0 的位設為 1，反之亦然。 |<br>| $a &lt;&lt; $b | Shift left（左移） | 將 $a 中的位向左移動 $b 次（每一次移動都表示“乘以 2”）。 |<br>| $a &gt;&gt; $b | Shift right（右移） | 將 $a 中的位向右移動 $b 次（每一次移動都表示“除以 2”）。 |</p><hr><h3 id="比較運算符"><a href="#比較運算符" class="headerlink" title="比較運算符"></a>比較運算符</h3><p>比較運算符，如同它們名稱所暗示的，允許對兩個值進行比較。</p><div class="table-container"><table><thead><tr><th>例子</th><th>名稱</th><th>結果</th></tr></thead><tbody><tr><td>$a == $b</td><td>等於</td><td>true，如果類型轉換後 $a 等於 $b。</td></tr><tr><td>$a === $b</td><td>全等於</td><td>true，如果 $a 等於 $b，並且它們的類型也相同。</td></tr><tr><td>$a != $b</td><td>不等於</td><td>true，如果類型轉換後 $a 不等於 $b。</td></tr><tr><td>$a &lt;&gt; $b</td><td>不等於</td><td>true，如果類型轉換後 $a 不等於 $b。</td></tr><tr><td>$a !== $b</td><td>不全等</td><td>true，如果 $a 不等於 $b，或者它們的類型不同。</td></tr><tr><td>$a &lt; $b</td><td>小於</td><td>true，如果 $a 嚴格小於 $b。</td></tr><tr><td>$a &gt; $b</td><td>大於</td><td>true，如果 $a 嚴格大於 $b。</td></tr><tr><td>$a &lt;= $b</td><td>小於等於</td><td>true，如果 $a 小於或者等於 $b。</td></tr><tr><td>$a &gt;= $b</td><td>大於等於</td><td>true，如果 $a 大於或者等於 $b。</td></tr><tr><td>$a &lt;=&gt; $b</td><td>太空船運算符（組合比較符）</td><td>當$a 小於、等於、大於 $b 時 分别返回一個小於、等於、大於 0 的 int 值。</td></tr></tbody></table></div><hr><h3 id="執行運算符"><a href="#執行運算符" class="headerlink" title="執行運算符"></a>執行運算符</h3><p>PHP 支持一個執行運算符：反引號（``）。注意這不是單引號！ PHP 將嘗試將反引號中的內容作為 shell 命令來執行，並將其輸出信息返回（即，可以賦給一個變量而不是簡單地丟棄到標準輸出）。使用反引號運算符“`”的效果與函數 shell_exec() 相同。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$output</span> = `ipconfig /all`;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;<span class="subst">$output</span>&lt;/pre&gt;&quot;</span>; <span class="comment">// 輸出所有IP資訊</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="遞增-遞減運算符"><a href="#遞增-遞減運算符" class="headerlink" title="遞增/遞減運算符"></a>遞增/遞減運算符</h3><p>:::warning<br>注意: 遞增／遞減運算符不影響布爾值。遞減 null 值也沒有效果，但是遞增 null 的結果是 1。:zap:<br>:::</p><div class="table-container"><table><thead><tr><th>例子</th><th>名称</th><th>效果</th></tr></thead><tbody><tr><td>++$a</td><td>先加</td><td>$a 的值加一，然後返回 $a。</td></tr><tr><td>$a++</td><td>後加</td><td>返回 $a，然後將 $a 的值加一。</td></tr><tr><td>—$a</td><td>先减</td><td>$a 的值减一， 然后返回 $a。</td></tr><tr><td>$a—</td><td>後减</td><td>返回 $a，然後將 $a 的值减一。</td></tr></tbody></table></div><p>簡易的範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;後增量(PostIncrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 5: &quot;</span> . <span class="variable">$a</span>++ . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 6: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;先增量(PreIncrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 6: &quot;</span> . ++<span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 6: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;後減(PostDecrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 5: &quot;</span> . <span class="variable">$a</span>-- . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 4: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;先減(Predecrement)\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 4: &quot;</span> . --<span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Should be 4: &quot;</span> . <span class="variable">$a</span> . <span class="string">&quot;&lt;br /&gt;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="邏輯運算符"><a href="#邏輯運算符" class="headerlink" title="邏輯運算符"></a>邏輯運算符</h3><div class="table-container"><table><thead><tr><th>例子</th><th>名稱</th><th>结果</th></tr></thead><tbody><tr><td>$a and $b</td><td>And（和）</td><td>true，如果 $a 和 $b 都為 true。</td></tr><tr><td>$a or $b</td><td>Or（或）</td><td>true，如果 $a 或 $b 任一為 true。</td></tr><tr><td>$a xor $b</td><td>Xor（異或）</td><td>true，如果 $a 或 $b 任一為 true，但不同時是。</td></tr><tr><td>! $a</td><td>Not（非）</td><td>true，如果 $a 不為 true。</td></tr><tr><td>$a &amp;&amp; $b</td><td>And（與）</td><td>true，如果 $a 和 $b 都為 true。</td></tr><tr><td>$a \</td><td>\</td><td>$b</td><td>Or（或）</td><td>true，如果 $a 或 $b 任一為 true。</td></tr></tbody></table></div><hr><h3 id="字符串運算符"><a href="#字符串運算符" class="headerlink" title="字符串運算符"></a>字符串運算符</h3><p>有兩個字符串（string）運算符。第一個是連接運算符（“.”），它返回其左右參數連接後的字符串。第二個是連接賦值運算符（“.=”），它將右邊參數附加到左邊的參數之後。</p><p>範例程式碼</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$a</span> . <span class="string">&quot;World!&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>; <span class="comment">// output &quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Hello &quot;</span>;</span><br><span class="line"><span class="variable">$a</span> .= <span class="string">&quot;World!&quot;</span>;     <span class="comment">// output &quot;Hello World!&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="數組運算符"><a href="#數組運算符" class="headerlink" title="數組運算符"></a>數組運算符</h3><div class="table-container"><table><thead><tr><th>例子</th><th>名稱</th><th>结果</th></tr></thead><tbody><tr><td>$a + $b</td><td>聯合</td><td>$a 和 $b 的联合。</td></tr><tr><td>$a == $b</td><td>相等</td><td>如果 $a 和 $b 具有相同的键／值，則為 true。</td></tr><tr><td>$a === $b</td><td>全等</td><td>如果 $a 和 $b 具有相同的键／值，並且順序和類型都相同則為 true。</td></tr><tr><td>$a != $b</td><td>不等於</td><td>如果 $a 不等於 $b 則為 true。</td></tr><tr><td>$a &lt;&gt; $b</td><td>不等於</td><td>如果 $a 不等於 $b 則為 true。</td></tr><tr><td>$a !== $b</td><td>不相等</td><td>如果 $a 不全等於 $b 則為 true。</td></tr></tbody></table></div><p>如果是運用運算符將數組相加，會把加號右邊的附加到加號左邊數組，<br>兩個數組中都有的鍵名，則只用左邊數組中的，右邊的被忽略</p><p>以下簡單範例示範:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;apple&quot;</span>, <span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;banana&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;pear&quot;</span>, <span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;strawberry&quot;</span>, <span class="string">&quot;c&quot;</span> =&gt; <span class="string">&quot;cherry&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$a</span> + <span class="variable">$b</span>; <span class="comment">// Union of $a and $b</span></span><br><span class="line">var_dump(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span> = <span class="variable">$b</span> + <span class="variable">$a</span>; <span class="comment">// Union of $b and $a</span></span><br><span class="line">var_dump(<span class="variable">$c</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出:</span></span><br><span class="line"><span class="comment">// array(3) &#123;</span></span><br><span class="line"><span class="comment">//   [&quot;a&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(5) &quot;apple&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;b&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(6) &quot;banana&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;c&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(6) &quot;cherry&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// array(3) &#123;</span></span><br><span class="line"><span class="comment">//   [&quot;a&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(4) &quot;pear&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;b&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(10) &quot;strawberry&quot;</span></span><br><span class="line"><span class="comment">//   [&quot;c&quot;]=&gt;</span></span><br><span class="line"><span class="comment">//   string(6) &quot;cherry&quot;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>以下示範比較數組</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">array</span>(<span class="number">1</span> =&gt; <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;0&quot;</span> =&gt; <span class="string">&quot;apple&quot;</span>);</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span> == <span class="variable">$b</span>); <span class="comment">// bool(true)</span></span><br><span class="line">var_dump(<span class="variable">$a</span> === <span class="variable">$b</span>); <span class="comment">// bool(false)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="類型運算符"><a href="#類型運算符" class="headerlink" title="類型運算符"></a>類型運算符</h3><p>instanceof 方法用於確定一個 PHP 變數是否屬於某一類 class 的實例，<br>也可以用來確認某一個變數，是否繼承自某一父類或子類的實例。</p><p>以下範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotMyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> MyClass;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$a</span> <span class="keyword">instanceof</span> MyClass);</span><br><span class="line">var_dump(<span class="variable">$a</span> <span class="keyword">instanceof</span> NotMyClass);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// bool(True)</span></span><br><span class="line"><span class="comment">// bool(False)</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-流程控制"><a href="#PHP-流程控制" class="headerlink" title="PHP 流程控制"></a>PHP 流程控制</h2><h3 id="If-Else-判斷句"><a href="#If-Else-判斷句" class="headerlink" title="If Else 判斷句"></a>If Else 判斷句</h3><p>If 可以使用在判斷某條件達成時執行語句，else 則是在不滿該條下執行。</p><p>以下使用範例示範</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span> &gt; <span class="variable">$b</span>)&#123;</span><br><span class="line">console.log(<span class="string">&quot;a win&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">console.log(<span class="string">&quot;b win&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="else-if-判斷句"><a href="#else-if-判斷句" class="headerlink" title="else if 判斷句"></a>else if 判斷句</h3><p>是 if 語句的延伸，可以在原來的 if 表達式值為 false 時執行不同語句。但是和 else 不一樣的是，它僅在 elseif 的條件表達式值為 true 時執行語句。</p><p>以下使用範例示範:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &gt; <span class="variable">$b</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a is bigger than b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$a</span> == <span class="variable">$b</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a is equal to b&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;a is smaller than b&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="while-迴圈"><a href="#while-迴圈" class="headerlink" title="while 迴圈"></a>while 迴圈</h3><p>只要條件成立就會重複執行語句，表達式在每次開始循環前檢查，所以即使值在循環語句中改變，語句也不會停止執行，值到此次循環結束。</p><p>如果 while 表達式一開始的值為 false，則循環語句一次都不會執行。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$i</span> &lt;= <span class="number">10</span>) &#123; <span class="comment">// i &gt; 10停止迴圈</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>++; <span class="comment">// 先輸出 i 後再加一</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="do-while-迴圈"><a href="#do-while-迴圈" class="headerlink" title="do-while 迴圈"></a>do-while 迴圈</h3><p>和 while 迴圈相似，差別在於表達式的檢查是在循環結束時才檢查，所以 do-while 語句一定會執行循環語句一次。</p><p>以下範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125; <span class="keyword">while</span>(<span class="variable">$i</span>&lt;<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>剛好執行一次後停下，因為條件不符合。</p><hr><h3 id="for-迴圈"><a href="#for-迴圈" class="headerlink" title="for 迴圈"></a>for 迴圈</h3><p>for 迴圈的語法是:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">for (expr1; expr2; expr3)</span><br><span class="line"></span><br><span class="line">    statement</span><br></pre></td></tr></table></figure><p>expr1:此表達式會在執行前，無條件執行一次。</p><p>expr2:在每次循環開始前求值。如果值為 true，則繼續循環，執行 statement 的循環語句。如果值為 false，則終止循環。</p><p>expr3:在循環之後，賦值(並執行)</p><p>以下所有範例為顯示 1~10 數字:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* example 1 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">10</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* example 2 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">1</span>; ; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span>　(<span class="variable">$i</span> &gt; <span class="number">10</span>)&#123;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* example 3 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (;;)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> &gt; <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">    <span class="variable">$i</span>++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* example 4 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>, <span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">10</span>; <span class="variable">$j</span> += <span class="variable">$i</span>, <span class="keyword">print</span> <span class="variable">$i</span>, <span class="variable">$i</span>++);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h3><p>foreach 語法結構提供了可以遍歷 array 的簡單方式，foreach 只能用於 array 和 object，用於其他數據類型的變數，會發出錯誤。</p><p>foreach 語法如下:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foreach (iterable_expression as $value)</span><br><span class="line">statement</span><br><span class="line"></span><br><span class="line">foreach (iterable_expression as $key =&gt; $value)</span><br><span class="line">statement</span><br></pre></td></tr></table></figure><p>第一種格式遍歷，會將 iterable_expression 內的值賦予給$value。</p><p>第二種格式遍歷與第一種相似，但會在每次循環將當前的鍵值賦予給$key。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/* foreach example 1: value only */</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;value = <span class="subst">$value</span> \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* foreach example 2: key and value */</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&quot;name&quot;</span> =&gt; <span class="string">&quot;joe&quot;</span>,</span><br><span class="line">    <span class="string">&quot;cel&quot;</span> =&gt; <span class="number">1234567</span>,</span><br><span class="line">    <span class="string">&quot;address&quot;</span> =&gt; <span class="string">&quot;Taiwan&quot;</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$arr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$key</span> =&gt; <span class="subst">$value</span> \n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* foreach example 3: dynamic arrays */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>) <span class="keyword">as</span> <span class="variable">$v</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用 list() 給嵌套的數組解包</p><p>可以遍歷一個數組的數組並且把嵌套的數組解包到循環變量中，只需將 list() 作為值提供。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = [</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="keyword">list</span>(<span class="variable">$a</span>, <span class="variable">$b</span>)) &#123;</span><br><span class="line">    <span class="comment">// $a contains the first element of the nested array,</span></span><br><span class="line">    <span class="comment">// and $b contains the second element.</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;A: <span class="subst">$a</span>; B: <span class="subst">$b</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>範例輸出:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A: 1; B: 2</span><br><span class="line">A: 3; B: 4</span><br></pre></td></tr></table></figure><p>list() 中的單元可以少於嵌套數組的，此時多出來的數組單元將被忽略，如果 list 中單元多於嵌套數組，則會報錯：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = [</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>],</span><br><span class="line">[<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="keyword">list</span>(<span class="variable">$a</span>)) &#123;</span><br><span class="line">    <span class="comment">// Note that there is no $b here.</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;A: <span class="subst">$a</span>;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>輸出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A: 1;</span><br><span class="line">A: 3;</span><br></pre></td></tr></table></figure><hr><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p>break 結束當前 for，foreach，while，do-while 或者 switch 結構的執行。</p><p>break 可以接受一個可選參數，來決定要跳出幾層迴圈。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;one&#x27;</span>, <span class="string">&#x27;two&#x27;</span>, <span class="string">&#x27;three&#x27;</span>, <span class="string">&#x27;four&#x27;</span>, <span class="string">&#x27;stop&#x27;</span>, <span class="string">&#x27;five&#x27;</span>);</span><br><span class="line"><span class="comment">// 使用each() 和list() 結合用來遍歷數組</span></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">list</span> (, <span class="variable">$val</span>) = each(<span class="variable">$arr</span>)) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$val</span> == <span class="string">&#x27;stop&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">break</span>;    <span class="comment">/* You could also write &#x27;break 1;&#x27; here. */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$val</span>&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 使用可選参数 */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (++<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;At 5&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span> <span class="number">1</span>;  <span class="comment">/* 只退出 switch. */</span></span><br><span class="line">    <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;At 10; quitting&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span> <span class="number">2</span>;  <span class="comment">/* 退出 switch 和 while 循环 */</span></span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p>continue 在循環結構用用來跳過本次循環中剩餘的代碼並在條件求值為真時開始執行下一次循環。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">1</span>; <span class="variable">$i</span>&lt;<span class="number">5</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$i</span>==<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$i</span>\n&quot;</span>;  <span class="comment">// outputs: 1 3 4</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>switch 語句類似於具有同一個表達式的一系列 if 語句。很多情況下需要把同一個變數（或表達式）與很多不同的值比較，並根據它等於哪個值來執行不同的代碼。</p><p>以下為範例，利用 if/else if 和 switch 實現不同方法實現相同的事:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$i</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;i equals 0&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;i equals 1&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$i</span> == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;i equals 2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 0&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 1&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 2&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一個 case 的特例是 default。它匹配了任何和其它 case 都不匹配的情況。例如：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 0&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 1&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i equals 2&quot;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;i is not equal to 0, 1 or 2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="match"><a href="#match" class="headerlink" title="match"></a>match</h3><p>與 switch 語句類似， match 表達式具有與多個備選方案進行比較的主題表達式，與 switch 不同，它將計算為一個很像三元表達式的值。與 switch 不同的是，比較的是強型別相等檢查 (\=\==) 而不是弱型別相等檢查 (==)。匹配表達式從 PHP 8.0.0 開始可用。</p><p>範例如下:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$age</span> = <span class="number">23</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span> = <span class="keyword">match</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="variable">$age</span> &gt;= <span class="number">65</span> =&gt; <span class="string">&#x27;senior&#x27;</span>,</span><br><span class="line">    <span class="variable">$age</span> &gt;= <span class="number">25</span> =&gt; <span class="string">&#x27;adult&#x27;</span>,</span><br><span class="line">    <span class="variable">$age</span> &gt;= <span class="number">18</span> =&gt; <span class="string">&#x27;young adult&#x27;</span>,</span><br><span class="line">    <span class="keyword">default</span> =&gt; <span class="string">&#x27;kid&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="variable">$result</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs:</span></span><br><span class="line"><span class="comment">// string(11) &quot;young adult&quot;</span></span><br><span class="line"><span class="comment">// young adult</span></span><br></pre></td></tr></table></figure><hr><h3 id="declare"><a href="#declare" class="headerlink" title="declare"></a>declare</h3><blockquote><p>declare 不是一個函數，算是一個語言結構</p></blockquote><p>declare 用來設定一段 code 的執行指令。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">declare</span> (directive)</span><br><span class="line">statement</span><br></pre></td></tr></table></figure><p>directive 的部分允許設定 declare 代碼段的行為。</p><p>如果 declare 語句後面沒有括號，則該指令適用於文件中的其餘代碼。<br>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 兩個相等：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以這樣用：</span></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// 這裡寫腳本</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以這樣用：</span></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line"><span class="comment">// 這裡寫腳本</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>declare 指令是在文件編譯時處理的，所以指令只接受字面量的值。 無法使用變量和常量。下面為範例程式碼:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 有效程式碼：</span></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 無效，無法指定常量：</span></span><br><span class="line"><span class="keyword">const</span> TICK_VALUE = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">declare</span>(ticks=TICK_VALUE);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以聲明三個指令：ticks,encoding 和 strict_types.</p><p>ticks 每次執行指定數量(N)可計時的指令時，該指令都會發送一個 tick 事件。可以使用 register_tick_function() ，它會在每次 event 事件觸發時運行。</p><p>不是所有語句都可計時。通常條件表達式和參數表達式都不可計時。</p><p>以下為範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span>(ticks=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 每次 tick 事件都會調用此函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick_handler</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;tick_handler() called\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">register_tick_function(<span class="string">&#x27;tick_handler&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$a</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="variable">$a</span> += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">print</span>(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>該 encoding 指令用於指示文件使用的字符編碼。它不能用於塊，它必須應用於整個文件。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">declare</span>(encoding=<span class="string">&#x27;ISO-8859-1&#x27;</span>);</span><br><span class="line"><span class="comment">// code here</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>當 strict_types 指令設置，錯誤類型傳遞到函數參數時不會被強制轉換為正確的類型，而是拋出致命錯誤。</p><p>範例如下:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 正常情況下</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span>, <span class="keyword">int</span> <span class="variable">$b</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(add(<span class="number">1.0</span>, <span class="number">1.0</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// output</span></span><br><span class="line"><span class="comment">// int(2)</span></span><br></pre></td></tr></table></figure><p>當使用 strict_types 後，變成強型別</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);    <span class="comment">//加入这句</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span>, <span class="keyword">int</span> <span class="variable">$b</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var_dump(add(<span class="number">1.0</span>, <span class="number">1.0</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 拋出TypeError:必須為integer整數</span></span><br></pre></td></tr></table></figure><hr><h3 id="return"><a href="#return" class="headerlink" title="return"></a>return</h3><p>return 將程序控制返還給調用模塊。將在調用模塊中執行的下一句表達式中繼續。</p><p>如果在一個函數中調用 return 語句，將立即結束此函數的執行並將它的參數作為函數的值返回。 return 也會終止 eval() 語句或者腳本文件的執行</p><p>eval(): 把字符串作為 PHP 代碼執行</p><hr><h3 id="require"><a href="#require" class="headerlink" title="require"></a>require</h3><p>require 和 include 幾乎完全一樣，除了處理失敗的方式不同之外。 require 在出錯時產生 E_COMPILE_ERROR 級別的錯誤。換句話說將導致腳本中止而 include 只產生警告（E_WARNING），腳本會繼續運行。</p><hr><h3 id="include"><a href="#include" class="headerlink" title="include"></a>include</h3><p>include 語句包含並運行指定文件。</p><p>以下也適用於 require。</p><p>被包含文件先按參數給出的路徑尋找，如果沒有給出目錄（只有文件名）時則按照 include_path 指定的目錄尋找。如果在 include_path 下沒找到該文件則 include 最後才在調用腳本文件所在的目錄和當前工作目錄下尋找。如果最後仍未找到文件則 include 結構會發出一條警告；這一點和 require 不同，後者會發出一個致命錯誤。</p><p>基本 include 用法:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">vars.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$color</span> = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"><span class="variable">$car</span> = <span class="string">&#x27;vovlo&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">test.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;A <span class="subst">$color</span> <span class="subst">$car</span>&quot;</span>; <span class="comment">// A</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;vars.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;A <span class="subst">$color</span> <span class="subst">$car</span>&quot;</span>; <span class="comment">// A red vovlo</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>include 和 return 語句</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span>.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$var</span> = <span class="string">&#x27;PHP&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$var</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">noreturn.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$var</span> = <span class="string">&#x27;PHP&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">testreturns.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">include</span> <span class="string">&#x27;return.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$foo</span>; <span class="comment">// 輸出 &#x27;PHP&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">include</span> <span class="string">&#x27;noreturn.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$bar</span>; <span class="comment">// 輸出 1(因為成功返回true = 1)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="require-once"><a href="#require-once" class="headerlink" title="require_once"></a>require_once</h3><p>require_once 語句和 require 語句完全相同，唯一區別是 PHP 會檢查該文件是否已經被包含過，如果是則不會再次包含。</p><hr><h3 id="include-once"><a href="#include-once" class="headerlink" title="include_once"></a>include_once</h3><p>include_once 語句在腳本執行期間包含並運行指定文件。此行為和 include 語句類似，唯一區別是如果該文件中已經被包含過，則不會再次包含，且 include_once 會返回 true。如同此語句名字暗示的那樣，該文件只會包含一次。 include_once 可以用於在腳本執行期間同一個文件有可能被包含超過一次的情況下，想確保它只被包含一次以避免函數重定義，變量重新賦值等問題。</p><h2 id="PHP-函數"><a href="#PHP-函數" class="headerlink" title="PHP 函數"></a>PHP 函數</h2><h3 id="自定義函數"><a href="#自定義函數" class="headerlink" title="自定義函數"></a>自定義函數</h3><p>函數可用以下語法來定義</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$arg_1</span>, <span class="variable">$arg_2</span>, <span class="comment">/* ..., */</span> <span class="variable">$arg_n</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Example function.\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$retval</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>函數不需要在使用之前被定義，除非是函數是有條件被定義時，才必須在使用前定義</p><p>舉以下範例</p><ol><li>有條件的函數:</li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$makefoo</span> = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 不能在此處調用foo()函數，</span></span><br><span class="line"><span class="comment"> 因為它還不存在，但可以調用bar()函數。*/</span></span><br><span class="line"></span><br><span class="line">bar();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$makefoo</span>) &#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I don&#x27;t exist until program execution reaches me.\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 現在可以安全調用函數 foo()</span></span><br><span class="line"><span class="comment">   因為 $makefoo 值為真true */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$makefoo</span>) foo();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;I exist immediately upon program start.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol><li>函數中的函數</li></ol><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;I don&#x27;t exist until foo() is called.\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 現在還不能調用 bar() 函數，因為它還不存在 */</span></span><br><span class="line"></span><br><span class="line">foo();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 現在可以調用 bar() 函數了，因為 foo() 函數的執行使得 bar() 函數變為已定義的函數 */</span></span><br><span class="line"></span><br><span class="line">bar();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>:::warning<br>PHP 中的所有函數和類都具有全局作用域，可以定義在一個函數之內而在之外調用，反之亦然。<br>PHP 不支持函數重載，也不可能取消定義或者重定義已聲明的函數。<br>:::</p><p>還有遞迴函數，也就是自己呼叫自己</p><p>舉個費氏數列的例子(從 0,1 開始，後面的數是前兩個數相加)</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params"><span class="variable">$n</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$n</span> == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> fib(<span class="variable">$n</span>-<span class="number">1</span>) + fib(<span class="variable">$n</span> - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">5</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">echo</span> fib(<span class="string">&quot;<span class="subst">$i</span> &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// 0,1,1,2,3,5</span></span><br></pre></td></tr></table></figure><p>:::danger<br>注意: 但是要避免遞歸函數／方法調用超過 100-200 層，因為可能會使堆積崩潰從而使當前腳本終止。無限遞歸可視為編程錯誤<br>:::</p><hr><h3 id="函數的參數"><a href="#函數的參數" class="headerlink" title="函數的參數"></a>函數的參數</h3><p>通過給予函數參數，傳遞訊息給函數，可以放入多個參數用逗號分隔，也可以設置參數默認的值。</p><h4 id="1-向函數傳遞-array"><a href="#1-向函數傳遞-array" class="headerlink" title="1. 向函數傳遞 array:"></a>1. 向函數傳遞 array:</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">takes_array</span>(<span class="params"><span class="variable">$nums</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;$nums[0] + $nums[1] = &#x27;</span>, <span class="variable">$nums</span>[<span class="number">0</span>] + <span class="variable">$nums</span>[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>從 php8 開始參數尾巴逗號是會被忽略的</p><h4 id="2-使用尾巴逗號"><a href="#2-使用尾巴逗號" class="headerlink" title="2. 使用尾巴逗號"></a>2. 使用尾巴逗號</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">takes_many_args</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$first_name</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$last_name</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$age</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$gender</span> = <span class="number">1</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="variable">$cellphone</span> = <span class="literal">null</span>, // 在 <span class="number">8.0</span>.<span class="number">0</span> 之前，尾部逗號是不允许的。</span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>從 PHP 8.0.0 開始，不推薦在可選參數之後傳遞強制參數。 這通常可以通過刪除默認值來解決。 此規則的一個例外是 Type $param = null 形式的參數，其中 null 默認值使類型隱式可為空。 這種用法仍然被允許，但建議改用顯式可為空類型。</p><h4 id="3-在強制參數之後傳遞可選參數"><a href="#3-在強制參數之後傳遞可選參數" class="headerlink" title="3. 在強制參數之後傳遞可選參數"></a>3. 在強制參數之後傳遞可選參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$a</span> = [], <span class="variable">$b</span></span>) </span>&#123;&#125; <span class="comment">// 之前</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;&#125;      <span class="comment">// 之後</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">A <span class="variable">$a</span> = <span class="literal">null</span>, <span class="variable">$b</span></span>) </span>&#123;&#125; <span class="comment">// 同時可用</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">?A <span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;&#125;       <span class="comment">// 官方推薦</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-在函數中使用默認參數"><a href="#4-在函數中使用默認參數" class="headerlink" title="4. 在函數中使用默認參數"></a>4. 在函數中使用默認參數</h4><p>PHP 還允許使用數組 array 和特殊類型 null 作為默認參數。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makecoffee</span>(<span class="params"><span class="variable">$type</span> = <span class="string">&quot;cappuccino&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Making a cup of <span class="subst">$type</span>.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> makecoffee();</span><br><span class="line"><span class="keyword">echo</span> makecoffee(<span class="literal">null</span>);</span><br><span class="line"><span class="keyword">echo</span> makecoffee(<span class="string">&quot;espresso&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Making a cup of cappuccino.</span></span><br><span class="line"><span class="comment">// Making a cup of .</span></span><br><span class="line"><span class="comment">// Making a cup of espresso.</span></span><br></pre></td></tr></table></figure><h4 id="5-函數默認參數的不正確用法"><a href="#5-函數默認參數的不正確用法" class="headerlink" title="5. 函數默認參數的不正確用法"></a>5. 函數默認參數的不正確用法</h4><p>默認值必須是常量表達式，不能是，如變量，類成員，或者函數調用等。 注意當使用默認參數時，任何默認參數必須放在任何非默認參數的右側；否則，函數將不會按照預期的情況工作。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeyogurt</span>(<span class="params"><span class="variable">$type</span> = <span class="string">&quot;acidophilus&quot;</span>, <span class="variable">$flavour</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Making a bowl of <span class="subst">$type</span> <span class="subst">$flavour</span>.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> makeyogurt(<span class="string">&quot;raspberry&quot;</span>);   <span class="comment">// won&#x27;t work as expected</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Warning: Missing argument 2 in call to makeyogurt()</span></span><br></pre></td></tr></table></figure><h4 id="6-函數默認參數正確用法"><a href="#6-函數默認參數正確用法" class="headerlink" title="6. 函數默認參數正確用法"></a>6. 函數默認參數正確用法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">makeyogurt</span>(<span class="params"><span class="variable">$flavour</span>, <span class="variable">$type</span> = <span class="string">&quot;acidophilus&quot;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Making a bowl of <span class="subst">$type</span> <span class="subst">$flavour</span>.\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> makeyogurt(<span class="string">&quot;raspberry&quot;</span>);   <span class="comment">// works as expected</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Making a bowl of acidophilus raspberry.</span></span><br></pre></td></tr></table></figure><h4 id="7-使用-…-來訪問變量參數"><a href="#7-使用-…-來訪問變量參數" class="headerlink" title="7. 使用 … 來訪問變量參數"></a>7. 使用 … 來訪問變量參數</h4><p>PHP 在用戶自定義函數中支持可變數量的參數列表。由 … 語法實現。</p><p>包含 … 的參數，會轉換為指定參數變量的一個數組(類似字典)，以下示例：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sum</span>(<span class="params">...<span class="variable">$numbers</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$acc</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$numbers</span> <span class="keyword">as</span> <span class="variable">$n</span>) &#123;</span><br><span class="line">        <span class="variable">$acc</span> += <span class="variable">$n</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$acc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sum(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 10</span></span><br></pre></td></tr></table></figure><h4 id="8-使用…來傳遞參數"><a href="#8-使用…來傳遞參數" class="headerlink" title="8. 使用…來傳遞參數"></a>8. 使用…來傳遞參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> add(...[<span class="number">1</span>, <span class="number">2</span>]).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = [<span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line"><span class="keyword">echo</span> add(...<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 3</span></span><br></pre></td></tr></table></figure><h4 id="9-輸入提示的變量參數"><a href="#9-輸入提示的變量參數" class="headerlink" title="9. 輸入提示的變量參數"></a>9. 輸入提示的變量參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">total_intervals</span>(<span class="params"><span class="variable">$unit</span>, DateInterval ...<span class="variable">$intervals</span></span>) </span>&#123; <span class="comment">// 必須傳遞DateInterval類的參數</span></span><br><span class="line">    <span class="variable">$time</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$intervals</span> <span class="keyword">as</span> <span class="variable">$interval</span>) &#123;</span><br><span class="line">        <span class="variable">$time</span> += <span class="variable">$interval</span>-&gt;<span class="variable">$unit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$time</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> DateInterval(<span class="string">&#x27;P1D&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> DateInterval(<span class="string">&#x27;P2D&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> total_intervals(<span class="string">&#x27;d&#x27;</span>, <span class="variable">$a</span>, <span class="variable">$b</span>).<span class="string">&#x27; days&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// This will fail, since null isn&#x27;t a DateInterval object.</span></span><br><span class="line"><span class="keyword">echo</span> total_intervals(<span class="string">&#x27;d&#x27;</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// 3 days</span></span><br><span class="line"><span class="comment">// Catchable fatal error: Argument 2 passed to total_intervals() must be an instance of DateInterval,</span></span><br><span class="line"><span class="comment">// null given, called in - on line 14 and defined in - on line 2</span></span><br></pre></td></tr></table></figure><h4 id="命名函數"><a href="#命名函數" class="headerlink" title="命名函數"></a>命名函數</h4><p>PHP 8.0.0 開始引入了命名參數作為現有位置參數的擴展。命名參數允許根據參數名而不是參數位置向函數傳參。這使得參數的含義自成體系，參數與順序無關，並允許任意跳過默認值。</p><p>命名參數通過在參數名前加上冒號來傳遞。允許使用保留關鍵字作為參數名。參數名必須是一個標識符，不允許動態指定。</p><h4 id="10-命名參數語法"><a href="#10-命名參數語法" class="headerlink" title="10. 命名參數語法"></a>10. 命名參數語法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"><span class="variable">$paramName</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$paramName</span>;</span><br><span class="line">&#125;</span><br><span class="line">myFunction(paramName: <span class="variable">$value</span>);  <span class="comment">// $value指定給予paramName這個參數</span></span><br><span class="line">array_foobar(<span class="keyword">array</span>: <span class="variable">$value</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// NOT supported.</span></span><br><span class="line">function_name(<span class="variable">$variableStoringParamName</span>: <span class="variable">$value</span>); <span class="comment">// 不能動態指定</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="11-通過位置傳參與命名參數的對比"><a href="#11-通過位置傳參與命名參數的對比" class="headerlink" title="11. 通過位置傳參與命名參數的對比"></a>11. 通過位置傳參與命名參數的對比</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 使用順序傳遞：</span></span><br><span class="line">array_fill(<span class="number">0</span>, <span class="number">100</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用命名參數：</span></span><br><span class="line">array_fill(start_index: <span class="number">0</span>, count: <span class="number">100</span>, value: <span class="number">50</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>順序不重要，下面輸出跟上面一樣</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">array_fill(value: <span class="number">50</span>, count: <span class="number">100</span>, start_index: <span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="12-不可多次傳遞給同一個參數"><a href="#12-不可多次傳遞給同一個參數" class="headerlink" title="12. 不可多次傳遞給同一個參數"></a>12. 不可多次傳遞給同一個參數</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="variable">$param</span></span>) </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line">foo(param: <span class="number">1</span>, param: <span class="number">2</span>);</span><br><span class="line"><span class="comment">// Error: Named parameter $param overwrites previous argument</span></span><br><span class="line">foo(<span class="number">1</span>, param: <span class="number">2</span>);</span><br><span class="line"><span class="comment">// Error: Named parameter $param overwrites previous argument</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="返回值-return"><a href="#返回值-return" class="headerlink" title="返回值 return"></a>返回值 return</h3><p>值通過使用可選的返回語句返回。可以返回包括數組和對象的任意類型。返回語句會立即中止函數的運行，並且將控制權交回調用該函數的代碼行</p><p>:::warning<br>如果省略了 return，則返回值為 null。<br>:::</p><h4 id="1-基礎語法"><a href="#1-基礎語法" class="headerlink" title="1. 基礎語法"></a>1. 基礎語法</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params"><span class="variable">$num</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span> * <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> square(<span class="number">5</span>);   <span class="comment">// outputs &#x27;25&#x27;.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-返回一個數組以得到多個返回值"><a href="#2-返回一個數組以得到多個返回值" class="headerlink" title="2. 返回一個數組以得到多個返回值"></a>2. 返回一個數組以得到多個返回值</h4><p>函數不能返回多個值，但可以通過返回一個數組來得到類似的效果。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">small_numbers</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 使用短數組語法將数组中的值賦给一組變數</span></span><br><span class="line">[<span class="variable">$zero</span>, <span class="variable">$one</span>, <span class="variable">$two</span>] = small_numbers();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 7.1.0 之前，唯一相等的選擇是使用 list() 結構</span></span><br><span class="line"><span class="keyword">list</span>(<span class="variable">$zero</span>, <span class="variable">$one</span>, <span class="variable">$two</span>) = small_numbers();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-返回一個引用"><a href="#3-返回一個引用" class="headerlink" title="3. 返回一個引用"></a>3. 返回一個引用</h4><p>從函數返回一個引用，必須在函數聲明和指派返回值給一個變量時都使用引用運算符 &amp;</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> &amp;<span class="title">returns_reference</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$someref</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$newref</span> =&amp; returns_reference();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="可變函數"><a href="#可變函數" class="headerlink" title="可變函數"></a>可變函數</h3><p>PHP 支持可變函數的概念。就是說如果一個變量名後有圓括號，PHP 就會先去尋找這個變數名稱的函數執行。可變函數可以用來實現包括回調函數，以及函數表在內的一些用途。</p><p>來看看範例</p><h4 id="1-可變函數示例"><a href="#1-可變函數示例" class="headerlink" title="1. 可變函數示例"></a>1. 可變函數示例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;In foo()&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="variable">$arg</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;In bar(); argument was &#x27;<span class="subst">$arg</span>&#x27;.&lt;br /&gt;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用名為 echo 的函數</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">echoit</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;foo&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>();        <span class="comment">// This calls foo()</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;bar&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>(<span class="string">&#x27;test&#x27;</span>);  <span class="comment">// This calls bar()</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&#x27;echoit&#x27;</span>;</span><br><span class="line"><span class="variable">$func</span>(<span class="string">&#x27;test&#x27;</span>);  <span class="comment">// This calls echoit()</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-可變方法範例"><a href="#2-可變方法範例" class="headerlink" title="2. 可變方法範例"></a>2. 可變方法範例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Variable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$name</span> = <span class="string">&#x27;Bar&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$name</span>(); <span class="comment">// This calls the Bar() method</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;This is Bar&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="variable">$funcname</span> = <span class="string">&quot;Variable&quot;</span>;</span><br><span class="line"><span class="variable">$foo</span>-&gt;<span class="variable">$funcname</span>();  <span class="comment">// This calls $foo-&gt;Variable()</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-Variable-方法和靜態屬性範例"><a href="#3-Variable-方法和靜態屬性範例" class="headerlink" title="3. Variable 方法和靜態屬性範例"></a>3. Variable 方法和靜態屬性範例</h4><p>當調用靜態方法時，函數調用要比靜態屬性優先</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$variable</span> = <span class="string">&#x27;static property&#x27;</span>;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">Variable</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Method Variable called&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> Foo::<span class="variable">$variable</span>; <span class="comment">// This prints &#x27;static property&#x27;. It does need a $variable in this scope.</span></span><br><span class="line"><span class="variable">$variable</span> = <span class="string">&quot;Variable&quot;</span>;</span><br><span class="line">Foo::<span class="variable">$variable</span>();  <span class="comment">// This calls $foo-&gt;Variable() reading $variable in this scope.</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-複雜的可調用對象"><a href="#4-複雜的可調用對象" class="headerlink" title="4. 複雜的可調用對象"></a>4. 複雜的可調用對象</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;bar\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;baz\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$func</span> = <span class="keyword">array</span>(<span class="string">&quot;Foo&quot;</span>, <span class="string">&quot;bar&quot;</span>);</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// prints &quot;bar&quot;</span></span><br><span class="line"><span class="variable">$func</span> = <span class="keyword">array</span>(<span class="keyword">new</span> Foo, <span class="string">&quot;baz&quot;</span>);</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// prints &quot;baz&quot;</span></span><br><span class="line"><span class="variable">$func</span> = <span class="string">&quot;Foo::bar&quot;</span>;</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// prints &quot;bar&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 這樣可是會出錯的哦，沒有先實體化類別</span></span><br><span class="line"><span class="variable">$func</span> = <span class="keyword">array</span>(<span class="string">&quot;Foo&quot;</span>, <span class="string">&quot;baz&quot;</span>);</span><br><span class="line"><span class="variable">$func</span>(); <span class="comment">// Uncaught Error: Non-static method Foo::baz() cannot be called statically in ....</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="内部（内置）函数"><a href="#内部（内置）函数" class="headerlink" title="内部（内置）函数"></a>内部（内置）函数</h3><p>PHP 有很多標準的函數和結構。還有一些函數需要和特定地 PHP 擴展模塊一起編譯，否則在使用它們的時候就會得到一個致命的“未定義函數”錯誤。</p><p>例如要連接 MySQL，要使用 mysqli_connect() 函數，就需要在編譯 PHP 的時候加上 MySQLi 支持。可以使用 phpinfo() 或者 get_loaded_extensions() 可以得知 PHP 加載了那些擴展庫</p><hr><h3 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h3><p>匿名函數（Anonymous functions），也稱作閉包函數（closures），它允許臨時創建一個沒有指定名稱的函數。最經常用作回調函數 callable 參數的值。當然，也有其它應用的情況。</p><h4 id="1-匿名函數範例"><a href="#1-匿名函數範例" class="headerlink" title="1. 匿名函數範例"></a>1. 匿名函數範例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 使用回調執行正則表達式搜索和替換</span></span><br><span class="line"><span class="keyword">echo</span> preg_replace_callback(<span class="string">&#x27;~-([a-z])~&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$match</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> strtoupper(<span class="variable">$match</span>[<span class="number">1</span>]);  <span class="comment">// 將所選的變成大寫，從index: 1開始過濾掉原先&quot;-&quot;</span></span><br><span class="line">&#125;, <span class="string">&#x27;hello-world&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出 helloWorld</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>閉包函數也可以作為變量的值來使用。 PHP 會自動把此種表達式轉換成內置類 Closure 的對象實例。把一個 closure 對象賦值給一個變量的方式與普通變量賦值的語法是一樣的，最後也要加上分號 ；</p><h4 id="2-匿名函數變量賦值示例"><a href="#2-匿名函數變量賦值示例" class="headerlink" title="2. 匿名函數變量賦值示例"></a>2. 匿名函數變量賦值示例</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$sayHi</span> = <span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Hello <span class="subst">$name</span>&quot;</span>;</span><br><span class="line">&#125;; <span class="comment">// 記得加上分號</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sayHi</span>(<span class="string">&#x27;joe&#x27;</span>);</span><br><span class="line"><span class="variable">$sayHi</span>(<span class="string">&#x27;cherry&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-從父作用域繼承變數"><a href="#3-從父作用域繼承變數" class="headerlink" title="3. 從父作用域繼承變數"></a>3. 從父作用域繼承變數</h4><p>閉包可以從父作用域中繼承變量。任何此類變量都應該用 use 語言結構傳遞進去。</p><p>PHP 7.1 起，不能傳入此類變量： superglobals(超全局便量)、 $this 或者和參數重名。</p><p>從 PHP 8.0.0 開始，作用域繼承的變量列表可能包含一個尾部的逗號，這個逗號將被忽略</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 没有 &quot;use&quot; php會不知道這變數從哪來</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 繼承父作用域 $message</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Inherited variable&#x27;s value is from when the function</span></span><br><span class="line"><span class="comment">// is defined, not when called</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="variable">$example</span>();  <span class="comment">// 不會受到改變因為已經在上面先調用了(14行)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Reset message</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Inherit by-reference</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) <span class="keyword">use</span> (<span class="params">&amp;<span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// The changed value in the parent scope</span></span><br><span class="line"><span class="comment">// is reflected inside the function call</span></span><br><span class="line"><span class="comment">// 父作用域更改值，影響函式回調</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line"><span class="variable">$example</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Closures can also accept regular arguments</span></span><br><span class="line"><span class="comment">// 閉包可使用常規變數</span></span><br><span class="line"><span class="variable">$example</span> = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$arg</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">    var_dump(<span class="variable">$arg</span> . <span class="string">&#x27; &#x27;</span> . <span class="variable">$message</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$example</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Notice: Undefined variable: ...</span></span><br><span class="line"><span class="comment">// NULL</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// string(5) &quot;world&quot;</span></span><br><span class="line"><span class="comment">// string(11) &quot;hello world&quot;</span></span><br></pre></td></tr></table></figure><hr><h3 id="箭頭函數"><a href="#箭頭函數" class="headerlink" title="箭頭函數"></a>箭頭函數</h3><p>箭頭函數是更簡潔的匿名函數，都是屬於 Closure 類(閉包)的實現</p><p>箭頭函數的語法為 <code>fn (argument_list) =&gt; expr。</code></p><p>箭頭函數支持與 匿名函數 相同的功能，只是其父作用域的變量總是自動的。 當表達式中使用的變量是在父作用域中定義的，它將被隱式地按值捕獲。</p><p>在下面的例子中，函數 $fn1 和 $fn2 的行為是一樣的</p><h4 id="1-箭頭函數自動捕捉變數的值"><a href="#1-箭頭函數自動捕捉變數的值" class="headerlink" title="1. 箭頭函數自動捕捉變數的值"></a>1. 箭頭函數自動捕捉變數的值</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$y</span> = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fn1</span> = <span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span> + <span class="variable">$y</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相當於 using $y by value:</span></span><br><span class="line"><span class="variable">$fn2</span> = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) <span class="keyword">use</span> (<span class="params"><span class="variable">$y</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$x</span> + <span class="variable">$y</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// var_export -- 輸出或返回一個變量的字串表示</span></span><br><span class="line">var_export(<span class="variable">$fn1</span>(<span class="number">3</span>)); <span class="comment">// 4</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-箭頭函數自動捕捉變量的值，即使在嵌套的情況下"><a href="#2-箭頭函數自動捕捉變量的值，即使在嵌套的情況下" class="headerlink" title="2. 箭頭函數自動捕捉變量的值，即使在嵌套的情況下"></a>2. 箭頭函數自動捕捉變量的值，即使在嵌套的情況下</h4><p>通常在 A 程序執行中，尚未結束前又開始執行 B 程序，B 程序結束後，繼續執行 A 程序，就稱為嵌套。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$z</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$fn</span> = <span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span></span>) =&gt;</span> <span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$y</span></span>) =&gt;</span> <span class="variable">$x</span> * <span class="variable">$y</span> + <span class="variable">$z</span>;</span><br><span class="line"><span class="comment">// 輸出 21</span></span><br><span class="line">var_export(<span class="variable">$fn</span>(<span class="number">5</span>)(<span class="number">4</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-箭頭函數有效用法例子"><a href="#3-箭頭函數有效用法例子" class="headerlink" title="3. 箭頭函數有效用法例子"></a>3. 箭頭函數有效用法例子</h4><p>和匿名函數一樣，箭頭函數語法同樣允許標準的函數聲明，包括參數和返回類型、缺省值、變量，以及通過引用傳遞和返回。以下都是箭頭函數的有效例子。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">fn</span>(<span class="params"></span>): <span class="title">int</span> =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span> = <span class="number">42</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params">&amp;<span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>&amp;(<span class="params"><span class="variable">$x</span></span>) =&gt;</span> <span class="variable">$x</span>;</span><br><span class="line"><span class="function"><span class="keyword">fn</span>(<span class="params"><span class="variable">$x</span>, ...<span class="variable">$rest</span></span>) =&gt;</span> <span class="variable">$rest</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-來自外部範圍的值不能在箭頭函數內修改"><a href="#4-來自外部範圍的值不能在箭頭函數內修改" class="headerlink" title="4. 來自外部範圍的值不能在箭頭函數內修改"></a>4. 來自外部範圍的值不能在箭頭函數內修改</h4><p>箭頭函數會自動綁定上下文變量，這相當於對箭頭函數內部使用的每一個變量 $x 執行了一個 use($x)。這意味著不可能修改外部作用域的任何值，若要實現對值的修改，可以使用 匿名函數 來替代。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$x</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$fn</span> = <span class="function"><span class="keyword">fn</span>(<span class="params"></span>) =&gt;</span> <span class="variable">$x</span>++; <span class="comment">// 不會影響 x 的值</span></span><br><span class="line"><span class="variable">$fn</span>();</span><br><span class="line">var_export(<span class="variable">$x</span>);  <span class="comment">// 輸出 1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="class-類"><a href="#class-類" class="headerlink" title="class 類"></a>class 類</h2><h3 id="class-基本"><a href="#class-基本" class="headerlink" title="class 基本"></a>class 基本</h3><p>每個類的定義都以關鍵字 class 開頭，後面跟著類的名，再一個括號，裡面包含有類的屬性與方法的定義。</p><p>一個類可以包含有屬於自己的 常量，變量（稱為“屬性”）以及函數（稱為“方法”）。</p><p>當要調用內部屬性或方法時可以使用$this，$this 是一個到當前對象的引用。</p><h5 id="1-簡單的類定義"><a href="#1-簡單的類定義" class="headerlink" title="1. 簡單的類定義"></a>1. 簡單的類定義</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 聲明屬性</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$var</span> = <span class="string">&#x27;a default value&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">displayVar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;var;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="new"><a href="#new" class="headerlink" title="new"></a>new</h4><p>要創建一個類的實例，必須使用 new 關鍵字。當創建新對象時該對象總是被賦值，除非該對象定義了 構造函數 並且在出錯時拋出了一個 異常。</p><p>構造函數 : 類中的一個特殊函數，當使用 new 操作符創建一個類的實例時，構造函數將會自動調用。當函數與類同名時，這個函數將成為構造函數。如果一個類沒有構造函數，則調用基類的構造函數，如果有的話</p><p>類應在被實例化之前定義（某些情況下則必須這樣）。</p><p>如果在 new 之後跟著的是一個包含有類名的字符串 string，則該類的一個實例被創建。如果該類屬於一個命名空間，則必須使用其完整名稱。</p><p>:::warning<br>如果沒有參數要傳遞給類的構造函數，類名後的括號則可以省略掉。<br>:::</p><h5 id="2-創建實例"><a href="#2-創建實例" class="headerlink" title="2. 創建實例"></a>2. 創建實例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$instance</span> = <span class="keyword">new</span> SimpleClass();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也可以這樣做：</span></span><br><span class="line"><span class="variable">$className</span> = <span class="string">&#x27;SimpleClass&#x27;</span>;</span><br><span class="line"><span class="variable">$instance</span> = <span class="keyword">new</span> <span class="variable">$className</span>(); <span class="comment">// new SimpleClass()</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-創建新對象"><a href="#3-創建新對象" class="headerlink" title="3. 創建新對象"></a>3. 創建新對象</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNew</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">static</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj1</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">new</span> <span class="variable">$obj1</span>;</span><br><span class="line">var_dump(<span class="variable">$obj1</span> !== <span class="variable">$obj2</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj3</span> = Test::getNew();</span><br><span class="line">var_dump(<span class="variable">$obj3</span> <span class="keyword">instanceof</span> Test);</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj4</span> = Child::getNew();</span><br><span class="line">var_dump(<span class="variable">$obj4</span> <span class="keyword">instanceof</span> Child);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// bool(true)</span></span><br><span class="line"><span class="comment">// bool(true)</span></span><br><span class="line"><span class="comment">// bool(true)</span></span><br></pre></td></tr></table></figure><h4 id="屬性和方法"><a href="#屬性和方法" class="headerlink" title="屬性和方法"></a>屬性和方法</h4><p>類的屬性和方法存在於不同的“命名空間”中，這代表說同一個類的屬性和方法可以使用同樣的名字。在類中訪問屬性和調用方法使用同樣的操作符，那到底是訪問一個屬性還是調用一個方法，取決於你的上下文，即用法是變數的訪問還是函數的調用。</p><h5 id="4-訪問類屬性-vs-調用類方法"><a href="#4-訪問類屬性-vs-調用類方法" class="headerlink" title="4. 訪問類屬性 vs. 調用類方法"></a>4. 訪問類屬性 vs. 調用類方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bar</span> = <span class="string">&#x27;property&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;method&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;bar, PHP_EOL, <span class="variable">$obj</span>-&gt;bar(), PHP_EOL; <span class="comment">// PHP_EOL: php換行符號</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// property</span></span><br><span class="line"><span class="comment">// method</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-類屬性被賦值為匿名函數時的調用示例"><a href="#5-類屬性被賦值為匿名函數時的調用示例" class="headerlink" title="5. 類屬性被賦值為匿名函數時的調用示例"></a>5. 類屬性被賦值為匿名函數時的調用示例</h5><p>如果你的類屬性被分配給一個 匿名函數 你將無法直接調用它。因為訪問 class 類屬性的優先級要更高，在此場景下需要用括號括起來使用。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$bar</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;bar = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$obj</span>-&gt;bar)(), PHP_EOL; <span class="comment">// 10</span></span><br></pre></td></tr></table></figure><h4 id="extends-繼承"><a href="#extends-繼承" class="headerlink" title="extends 繼承"></a>extends 繼承</h4><p>一個類可以在聲明中用 extends 關鍵字繼承另一個類的方法和屬性。 PHP 不支持多重繼承，一個類只能繼承一個基類。</p><p>被繼承的方法和屬性可以通過用同樣的名字重新聲明被覆蓋。但是如果父類定義方法時使用了 final 關鍵字，則該方法不可被覆蓋。可以通過 parent:: 來訪問被覆蓋的方法或屬性</p><h5 id="6-簡單的類繼承範例"><a href="#6-簡單的類繼承範例" class="headerlink" title="6. 簡單的類繼承範例"></a>6. 簡單的類繼承範例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExtendClass</span> <span class="keyword">extends</span> <span class="title">SimpleClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 同樣名稱的方法，將會覆蓋父類的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">displayVar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Extending class\n&quot;</span>;</span><br><span class="line">        <span class="built_in">parent</span>::displayVar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$extended</span> = <span class="keyword">new</span> ExtendClass();</span><br><span class="line"><span class="variable">$extended</span>-&gt;displayVar();</span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Extending class</span></span><br><span class="line"><span class="comment">// a default value</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="簽名兼容性規則"><a href="#簽名兼容性規則" class="headerlink" title="簽名兼容性規則"></a>簽名兼容性規則</h4><p>當覆蓋（override）方法時，簽名必須兼容父類方法。否則會導致 Fatal 錯誤（PHP 8.0.0 之前是 E_WARNING 級錯誤）。兼容簽名是指：遵守協變與逆變規則； 強制參數可以改為可選參數；新參數為可選參數。這就是著名的里氏替換原則（Liskov Substitution Principle），簡稱 LSP。不過構造器和 私有（private）方法不需要遵循簽名兼容規則， 哪怕簽名不匹配也不會導致 Fatal(致命) 錯誤</p><h5 id="7-兼容子類方法"><a href="#7-兼容子類方法" class="headerlink" title="7. 兼容子類方法"></a>7. 兼容子類方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Valid\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Extend1</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span> = <span class="number">5</span></span>) // 新參數為可選參數</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::foo(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Extend2</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span>, <span class="variable">$b</span> = <span class="number">5</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::foo(<span class="variable">$a</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$extended1</span> = <span class="keyword">new</span> Extend1();</span><br><span class="line"><span class="variable">$extended1</span>-&gt;foo();</span><br><span class="line"><span class="variable">$extended2</span> = <span class="keyword">new</span> Extend2();</span><br><span class="line"><span class="variable">$extended2</span>-&gt;foo(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// Valid</span></span><br><span class="line"><span class="comment">// Valid</span></span><br></pre></td></tr></table></figure><h5 id="8-子類方法移除參數后，導致-Fatal-致命-錯誤"><a href="#8-子類方法移除參數后，導致-Fatal-致命-錯誤" class="headerlink" title="8.子類方法移除參數后，導致 Fatal(致命) 錯誤"></a>8.子類方法移除參數后，導致 Fatal(致命) 錯誤</h5><p>演示子類與父類方法不兼容的例子：通過移除參數、修改可選參數為必填參數。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$a</span> = <span class="number">5</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Valid\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Extend</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::foo(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 聲明必須與Base class 的foo方法兼容</span></span><br><span class="line"><span class="comment">//Fatal error: Declaration of Extend::foo() must be compatible with Base::foo(int $a = 5)</span></span><br></pre></td></tr></table></figure><h4 id="class"><a href="#class" class="headerlink" title="::class"></a>::class</h4><p>關鍵詞 class 也可用於類名的解析。使用 ClassName::class 可以獲取包含類 ClassName 的完全限定名稱。這對使用了 命名空間 的類尤其有用。</p><h5 id="9-類名的解析"><a href="#9-類名的解析" class="headerlink" title="9. 類名的解析"></a>9. 類名的解析</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">NS</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ClassName</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title">echo</span> <span class="title">ClassName</span>::<span class="title">class</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// NS\ClassName</span></span><br></pre></td></tr></table></figure><p>:::warning<br>使用 ::class 解析類名操作會在底層編譯時進行。這意味著在執行該操作時，類還沒有被加載。因此，即使要調用的類不存在，類名也會被展示。在此種場景下，並不會發生錯誤。</p><h5 id="10-解析不存在的類名"><a href="#10-解析不存在的類名" class="headerlink" title="10. 解析不存在的類名"></a>10. 解析不存在的類名</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">print</span> Does\Not\Exist::class;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>輸出: <code>Does\Not\Exist</code><br>:::</p><h5 id="11-類名解析"><a href="#11-類名解析" class="headerlink" title="11. 類名解析"></a>11. 類名解析</h5><p>自 PHP 8.0.0 起，與上述情況不同，此時解析將會在運行時進行。此操作的運行結果和 get_class() 函數一致</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">NS</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">ClassName</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$<span class="title">c</span> = <span class="title">new</span> <span class="title">ClassName</span>();</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$c</span>::class;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 輸出</span></span><br><span class="line"><span class="comment">// NS\ClassName</span></span><br></pre></td></tr></table></figure><h4 id="Nullsafe-方法和屬性"><a href="#Nullsafe-方法和屬性" class="headerlink" title="Nullsafe 方法和屬性"></a>Nullsafe 方法和屬性</h4><p>自 PHP 8.0.0 起，類屬性和方法可以通過”nullsafe” 操作符訪問：除了一處不同，nullsafe 操作符和以上原來的屬性、方法訪問是一致的： 對象引用解析（dereference）為 並且如果是鍊式調用中的一部分，剩餘鏈條會直接跳過。?-&gt;nullnull</p><p>此操作的結果，類似於在每次訪問前使用</p><h5 id="12-Nullsafe-操作符"><a href="#12-Nullsafe-操作符" class="headerlink" title="12. Nullsafe 操作符"></a>12. Nullsafe 操作符</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 自 PHP 8.0.0 起可用</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$repository</span>?-&gt;getUser(<span class="number">5</span>)?-&gt;name;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上面的code和下面相同</span></span><br><span class="line"><span class="keyword">if</span> (is_null(<span class="variable">$repository</span>)) &#123;</span><br><span class="line">    <span class="variable">$result</span> = <span class="literal">null</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$repository</span>-&gt;getUser(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">if</span> (is_null(<span class="variable">$user</span>)) &#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$user</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>:::warning<br>注意</p><p>僅當 null 被認為是屬性或方法返回的有效和預期的可能值時，才推薦使用 nullsafe 操作符。如果業務中需要明確指示錯誤，拋出異常會是更好的處理方式。<br>:::</p><hr><h3 id="class-屬性"><a href="#class-屬性" class="headerlink" title="class 屬性"></a>class 屬性</h3><p>類的變量成員叫做“屬性”，或者叫“字段”、“特徵”，在 PHP 文檔統一稱為“屬性”。屬性聲明是由關鍵字 public(公開)，protected(非公開) 或者 private(私有) 開頭，然後跟一個普通的變量聲明來組成。屬性中的變量可以初始化，但是初始化的值必須是常數，這裡的常數是指 PHP 腳本在編譯階段時就可以得到其值，而不依賴於運行時的信息才能求值。</p><p>在類的成員方法裡面，可以用 -&gt;（對象運算符）：$this-&gt;property（其中 property 是該屬性名）這種方式來訪問非靜態屬性。</p><p>靜態屬性則是用 ::（雙冒號）：self::$property 來訪問。</p><p>以下為屬性聲明範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="comment">// 錯誤的屬性聲明</span></span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var1</span> = <span class="string">&#x27;hello &#x27;</span> . <span class="string">&#x27;world&#x27;</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var2</span> = <span class="string">&lt;&lt;&lt;EOD</span></span><br><span class="line"><span class="string">hello world</span></span><br><span class="line"><span class="string">EOD</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var3</span> = <span class="number">1</span>+<span class="number">2</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var4</span> = <span class="built_in">self</span>::myStaticMethod();</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var5</span> = <span class="variable">$myVar</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 正確的屬性聲明</span></span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var6</span> = myConstant;</span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var7</span> = <span class="keyword">array</span>(<span class="literal">true</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//在 PHP 5.3.0 及之後，下面的聲明也正確</span></span><br><span class="line">   <span class="keyword">public</span> <span class="variable">$var8</span> = &lt;&lt;&lt;<span class="string">&#x27;EOD&#x27;</span></span><br><span class="line">hello world</span><br><span class="line">EOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="類常量"><a href="#類常量" class="headerlink" title="類常量"></a>類常量</h3><p>可以把在類中始終保持不變的值定義為常量。在定義和使用常量的時候不需要使用 $ 符號。 常量的值必須是一個定值，不能是變量，類屬性，數學運算的結果或函數調用。</p><p>如何定義和使用類常量，查看以下範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> constant = <span class="string">&#x27;constant value&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showConstant</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="built_in">self</span>::constant . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> MyClass::constant . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&quot;MyClass&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$classname</span>::constant . <span class="string">&quot;\n&quot;</span>; <span class="comment">// 自 5.3.0 起</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> MyClass();</span><br><span class="line"><span class="variable">$class</span>-&gt;showConstant();</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>::constant.<span class="string">&quot;\n&quot;</span>; <span class="comment">// 自 PHP 5.3.0 起</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="類的自動加載"><a href="#類的自動加載" class="headerlink" title="類的自動加載"></a>類的自動加載</h3><p>在編寫有關於對象（OOP） 程序時，很多開發者為每個類新建一個 PHP 文件。這會帶來一個煩惱：每個腳本的開頭，都需要包含（include）一個長長的列表（每個類都有個文件）。</p><p>在 PHP 5 中，已經不再需要這樣了。 spl_autoload_register() 函數可以註冊任意數量的自動加載器，當使用尚未被定義的類（class）和接口（interface）時自動去加載。通過註冊自動加載器，腳本引擎在 PHP 出錯失敗前有了最後一個機會加載所需的類。</p><p>:::info<br>儘管 <strong>autoload() 函數也能自動加載類和接口，但更建議使用 spl_autoload_register() 函數。 spl_autoload_register() 提供了一種更加靈活的方式來實現類的自動加載（同一個應用中，可以支持任意數量的加載器，比如第三方庫中的）。因此，不再建議使用 </strong>autoload() 函數，在以後的版本中它可能被棄用<br>:::</p><h5 id="1-自動加載範例"><a href="#1-自動加載範例" class="headerlink" title="1. 自動加載範例"></a>1. 自動加載範例</h5><p>本例嘗試分別從 MyClass1.php 和 MyClass2.php 文件中加載 MyClass1 和 MyClass2 類。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$class_name</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">require_once</span> <span class="variable">$class_name</span> . <span class="string">&#x27;.php&#x27;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span>  = <span class="keyword">new</span> MyClass1();</span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">new</span> MyClass2();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-自動加載在-PHP-5-3-0-中的異常處理"><a href="#2-自動加載在-PHP-5-3-0-中的異常處理" class="headerlink" title="2. 自動加載在 PHP 5.3.0+ 中的異常處理"></a>2. 自動加載在 PHP 5.3.0+ 中的異常處理</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Want to load <span class="subst">$name</span>.\n&quot;</span>;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Unable to load <span class="subst">$name</span>.&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="variable">$obj</span> = <span class="keyword">new</span> NonLoadableClass();</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;getMessage(), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Want to load NonLoadableClass.</span></span><br><span class="line"><span class="comment">// Unable to load NonLoadableClass.</span></span><br></pre></td></tr></table></figure><h3 id="構造函數和析構函數"><a href="#構造函數和析構函數" class="headerlink" title="構造函數和析構函數"></a>構造函數和析構函數</h3><h4 id="構造函數"><a href="#構造函數" class="headerlink" title="構造函數"></a>構造函數</h4><p><code>__construct(mixed ...$values = &quot;&quot;): void</code></p><p>PHP 允許開發者在一個類中定義一個方法作為構造函數。具有構造函數的類會在每次創建新對象時先調用此方法，所以非常適合在使用對象之前做一些初始化工作</p><p>:::warning<br>注意: 如果子類中定義了構造函數則不會隱式調用其父類的構造函數。要執行父類的構造函數，需要在子類的構造函數中調用 parent::__construct()。如果子類沒有定義構造函數則會如同一個普通的類方法一樣從父類繼承（假如沒有被定義為 private 的話）。<br>:::</p><h5 id="1-繼承中的構造函數"><a href="#1-繼承中的構造函數" class="headerlink" title="1. 繼承中的構造函數"></a>1. 繼承中的構造函數</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;In BaseClass constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct();</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;In SubClass constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherSubClass</span> <span class="keyword">extends</span> <span class="title">BaseClass</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 繼承 BaseClass 的構造函數</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// In BaseClass constructor</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> BaseClass();</span><br><span class="line"></span><br><span class="line"><span class="comment">// In BaseClass constructor</span></span><br><span class="line"><span class="comment">// In SubClass constructor</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> SubClass();</span><br><span class="line"></span><br><span class="line"><span class="comment">// In BaseClass constructor</span></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> OtherSubClass();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-構造器函數"><a href="#2-構造器函數" class="headerlink" title="2. 構造器函數"></a>2. 構造器函數</h5><p>因此可以定義任何數量的參數，可以是必選、可以有類型、可以有默認值。構造器的參數放在類名後的括號裡調用。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> <span class="variable">$x</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> <span class="variable">$y</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$x</span>, <span class="keyword">int</span> <span class="variable">$y</span> = <span class="number">0</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;x = <span class="variable">$x</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;y = <span class="variable">$y</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 兩個參數都傳入</span></span><br><span class="line"><span class="variable">$p1</span> = <span class="keyword">new</span> Point(<span class="number">4</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">// 僅傳入必填的參數。 $y 會默認為0。</span></span><br><span class="line"><span class="variable">$p2</span> = <span class="keyword">new</span> Point(<span class="number">4</span>);</span><br><span class="line"><span class="comment">// 使用命名參數（PHP 8.0 起）:</span></span><br><span class="line"><span class="variable">$p3</span> = <span class="keyword">new</span> Point(y: <span class="number">5</span>, x: <span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果一個類沒有構造函數，以及構造函數的參數不是必填項時，括號就可以省略。</p><h4 id="析構函數"><a href="#析構函數" class="headerlink" title="析構函數"></a>析構函數</h4><p><code>__destruct(): void</code></p><h5 id="1-析構函數範例"><a href="#1-析構函數範例" class="headerlink" title="1. 析構函數範例"></a>1. 析構函數範例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDestructableClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;In constructor\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">&quot;Destroying &quot;</span> . <span class="keyword">__CLASS__</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> MyDestructableClass();</span><br></pre></td></tr></table></figure><p>和構造函數一樣，父類的析構函數不會被引擎暗中調用。要執行父類的析構函數，必須在子類的析構函數體中顯式調用 parent::__destruct()。</p><p>此外也和構造函數一樣，子類如果自己沒有定義析構函數則會繼承父類的。 析構函數即使在使用 exit() 終止腳本運行時也會被調用。</p><p>在析構函數中調用 exit() 將會中止其餘關閉操作的運行。</p><p>:::warning<br>注意: 析構函數在腳本關閉時調用，此時所有的 HTTP 頭信息已經發出。腳本關閉時的工作目錄有可能和在 SAPI（如 apache）中時不同<br>:::</p><p>:::warning<br>注意: 試圖在析構函數（在腳本終止時被調用）中拋出一個異常會導致致命錯誤。<br>:::</p><hr><h3 id="訪問控制-可見性"><a href="#訪問控制-可見性" class="headerlink" title="訪問控制(可見性)"></a>訪問控制(可見性)</h3><p>對屬性或方法的訪問控制（PHP 7.1.0 以後支持常量），通過在前面添加關鍵字 public（公有），protected（受保護）或 private（私有）來實現的。</p><p>被定義為公有的類成員可以在任何地方被訪問。被定義為受保護的類成員則可以被其自身以及其子類和父類訪問。被定義為私有的類成員則只能被其定義所在的類訪問。</p><h4 id="屬性的訪問控制"><a href="#屬性的訪問控制" class="headerlink" title="屬性的訪問控制"></a>屬性的訪問控制</h4><h5 id="1-屬性聲明"><a href="#1-屬性聲明" class="headerlink" title="1. 屬性聲明"></a>1. 屬性聲明</h5><p>類屬性必須定義為公有，受保護，私有之一。如果用 var 定義，則被視為公有</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$public</span> = <span class="string">&#x27;Public&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$protected</span> = <span class="string">&#x27;Protected&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$private</span> = <span class="string">&#x27;Private&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> MyClass();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;public; <span class="comment">// 這行能被正常執行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;protected; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>-&gt;private; <span class="comment">// 這行也會產生一個致命錯誤</span></span><br><span class="line"><span class="variable">$obj</span>-&gt;printHello(); <span class="comment">// 輸出 Public、Protected 和 Private</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 可以對 public 和 protected 進行重定義，但 private 而不能</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$public</span> = <span class="string">&#x27;Public2&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$protected</span> = <span class="string">&#x27;Protected2&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">printHello</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;public;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;protected;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;private;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj2</span> = <span class="keyword">new</span> MyClass2();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj2</span>-&gt;public; <span class="comment">// 這行能被正常執行</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj2</span>-&gt;protected; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj2</span>-&gt;private; <span class="comment">// 未定義 private</span></span><br><span class="line"><span class="variable">$obj2</span>-&gt;printHello(); <span class="comment">// 輸出 Public2、Protected2 和 Undefined</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="方法的訪問控制"><a href="#方法的訪問控制" class="headerlink" title="方法的訪問控制"></a>方法的訪問控制</h4><h5 id="方法聲明"><a href="#方法聲明" class="headerlink" title="方法聲明"></a>方法聲明</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 聲明一個公有的構造函數</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明一個公有的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPublic</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明一個受保護的方法</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">MyProtected</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聲明一個私有的方法</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">MyPrivate</span>(<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 預設為公開方法</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPublic();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyProtected();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPrivate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass</span> = <span class="keyword">new</span> MyClass;</span><br><span class="line"><span class="variable">$myclass</span>-&gt;MyPublic(); <span class="comment">// 這行能被正常執行</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;MyProtected(); <span class="comment">// 會出現致命錯誤</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;MyPrivate(); <span class="comment">// 會出現致命錯誤</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;Foo(); <span class="comment">// 公有，受保護，私有都可以執行</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 為公開的函數</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">Foo2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPublic();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyProtected();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;MyPrivate(); <span class="comment">// 會發生錯誤</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass2</span> = <span class="keyword">new</span> MyClass2;</span><br><span class="line"><span class="variable">$myclass2</span>-&gt;MyPublic(); <span class="comment">// 这行能被正常执行</span></span><br><span class="line"><span class="variable">$myclass2</span>-&gt;Foo2(); <span class="comment">// 公有，受保護，私有不可執行只能在原class裡執行</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;testPrivate();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;testPublic();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Bar::testPublic\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Bar::testPrivate\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> <span class="keyword">extends</span> <span class="title">Bar</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">testPublic</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Foo::testPublic\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">testPrivate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Foo::testPrivate\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myFoo</span> = <span class="keyword">new</span> foo();</span><br><span class="line"><span class="variable">$myFoo</span>-&gt;test(); <span class="comment">// Bar::testPrivate</span></span><br><span class="line">                <span class="comment">// Foo::testPublic</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="常量的控制訪問"><a href="#常量的控制訪問" class="headerlink" title="常量的控制訪問"></a>常量的控制訪問</h4><h5 id="php-7-1-up-中常量聲明"><a href="#php-7-1-up-中常量聲明" class="headerlink" title="php 7.1 up 中常量聲明"></a>php 7.1 up 中常量聲明</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 公有常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">const</span> MY_PUBLIC = <span class="string">&#x27;public&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 受保護的常量</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">const</span> MY_PROTECTED = <span class="string">&#x27;protected&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有常量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">const</span> MY_PRIVATE = <span class="string">&#x27;private&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PUBLIC;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PROTECTED;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PRIVATE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass</span> = <span class="keyword">new</span> MyClass();</span><br><span class="line">MyClass::MY_PUBLIC; <span class="comment">// 這行可以正常執行</span></span><br><span class="line">MyClass::MY_PROTECTED; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line">MyClass::MY_PRIVATE; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line"><span class="variable">$myclass</span>-&gt;foo(); <span class="comment">// 將會輸出：Public Protected Private</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define MyClass2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass2</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// This is public</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">foo2</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PUBLIC;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PROTECTED;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::MY_PRIVATE; <span class="comment">// 這行會產生一個致命錯誤</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$myclass2</span> = <span class="keyword">new</span> MyClass2;</span><br><span class="line"><span class="keyword">echo</span> MyClass2::MY_PUBLIC; <span class="comment">// 這行可以正常執行</span></span><br><span class="line"><span class="variable">$myclass2</span>-&gt;foo2(); <span class="comment">// 將會輸出：Public Protected，MY_PRIVATE 是私有常量，無法輸出</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="其他對象的訪問控制"><a href="#其他對象的訪問控制" class="headerlink" title="其他對象的訪問控制"></a>其他對象的訪問控制</h4><h5 id="訪問同一個對像類型的私有成員"><a href="#訪問同一個對像類型的私有成員" class="headerlink" title="訪問同一個對像類型的私有成員"></a>訪問同一個對像類型的私有成員</h5><p>同一個類的對象即使不是同一個實例也可以互相訪問對方的私有與受保護成員。這是由於在這些對象的內部具體實現的細節都是已知的</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$foo</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$foo</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;foo = <span class="variable">$foo</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Accessed the private method.&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Test <span class="variable">$other</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// We can change the private property:</span></span><br><span class="line">        <span class="variable">$other</span>-&gt;foo = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">        var_dump(<span class="variable">$other</span>-&gt;foo);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// We can also call the private method:</span></span><br><span class="line">        <span class="variable">$other</span>-&gt;bar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> Test(<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span>-&gt;baz(<span class="keyword">new</span> Test(<span class="string">&#x27;other&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// string(5) &quot;hello&quot;</span></span><br><span class="line"><span class="comment">// Accessed the private method.</span></span><br></pre></td></tr></table></figure><h3 id="範圍解析操作符"><a href="#範圍解析操作符" class="headerlink" title="範圍解析操作符(::)"></a>範圍解析操作符(::)</h3><p>php 可以利用這一對冒號來訪問靜態成員，類常量，還可以用於覆蓋類中的屬性和方法</p><h5 id="在類的外部使用-操作符"><a href="#在類的外部使用-操作符" class="headerlink" title="在類的外部使用 :: 操作符"></a>在類的外部使用 :: 操作符</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> CONST_VALUE = <span class="string">&#x27;A constant value&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;MyClass&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$classname</span>::CONST_VALUE; <span class="comment">// 自 PHP 5.3.0 起</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> MyClass::CONST_VALUE;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>self，parent 和 static 這三個特殊的關鍵字是用於在類定義的內部對其屬性或方法進行訪問的。</p><h5 id="在類定義內部使用"><a href="#在類定義內部使用" class="headerlink" title="在類定義內部使用 ::"></a>在類定義內部使用 ::</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherClass</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$my_static</span> = <span class="string">&#x27;static var&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">doubleColon</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">parent</span>::CONST_VALUE . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;OtherClass&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$classname</span>::doubleColon(); <span class="comment">// 自 PHP 5.3.0 起</span></span><br><span class="line"></span><br><span class="line">OtherClass::doubleColon();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>當一個子類覆蓋其父類中的方法時，PHP 不會調用父類中已被覆蓋的方法。是否調用父類的方法取決於子類。這種機制也作用於構造函數和析構函數，重載以及魔術方法。</p><h5 id="調用父類的方法"><a href="#調用父類的方法" class="headerlink" title="調用父類的方法"></a>調用父類的方法</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;MyClass::myFunc()\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherClass</span> <span class="keyword">extends</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 覆蓋了父類定義</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">myFunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 但還是可以調用父類中被覆盖的方法</span></span><br><span class="line">        <span class="built_in">parent</span>::myFunc();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;OtherClass::myFunc()\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> OtherClass();</span><br><span class="line"><span class="variable">$class</span>-&gt;myFunc();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="靜態-static-關鍵字"><a href="#靜態-static-關鍵字" class="headerlink" title="靜態(static)關鍵字"></a>靜態(static)關鍵字</h3><p>聲明類屬性或方法為靜態，就可以不實例化類而直接訪問。靜態屬性不能通過一個類已實例化的對象來訪問（但靜態方法可以）</p><h4 id="靜態方法"><a href="#靜態方法" class="headerlink" title="靜態方法"></a>靜態方法</h4><h5 id="靜態方法示例"><a href="#靜態方法示例" class="headerlink" title="靜態方法示例"></a>靜態方法示例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">aStaticMethod</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Foo::aStaticMethod();</span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;Foo&#x27;</span>;</span><br><span class="line"><span class="variable">$classname</span>::aStaticMethod();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="靜態屬性"><a href="#靜態屬性" class="headerlink" title="靜態屬性"></a>靜態屬性</h4><p>靜態屬性不可以由對象通過 -&gt; 操作符來訪問。 就像其它所有的 PHP 靜態變量一樣，靜態屬性在初始化時遵循和 const 表達式一樣的規則： 有一些特定的表達式是可行的，取決於它們是否能在編譯時就計算出值。 通過變量來引用一個類是可行的，但這個變量的值不能是一個保留字 （例如 self，parent 和 static）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$my_static</span> = <span class="string">&#x27;foo&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">staticValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$my_static</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bar</span> <span class="keyword">extends</span> <span class="title">Foo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fooStatic</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">parent</span>::<span class="variable">$my_static</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> Foo::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$foo</span> = <span class="keyword">new</span> Foo();</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$foo</span>-&gt;staticValue() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$foo</span>-&gt;my_static . <span class="string">&quot;\n&quot;</span>;      <span class="comment">// 未定義的 &quot;屬性&quot; my_static</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="variable">$foo</span>::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$classname</span> = <span class="string">&#x27;Foo&#x27;</span>;</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$classname</span>::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> Bar::<span class="variable">$my_static</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$bar</span> = <span class="keyword">new</span> Bar();</span><br><span class="line"><span class="keyword">print</span> <span class="variable">$bar</span>-&gt;fooStatic() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="抽象類"><a href="#抽象類" class="headerlink" title="抽象類"></a>抽象類</h3><p>PHP 也支援抽象類的和抽象方法，被定義為抽象類的方法不能被實體化，在任何一個類別中，<br>如果他至少有一個方法被聲明為抽象，那這個類必須要被聲明為抽象類。被定義為抽象類的方法只能聲明他該怎麼使用，不能定義具體功能實現。</p><p>當有類別繼承抽象類別時，子類別必須要定義父類別中的所以抽象方法，另外，這些方法的訪問控制必須和父類中一樣（或者更為寬鬆）。例如某個抽象方法是被聲明為受保護的，那麼子類中實現的方法就應該聲明為受保護的或者公有的，而不能定義為私有的。</p><p>此外方法的調用方式必須匹配，即類型和所需參數數量必須一致。例如，子類定義了一個可選參數，而父類抽象方法的聲明里沒有，則兩者的聲明並無衝突。</p><blockquote><p>這也適用於 PHP 5.4 起的構造函數。在 PHP 5.4 之前的構造函數聲明可以不一樣的。</p></blockquote><h4 id="1-抽象類範例-1"><a href="#1-抽象類範例-1" class="headerlink" title="1. 抽象類範例 1"></a>1. 抽象類範例 1</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"> <span class="comment">// 子類必須定義這些方法，否則會出錯</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span>(<span class="params"><span class="variable">$prefix</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 普通方法（非抽象方法）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">printOut</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="keyword">$this</span>-&gt;getValue() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass1</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ConcreteClass1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span>(<span class="params"><span class="variable">$prefix</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$prefix&#125;</span>ConcreteClass1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass2</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;ConcreteClass2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixValue</span>(<span class="params"><span class="variable">$prefix</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$prefix&#125;</span>ConcreteClass2&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class1</span> = <span class="keyword">new</span> ConcreteClass1;</span><br><span class="line"><span class="variable">$class1</span>-&gt;printOut();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class1</span>-&gt;prefixValue(<span class="string">&#x27;FOO_&#x27;</span>) .<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class2</span> = <span class="keyword">new</span> ConcreteClass2;</span><br><span class="line"><span class="variable">$class2</span>-&gt;printOut();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class2</span>-&gt;prefixValue(<span class="string">&#x27;FOO_&#x27;</span>) .<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// ConcreteClass1</span></span><br><span class="line"><span class="comment">// FOO_ConcreteClass1</span></span><br><span class="line"><span class="comment">// ConcreteClass2</span></span><br><span class="line"><span class="comment">// FOO_ConcreteClass2</span></span><br></pre></td></tr></table></figure><h4 id="2-抽象類範例-2"><a href="#2-抽象類範例-2" class="headerlink" title="2. 抽象類範例 2"></a>2. 抽象類範例 2</h4><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">// 我们的抽象方法仅需要定义需要的参数</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixName</span>(<span class="params"><span class="variable">$name</span></span>)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteClass</span> <span class="keyword">extends</span> <span class="title">AbstractClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子類的方法可以定義父類方法中不存在的可選參數，不衝突</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">prefixName</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$separator</span> = <span class="string">&quot;.&quot;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$name</span> == <span class="string">&quot;Pacman&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$prefix</span> = <span class="string">&quot;Mr&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$name</span> == <span class="string">&quot;Pacwoman&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$prefix</span> = <span class="string">&quot;Mrs&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$prefix</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;<span class="subst">&#123;$prefix&#125;</span><span class="subst">&#123;$separator&#125;</span> <span class="subst">&#123;$name&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$class</span> = <span class="keyword">new</span> ConcreteClass;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>-&gt;prefixName(<span class="string">&quot;Pacman&quot;</span>), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$class</span>-&gt;prefixName(<span class="string">&quot;Pacwoman&quot;</span>), <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// outputs</span></span><br><span class="line"><span class="comment">// Mr. Pacman</span></span><br><span class="line"><span class="comment">// Mrs. Pacwoman</span></span><br></pre></td></tr></table></figure><h3 id="Interface-對象接口也稱介面"><a href="#Interface-對象接口也稱介面" class="headerlink" title="Interface 對象接口也稱介面"></a>Interface 對象接口也稱介面</h3><p>使用介面（interface），可以指定某個類必須實現哪些方法，但不需要定義這些方法的具體內容。由於介面（interface）和類（class）、trait 共享了命名空間，所以它們不能重名。介面就像定義一個標準的類一樣，通過 interface 關鍵字替換掉 class 關鍵字來定義，但其中所有的方法都是空的。介面中定義的所有方法都必須是公有，這是介面的特性。在實踐中，往往出於兩個輔助目的使用介面： 因為實現了同一個介面，所以開發者創建的對象雖然源自不同的類，但可能可以交換使用。常用於多個數據庫的服務訪問、多個支付網關、不同的緩存策略等。可能不需要任何代碼修改，就能切換不同的實現方式。能夠讓函數與方法接受一個符合介面的參數，而不需要關心對像如何做、如何實現。這些介面常常命名成類似 Iterable、Cacheable、Renderable， 以便於體現出功能的含義。</p><p>:::warning<br>注意: 雖然沒有禁止，但是強烈建議不要在接口中使用 構造器。因為這樣在對象實現接口時，會大幅降低靈活性。此外，也不能強制確保構造器遵守繼承規則，將導致不可預料的行為結果。<br>:::</p><h4 id="實現-implements"><a href="#實現-implements" class="headerlink" title="實現 implements"></a>實現 implements</h4><p>要使用一個介面，使用 implements 操作符。類中必須使用介面中定義的所有方法，否則會報一個致命錯誤。類可以實現多個接口，用逗號來分隔多個接口的名稱。</p><p>:::danger<br>警告：類使用（implement）兩個接口時，如果它們定義了相同名稱的方法，只有簽名相同的時候才是允許的。<br>:::</p><p>:::danger<br>警告：使用介面的時候，class 中的參數名稱不必和介面完全一致。然而， PHP 8.0 起語法開始支持命名參數， 也就是說調用方會依賴介面中參數的名稱。因此，強烈建議開發者的參數的命名，在類和介面中保持一致。<br>:::</p><p>:::warning<br>注意:接口也可以通過 extends 操作符繼承<br>:::</p><p>:::warning<br>注意:類實現介面時，必須以兼容的簽名定義介面中所有方法。<br>:::</p><h5 id="1-介面範例"><a href="#1-介面範例" class="headerlink" title="1. 介面範例"></a>1. 介面範例</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 聲明一個&#x27;Template&#x27;介面</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Template</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$var</span></span>)</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span>(<span class="params"><span class="variable">$template</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用介面</span></span><br><span class="line"><span class="comment">// 正確寫法如下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkingTemplate</span> <span class="keyword">implements</span> <span class="title">Template</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vars</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;vars[<span class="variable">$name</span>] = <span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getHtml</span>(<span class="params"><span class="variable">$template</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;vars <span class="keyword">as</span> <span class="variable">$name</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$template</span> = str_replace(<span class="string">&#x27;&#123;&#x27;</span> . <span class="variable">$name</span> . <span class="string">&#x27;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$template</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$template</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下面的寫法是錯誤的，會報錯，因為沒有使用到該介面方法 getHtml()：</span></span><br><span class="line"><span class="comment">// Fatal error: Class BadTemplate contains 1 abstract methods</span></span><br><span class="line"><span class="comment">// and must therefore be declared abstract (Template::getHtml)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BadTemplate</span> <span class="keyword">implements</span> <span class="title">Template</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vars</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setVariable</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$var</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;vars[<span class="variable">$name</span>] = <span class="variable">$var</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-可擴充介面"><a href="#2-可擴充介面" class="headerlink" title="2. 可擴充介面"></a>2. 可擴充介面</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Baz <span class="variable">$baz</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正確寫法</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Baz <span class="variable">$baz</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 錯誤寫法導致致命錯誤</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">implements</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params">Foo <span class="variable">$foo</span></span>) // 參考錯誤</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-拓展多介面"><a href="#3-拓展多介面" class="headerlink" title="3. 拓展多介面"></a>3. 拓展多介面</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">A</span>, <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">D</span> <span class="keyword">implements</span> <span class="title">C</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">baz</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-使用介面常量"><a href="#4-使用介面常量" class="headerlink" title="4. 使用介面常量"></a>4. 使用介面常量</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> B = <span class="string">&#x27;Interface constant&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出接口常量</span></span><br><span class="line"><span class="keyword">echo</span> A::B;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 錯誤寫法，因為常量不能被覆蓋。接口常量的概念和類常量是一樣的。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> B = <span class="string">&#x27;Class constant&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-抽象（abstract）類的介面使用"><a href="#5-抽象（abstract）類的介面使用" class="headerlink" title="5. 抽象（abstract）類的介面使用"></a>5. 抽象（abstract）類的介面使用</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$s</span></span>): <span class="title">string</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$i</span></span>): <span class="title">int</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  抽象類可能僅實現了接口的一部分。</span></span><br><span class="line"><span class="comment">// 擴展該抽象類時必須實現剩餘部分</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">A</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    pubic <span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"><span class="keyword">string</span> <span class="variable">$s</span></span>): <span class="title">string</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$s</span> . PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span> <span class="keyword">extends</span> <span class="title">B</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"><span class="keyword">int</span> <span class="variable">$i</span></span>): <span class="title">int</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$i</span> * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="6-同時使用繼承和介面"><a href="#6-同時使用繼承和介面" class="headerlink" title="6. 同時使用繼承和介面"></a>6. 同時使用繼承和介面</h5><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">One</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Usable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Updatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 關鍵字順序至關重要： &#x27;extends&#x27; 必須在前面</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Two</span> <span class="keyword">extends</span> <span class="title">One</span> <span class="keyword">implements</span> <span class="title">Usable</span>, <span class="title">Updatable</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/* ... */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>資料來源: <a href="https://www.php.net/">https://www.php.net/</a></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Html select選單設定&#39;disabled&#39; =&gt; &#39;true&#39;無法submit解法</title>
      <link href="/2021/09/10/Html_select_can_not_submit/"/>
      <url>/2021/09/10/Html_select_can_not_submit/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Html-select-選單設定’disabled’-gt-‘true’無法-submit-解法"><a href="#Html-select-選單設定’disabled’-gt-‘true’無法-submit-解法" class="headerlink" title="Html select 選單設定’disabled’ =&gt; ‘true’無法 submit 解法"></a>Html select 選單設定’disabled’ =&gt; ‘true’無法 submit 解法</h1><p>設定成’disabled’ =&gt; ‘true’代表不能更改，但在傳送表單時無法傳遞出去</p><p>可以使用 Jquery 解法，在表單 submit 時將 disabled 設成 false</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">jQuery(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">&quot;form&quot;</span>).bind(<span class="string">&quot;submit&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="built_in">this</span>).find(<span class="string">&quot;:input&quot;</span>).prop(<span class="string">&quot;disabled&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel起步走</title>
      <link href="/2021/09/10/Laravel_start/"/>
      <url>/2021/09/10/Laravel_start/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-起步走"><a href="#Laravel-起步走" class="headerlink" title="Laravel 起步走"></a>Laravel 起步走</h1><p>Laravel 是一個 MVC 架構的 PHP 框架，分別是 model(資料處理)，controller(控制器)，view(呈現畫面)，</p><p>Laravel 還有提供了驗證(authentication)、路由(routing)、sessions、快取(caching) 等開發過程中經常用到的工具或功能。是一個強大的網頁開發框架。</p><p>那要怎麼使用 laravel 呢?</p><h3 id="1-安裝-composer"><a href="#1-安裝-composer" class="headerlink" title="1. 安裝 composer"></a>1. 安裝 composer</h3><p>首先先下載 composer<a href="https://getcomposer.org/download/">官方載點</a><br>我是 window 開發用戶<br><img src="https://i.imgur.com/25RWxuX.jpg" alt=""><br>安裝後選擇本機 php 位置安裝，安裝完畢後可以在命令提示字元(簡稱 cmd)確認是否安裝完成<br>輸入:<code>composer -v</code><br><img src="https://i.imgur.com/r7BBnRM.jpg" alt=""><br>看到這畫面代表成功囉</p><h3 id="2-下載-laravel"><a href="#2-下載-laravel" class="headerlink" title="2. 下載 laravel"></a>2. 下載 laravel</h3><p>cmd 輸入:<code>composer global require laravel/installer</code></p><h3 id="3-新增-laravel-專案"><a href="#3-新增-laravel-專案" class="headerlink" title="3. 新增 laravel 專案"></a>3. 新增 laravel 專案</h3><p>cmd 輸入: <code>laravel new &quot;專案名稱&quot;</code><br><img src="https://i.imgur.com/b8yq4v6.jpg" alt=""></p><h3 id="4-開啟-laravel"><a href="#4-開啟-laravel" class="headerlink" title="4. 開啟 laravel"></a>4. 開啟 laravel</h3><p>首先先進入 laravel 專案<br>cmd 輸入: <code>cd &quot;專案名稱&quot;</code><br>cmd 輸入: <code>php artisan serve</code><br>網址輸入: <a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a><br>就可以看到預設的 laravel 畫面囉<br><img src="https://i.imgur.com/c4AmTOo.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux遇到資料夾權限問題</title>
      <link href="/2021/09/10/Linux_fix_authority/"/>
      <url>/2021/09/10/Linux_fix_authority/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Linux-遇到資料夾權限問題"><a href="#Linux-遇到資料夾權限問題" class="headerlink" title="Linux 遇到資料夾權限問題"></a>Linux 遇到資料夾權限問題</h1><p>問題:<br><code>laravel - The stream or file &quot;/storage/logs/laravel.log&quot; could not be opened in append mode: failed to open stream: Permission denied</code></p><p>解法:<br><code>sudo chown apache:apache -R dir</code></p><p><code>sudo chmod u+w,g+w -R dir</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS實現部分區域全螢幕即退出</title>
      <link href="/2021/09/10/js_screen/"/>
      <url>/2021/09/10/js_screen/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JS-實現部分區域全螢幕即退出"><a href="#JS-實現部分區域全螢幕即退出" class="headerlink" title="JS 實現部分區域全螢幕即退出"></a>JS 實現部分區域全螢幕即退出</h1><h2 id="1-首先找出要全螢幕區域"><a href="#1-首先找出要全螢幕區域" class="headerlink" title="1. 首先找出要全螢幕區域"></a>1. 首先找出要全螢幕區域</h2><pre><code>`var elem = document.getElementById(&quot;game&quot;);`</code></pre><h2 id="2-建立全螢幕-function"><a href="#2-建立全螢幕-function" class="headerlink" title="2. 建立全螢幕 function"></a>2. 建立全螢幕 function</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 局部全螢幕</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">requestFullScreen</span>(<span class="params">element</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> requestMethod =</span><br><span class="line">    element.requestFullScreen ||</span><br><span class="line">    element.webkitRequestFullScreen ||</span><br><span class="line">    element.mozRequestFullScreen ||</span><br><span class="line">    element.msRequestFullScreen;</span><br><span class="line">  <span class="keyword">if</span> (requestMethod) &#123;</span><br><span class="line">    requestMethod.call(element);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="built_in">window</span>.ActiveXObject !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> wscript = <span class="keyword">new</span> ActiveXObject(<span class="string">&quot;WScript.Shell&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (wscript !== <span class="literal">null</span>) &#123;</span><br><span class="line">      wscript.SendKeys(<span class="string">&quot;&#123;F11&#125;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-將選到-element-區塊全螢幕"><a href="#3-將選到-element-區塊全螢幕" class="headerlink" title="3. 將選到 element 區塊全螢幕"></a>3. 將選到 element 區塊全螢幕</h2><pre><code>`requestFullScreen(elem);`</code></pre><h2 id="4-退出全螢幕函數"><a href="#4-退出全螢幕函數" class="headerlink" title="4. 退出全螢幕函數"></a>4. 退出全螢幕函數</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">exitFullscreen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">document</span>.exitFullscreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.exitFullscreen();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.msExitFullscreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.msExitFullscreen();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.mozCancelFullScreen();</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">document</span>.webkitExitFullscreen) &#123;</span><br><span class="line">    <span class="built_in">document</span>.webkitExitFullscreen();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-監聽按鈕事件"><a href="#5-監聽按鈕事件" class="headerlink" title="5. 監聽按鈕事件"></a>5. 監聽按鈕事件</h2><p>我是設置一個是否為全螢幕的變數去跑，這樣就只需要一個按鈕就可以解決</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>); <span class="comment">// 尋找button id=btn的按鈕</span></span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 監聽btn按鈕click事件</span></span><br><span class="line">　　<span class="keyword">var</span> elem = <span class="built_in">document</span>.getElementById(<span class="string">&quot;content&quot;</span>); <span class="comment">// 要全螢幕的element id</span></span><br><span class="line">　　requestFullScreen(elem); <span class="comment">// 全螢幕</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> close = <span class="built_in">document</span>.getElementById(<span class="string">&quot;close&quot;</span>); <span class="comment">// 尋找button id=close的按鈕</span></span><br><span class="line">close.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 監聽close按鈕click事件</span></span><br><span class="line">    exitFullscreen(); <span class="comment">// 關閉全螢幕</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下由一個button完成</span></span><br><span class="line"><span class="keyword">var</span> fullscreen = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="built_in">document</span>.getElementById(<span class="string">&quot;btn&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> elem = <span class="built_in">document</span>.getElementById(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">btn.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fullscreen)&#123;</span><br><span class="line">        exitFullscreen();</span><br><span class="line">        fullscreen = <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">　　    requestFullScreen(elem);</span><br><span class="line">        fullscreen = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel排程下載外部Url檔案，及更新進資料庫資料</title>
      <link href="/2021/09/10/laravel_auto_download/"/>
      <url>/2021/09/10/laravel_auto_download/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="laravel-排程下載外部-Url-檔案，及更新進資料庫資料"><a href="#laravel-排程下載外部-Url-檔案，及更新進資料庫資料" class="headerlink" title="laravel 排程下載外部 Url 檔案，及更新進資料庫資料"></a>laravel 排程下載外部 Url 檔案，及更新進資料庫資料</h1><h2 id="如何下載外部公開-URL"><a href="#如何下載外部公開-URL" class="headerlink" title="如何下載外部公開 URL"></a>如何下載外部公開 URL</h2><p>首先利用 Client 套件下載外部 url 的 csv 檔案。</p><p>本文撰寫使用抓取此網址<code>https://od.cdc.gov.tw/acute/幼兒常規疫苗接種時間試算表.csv</code>為範例</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$client</span> = <span class="keyword">new</span> \GuzzleHttp\Client();</span><br><span class="line">    <span class="variable">$a</span> = <span class="variable">$client</span>-&gt;get(<span class="string">&#x27;https:/example/example.csv&#x27;</span>, [<span class="string">&#x27;save_to&#x27;</span> =&gt; resource_path() . <span class="string">&#x27;/download/file.csv&#x27;</span>]);</span><br><span class="line">    <span class="keyword">return</span> response(<span class="number">200</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何將下載檔案匯進資料庫"><a href="#如何將下載檔案匯進資料庫" class="headerlink" title="如何將下載檔案匯進資料庫"></a>如何將下載檔案匯進資料庫</h2><p>使用 laravel-excel 套件將下載的檔案 import 進資料庫</p><p><a href="https://docs.laravel-excel.com/3.1/getting-started/installation.html">laravel-excel 安裝</a></p><p>因為等等會用到先說說 laravel ORM 的 firstOrCreate 方法</p><p>功能 : 將嘗試使用給定的列/值對定位數據庫記錄。如果在數據庫中找不到模型，則會插入一條記錄，其中包含將第一個數組參數與可選的第二個數組參數合併後的屬性</p><p>以下為文檔範例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Models</span>\<span class="title">Flight</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieve flight by name or create it if it doesn&#x27;t exist...</span></span><br><span class="line"><span class="variable">$flight</span> = Flight::firstOrCreate([</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;London to Paris&#x27;</span></span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Retrieve flight by name or create it with the name, delayed, and arrival_time attributes...</span></span><br><span class="line"><span class="variable">$flight</span> = Flight::firstOrCreate(</span><br><span class="line">    [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;London to Paris&#x27;</span>],</span><br><span class="line">    [<span class="string">&#x27;delayed&#x27;</span> =&gt; <span class="number">1</span>, <span class="string">&#x27;arrival_time&#x27;</span> =&gt; <span class="string">&#x27;11:30&#x27;</span>]</span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再來先創建要傳遞的類<br>檔案可以放在 app/imports/ExampleImport.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Imports</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Vaccination</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Support</span>\<span class="title">Collection</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Maatwebsite</span>\<span class="title">Excel</span>\<span class="title">Concerns</span>\<span class="title">ToCollection</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VaccinationImport</span> <span class="keyword">implements</span> <span class="title">ToCollection</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">collection</span>(<span class="params">Collection <span class="variable">$rows</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$rows</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$row</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$k</span> &lt; <span class="number">1</span>) <span class="keyword">continue</span>; <span class="comment">// 跳過標題</span></span><br><span class="line"></span><br><span class="line">            Vaccination::firstOrCreate([ <span class="comment">//</span></span><br><span class="line">            <span class="string">&#x27;age&#x27;</span> =&gt; <span class="variable">$row</span>[<span class="number">0</span>], <span class="string">&#x27;kind&#x27;</span> =&gt; <span class="variable">$row</span>[<span class="number">1</span>], <span class="string">&#x27;remark&#x27;</span> =&gt; <span class="variable">$row</span>[<span class="number">3</span>]</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>將 VaccinationImport 對像傳遞給 Excel::import()方法，將告訴包如何導入作為第二個參數傳遞的文件，第二個參數的文件就是上面程式碼下載下來的 csv 檔案放置位置。</p><p>該文件應該位於您的默認文件系統磁盤中（參考資料 config/filesystems.php）。</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">import</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 我沒有讓它找默認的，讓他尋找resource資料夾底下檔案</span></span><br><span class="line">    Excel::import(<span class="keyword">new</span> VaccinationImport, resource_path(<span class="string">&#x27;/download/file.csv&#x27;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="功能合併新增排程"><a href="#功能合併新增排程" class="headerlink" title="功能合併新增排程"></a>功能合併新增排程</h2><p>在 cmd 輸入以下指令，創建 command 檔案，算是一個可以自己寫命令(shell)的檔案</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php artisan make:command DownloadCSV</span><br></pre></td></tr></table></figure><p>接著在 DownloadCSV.php 中修改</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Console</span>\<span class="title">Commands</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Console</span>\<span class="title">Command</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Imports</span>\<span class="title">VaccinationImport</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Maatwebsite</span>\<span class="title">Excel</span>\<span class="title">Facades</span>\<span class="title">Excel</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DownloadCSV</span> <span class="keyword">extends</span> <span class="title">Command</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The name and signature of the console command.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$signature</span> = <span class="string">&#x27;download:vaccination&#x27;</span>;  <span class="comment">// 定義一個命令</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The console command description.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$description</span> = <span class="string">&#x27;排程自動下載資料，對比資料庫寫入&#x27;</span>;  <span class="comment">// 一些介紹</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a new command instance.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute the console command.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span>(<span class="params"></span>) // 主要程式碼</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;download(); <span class="comment">// 下載外部csv</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;import(); <span class="comment">// 對比資料庫更新及新增</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$client</span> = <span class="keyword">new</span> \GuzzleHttp\Client();</span><br><span class="line">        <span class="variable">$client</span>-&gt;get(<span class="string">&#x27;https:/example/example.csv&#x27;</span>, [<span class="string">&#x27;save_to&#x27;</span> =&gt; resource_path() . <span class="string">&#x27;/download/file.csv&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> response(<span class="number">200</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">import</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Excel::import(<span class="keyword">new</span> VaccinationImport, resource_path(<span class="string">&#x27;/download/file.csv&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改完成接下來到 app/Console/Kernel.php</p><p>修改及導入命令程式碼</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Console</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">App</span>\<span class="title">Console</span>\<span class="title">Commands</span>\<span class="title">DownloadCSV</span>; <span class="comment">// 導入</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Console</span>\<span class="title">Scheduling</span>\<span class="title">Schedule</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>\<span class="title">Kernel</span> <span class="title">as</span> <span class="title">ConsoleKernel</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Kernel</span> <span class="keyword">extends</span> <span class="title">ConsoleKernel</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The Artisan commands provided by your application.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$commands</span> = [</span><br><span class="line">        DownloadCSV::class</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define the application&#x27;s command schedule.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  \Illuminate\Console\Scheduling\Schedule  $schedule</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 定義要排程的指令或流程</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">schedule</span>(<span class="params">Schedule <span class="variable">$schedule</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 這邊就會跑command檔案handle函式</span></span><br><span class="line">        <span class="comment">// 設定為一個小時跑一次</span></span><br><span class="line">        <span class="variable">$schedule</span>-&gt;command(<span class="string">&#x27;download:vaccination&#x27;</span>)-&gt;hourly();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Register the commands for the application.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">commands</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/Commands&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">require</span> base_path(<span class="string">&#x27;routes/console.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程式碼部分就算完成了，接下來就是要設定排程工作</p><p>我是在 Linux 上面做開發，如要要讓它排程就要加入 CronJob</p><p>在 Linux 上輸入</p><p><code>crontab -e</code></p><p>按 i 編輯，輸入以下這行，它是告訴這個 package 每一分鐘 run 一次<code>php artisan schedule:run</code> 就是跑排程的意思。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * cd /path-to-your-project &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><code>path-to-your-project</code>改成你的專案路徑</p><p>輸入完畢按下 esc，然後輸入:wq 離開並儲存，跑出以下這行表示成功拉</p><p><code>crontab: installing new crontab</code></p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><p>更多相關排程時間參考<a href="https://laravel.com/docs/8.x/scheduling#schedule-frequency-options">這裡</a></p><p>更多排程相關資料請參照<a href="https://laravel.com/docs/8.x/scheduling">laravel Task Scheduling 文檔</a></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解決Laravel 讀取不到.env檔案中的參數</title>
      <link href="/2021/09/10/laravel_can_not_read.env/"/>
      <url>/2021/09/10/laravel_can_not_read.env/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="解決-Laravel-讀取不到-env-檔案中的參數"><a href="#解決-Laravel-讀取不到-env-檔案中的參數" class="headerlink" title="解決 Laravel 讀取不到.env 檔案中的參數"></a>解決 Laravel 讀取不到.env 檔案中的參數</h1><p>CMD Run</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">composer dump-autoload</span><br><span class="line">php artisan cache:clear</span><br><span class="line">php artisan config:clear</span><br><span class="line">php artisan view:clear</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel目錄結構</title>
      <link href="/2021/09/10/laravel_folder/"/>
      <url>/2021/09/10/laravel_folder/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-目錄結構"><a href="#Laravel-目錄結構" class="headerlink" title="Laravel 目錄結構"></a>Laravel 目錄結構</h1><p>先來說說各個目錄及資料夾裡面放置檔案，並沒有強制規定</p><h2 id="根目錄"><a href="#根目錄" class="headerlink" title="根目錄"></a>根目錄</h2><h4 id="app-目錄"><a href="#app-目錄" class="headerlink" title="app 目錄"></a>app 目錄</h4><p>app 資料夾都是應用程式的核心程式碼，大部分程式碼都放在這。</p><h4 id="Bootstarp-目錄"><a href="#Bootstarp-目錄" class="headerlink" title="Bootstarp 目錄"></a>Bootstarp 目錄</h4><p>bootstrap 目錄包含的檔案用來啟動框架和設定自動載入；以及包含一個 cache 資料夾，其中內有框架對效能最佳化所產生的檔案，例如 route 和 services 的快取檔案。</p><h4 id="Config-目錄"><a href="#Config-目錄" class="headerlink" title="Config 目錄"></a>Config 目錄</h4><p>config 目錄底下包含所有應用程式的配置檔案。</p><h4 id="Database-目錄"><a href="#Database-目錄" class="headerlink" title="Database 目錄"></a>Database 目錄</h4><p>裡面放置資料庫遷移檔案以及填充檔案</p><h4 id="Pulic-目錄"><a href="#Pulic-目錄" class="headerlink" title="Pulic 目錄"></a>Pulic 目錄</h4><p>public 目錄存放著<code>index.php</code>，此檔案是應用程式的 HTTP 請求入口點。還包含了前端資源，如圖片，JavaScript 和 css</p><h4 id="Resources-目錄"><a href="#Resources-目錄" class="headerlink" title="Resources 目錄"></a>Resources 目錄</h4><p>目錄包含要使用的 view，原始資源檔(LESS,SASS,CoffeeScript)以及語言檔</p><h4 id="Routes-目錄"><a href="#Routes-目錄" class="headerlink" title="Routes 目錄"></a>Routes 目錄</h4><p>這個目錄包含所有路由定義，laravel 有預設三個路由檔案，<code>web.php</code>，<code>api.php</code>，<code>console.php</code>。</p><p><code>web.php</code>裡面定義的路由都會被<code>RouteServiceProvider</code>分配到 web 的中介層(middleware)，因此會具備 Session、CSRF 防護以及 Cookie 加密功能，如果應用程式無需提供無狀態的、RESTful 風格的 API，則所有的路由都會定義在 <code>web.php</code> 檔案中。</p><p><code>api.php</code> 檔案裡定義的路由都會在 RouteServiceProvider 中被指配到 api 中介層群組，具備頻率限制功能，這些路由是無狀態的，所以經由這些路由進入應用程式需要 token 進行認證，並且不能訪問 Session 狀態。</p><p><code>console.php</code> 檔案用於定義所有基於閉包的控制台指令，每個閉包都被繫結到一個控制台指令並且允許與指令列 IO 方法進行互動，儘管這個檔案並不定義 HTTP 路由，但是它定義了基於指令列的應用程式入口（路由）。</p><h4 id="Storage-目錄"><a href="#Storage-目錄" class="headerlink" title="Storage 目錄"></a>Storage 目錄</h4><p>storage 目錄包含編譯後的 Blade 模板、基於檔案的 session、檔案快取和其它框架生成的檔案。底下資料夾分隔成 app、framework，及 logs 目錄。app 目錄可用於儲存應用程式使用的任何檔案。framework 目錄被用於儲存框架生成的檔案及快取。最後，logs 目錄包含了應用程式的日誌檔案。</p><p><code>storage/app/public</code> 可以用來存放使用者上傳檔案（例如個人大頭照）。為了能公開訪問，需要建立 <code>public/storage</code> 連結（symbolic link），然後指到 <code>storage/app/public</code> 這個資料夾，你可以使用 <code>php artisan storage:link</code> 來建立連結。</p><h4 id="Tests-目錄"><a href="#Tests-目錄" class="headerlink" title="Tests 目錄"></a>Tests 目錄</h4><p>tests 目錄包含自動化測試的檔案。有預設一個現成的 PHPUnit 範例。每一個測試類都需要新增 Test 字首，你可以使用 phpunit 或者 php vendor/bin/phpunit 指令來執行測試。</p><h4 id="Vendor-目錄"><a href="#Vendor-目錄" class="headerlink" title="Vendor 目錄"></a>Vendor 目錄</h4><p>vendor 目錄包含你的 Composer 依賴模組，套件檔案都放這。</p><h2 id="App-目錄"><a href="#App-目錄" class="headerlink" title="App 目錄"></a>App 目錄</h2><p>在 app 目錄中的很多類別都可以透過 Artisan 指令產生，要檢視所有有效的指令，可以在終端機中執行 <code>php artisan list make</code> 指令。</p><h4 id="Console-目錄"><a href="#Console-目錄" class="headerlink" title="Console 目錄"></a>Console 目錄</h4><p>Console 目錄包含應用程式所有自定義的 Artisan 指令，這些指令類別可以使用 make:command 指令產生。</p><h4 id="Events-目錄"><a href="#Events-目錄" class="headerlink" title="Events 目錄"></a>Events 目錄</h4><p>Events 目錄預設不存在，會在你使用 event:generate 或 make:event 指令以後才會被建立。此 Events 目錄是用來放置事件類別的。</p><h4 id="Exceptions-目錄"><a href="#Exceptions-目錄" class="headerlink" title="Exceptions 目錄"></a>Exceptions 目錄</h4><p>Exceptions 目錄包含應用程式的異常處理程序，同時也是個處置應用程式丟擲異常的好位置。如果你想自定義異常的記錄和渲染，你應該修改此目錄下的 Handler 類別。</p><h4 id="Http-目錄"><a href="#Http-目錄" class="headerlink" title="Http 目錄"></a>Http 目錄</h4><p>Http 目錄包含了控制器、中介層以及表單請求等，幾乎所有進入應用程式的請求處理都放在這裡。</p><h4 id="Jobs-目錄"><a href="#Jobs-目錄" class="headerlink" title="Jobs 目錄"></a>Jobs 目錄</h4><p>該目錄預設不存在，可以通過執行 make:job 指令建立，Jobs 目錄用於存放佇列任務，應用程式中的任務可以被佇列化，也可以在當前請求生命週期內同步執行。同步執行的任務有時也被看作指令，因為它們實現了命令模式。</p><h4 id="Listeners-目錄"><a href="#Listeners-目錄" class="headerlink" title="Listeners 目錄"></a>Listeners 目錄</h4><p>這個目錄預設不存在，可以通過執行 event:generate 和 make:listener 指令建立。Listeners 目錄包含處理事件的類別（事件監聽器），事件監聽器接收一個事件並提供對該事件發生後的響應邏輯，例如，UserRegistered 事件可以被 SendWelcomeEmail 監聽器處理。</p><h4 id="Mail-目錄"><a href="#Mail-目錄" class="headerlink" title="Mail 目錄"></a>Mail 目錄</h4><p>這個目錄預設不存在，但是可以通過執行 make:mail 指令產生，Mail 目錄包含郵件傳送類別，郵件物件允許你在一個地方封裝構建郵件所需的所有業務邏輯，然後使用 Mail::send 方法傳送郵件。</p><h4 id="Notifications-目錄"><a href="#Notifications-目錄" class="headerlink" title="Notifications 目錄"></a>Notifications 目錄</h4><p>這個目錄預設不存在，可以通過執行 make:notification 指令建立， Notifications 目錄包含應用程式傳送的所有通知。</p><h4 id="Policies-目錄"><a href="#Policies-目錄" class="headerlink" title="Policies 目錄"></a>Policies 目錄</h4><p>這個目錄預設不存在，可以通過執行 make:policy 指令來建立， Policies 目錄包含了所有的授權策略類別，策略用於判斷某個使用者是否有許可權去訪問指定資源。</p><h4 id="Providers-目錄"><a href="#Providers-目錄" class="headerlink" title="Providers 目錄"></a>Providers 目錄</h4><p>Providers 目錄包含應用程式的服務提供者。服務提供者在啟動應用程式過程中繫結服務到容器、註冊事件，以及執行其他任務，為即將到來的請求處理做準備。</p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 路由</title>
      <link href="/2021/09/10/laravel_route/"/>
      <url>/2021/09/10/laravel_route/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-路由"><a href="#Laravel-路由" class="headerlink" title="Laravel 路由"></a>Laravel 路由</h1><h2 id="基本路由"><a href="#基本路由" class="headerlink" title="基本路由"></a>基本路由</h2><p>首先看到 rotues 資料夾裡的 web.php，會看到這些程式碼</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">// 使用get方法請求</span></span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;welcome&#x27;</span>); <span class="comment">// 回傳view給他</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>view 的位置就放在<code>resources\views\welcome.blade.php</code></p><p>接下來說說來說說基本路由<br>Laravel 的路由只接受一個 URI 和一個 Closure(閉包)</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;foo&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World&#x27;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>laravel 可以使用所有 HTTP 的方法</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::post(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::put(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::patch(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::delete(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br><span class="line">Route::options(<span class="variable">$uri</span>, <span class="variable">$callback</span>);</span><br></pre></td></tr></table></figure><p>可能你這個路由可以響應多個 HTTP 的請求，可以使用 match，或者任何請求都可以就使用 any</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::match([<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;post&#x27;</span>], <span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::any(<span class="string">&#x27;foo&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果有將路由指向任何 HTML 表單 POST，PUT 或 DELETE 放在<code>web.php</code>中，應當包括 CSRF 令牌字段。否則，請求將被拒絕。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">action</span>=<span class="string">&quot;/profile&quot;</span>&gt;</span>&#123;&#123; csrf_field() &#125;&#125; ...<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="路由參數"><a href="#路由參數" class="headerlink" title="路由參數"></a>路由參數</h2><h3 id="所需參數"><a href="#所需參數" class="headerlink" title="所需參數"></a>所需參數</h3><p>有時需要捕捉路由中的 URI 字段，可以通過以下方式實現</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;User: <span class="subst">$id</span>&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如下圖所示:<br><img src="https://i.imgur.com/rIkt6kb.jpg" alt=""></p><p>可以根據自己的想法來定義更多的路線參數</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;posts/&#123;post&#125;/comments/&#123;comment&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$postId</span>, <span class="variable">$commentId</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="可選參數"><a href="#可選參數" class="headerlink" title="可選參數"></a>可選參數</h3><p>有時可能需要指定一個路由參數，但將該路由參數的存在設為可選。您可以通過?在參數名稱後放置一個標記來實現。確保給路由對應的變量一個默認值：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;name?&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span> = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;user/&#123;name?&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span> = <span class="string">&#x27;John&#x27;</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$name</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="正規表達法約束"><a href="#正規表達法約束" class="headerlink" title="正規表達法約束"></a>正規表達法約束</h3><p>您可以使用 where 路由實例上的方法來限制路由參數的格式。該 where 方法接受參數的名稱和定義參數應如何約束的正則表達式：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;name&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;[A-Za-z]+&#x27;</span>); <span class="comment">// 他就會找出$name這個參數，符合規則的字段</span></span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line"></span><br><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;/&#123;name&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span>, <span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;where([<span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;[0-9]+&#x27;</span>, <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;[a-z]+&#x27;</span>]);</span><br></pre></td></tr></table></figure><h4 id="全局約束"><a href="#全局約束" class="headerlink" title="全局約束"></a>全局約束</h4><p>如果您希望路由參數始終受給定正則表達式的約束，則可以使用該 pattern 方法。您應該在<code>boot</code>您的方法中定義這些模式<code>RouteServiceProvider</code>：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Define your route model bindings, pattern filters, etc.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boot</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Route::pattern(<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;[0-9]+&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">parent</span>::boot();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦定義了模式，它就會自動應用於使用該參數名稱的所有路由：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Only executed if &#123;id&#125; is numeric...</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="命名路由"><a href="#命名路由" class="headerlink" title="命名路由"></a>命名路由</h2><p>命名路由允許為特定路由方便地生成 URL 或重定向。您可以通過將 name 方法鏈接到路由定義來為路由指定名稱：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/profile&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;name(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure><p>您還可以為控制器操作指定路由名稱：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/profile&#x27;</span>, <span class="string">&#x27;UserController@showProfile&#x27;</span>)-&gt;name(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure><p>生成命名路由的 URL</p><p>為給定路由指定名稱後，您可以在通過全局 route 函數生成 URL 或重定向時使用該路由的名稱：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Generating URLs...</span></span><br><span class="line"><span class="variable">$url</span> = route(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Generating Redirects...</span></span><br><span class="line"><span class="keyword">return</span> redirect()-&gt;route(<span class="string">&#x27;profile&#x27;</span>);</span><br></pre></td></tr></table></figure><p>如果命名路由定義了參數，您可以將參數作為第二個參數傳遞給 route 函數。給定的參數將自動插入到 URL 的正確位置：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;user/&#123;id&#125;/profile&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">&#125;)-&gt;name(<span class="string">&#x27;profile&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$url</span> = route(<span class="string">&#x27;profile&#x27;</span>, [<span class="string">&#x27;id&#x27;</span> =&gt; <span class="number">1</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用vscode Code Runner 跑JS程式碼，出現亂碼問題</title>
      <link href="/2021/09/10/vscode_coderunner/"/>
      <url>/2021/09/10/vscode_coderunner/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用-vscode-Code-Runner-跑-JS-程式碼，出現亂碼問題"><a href="#使用-vscode-Code-Runner-跑-JS-程式碼，出現亂碼問題" class="headerlink" title="使用 vscode Code Runner 跑 JS 程式碼，出現亂碼問題"></a>使用 vscode Code Runner 跑 JS 程式碼，出現亂碼問題</h1><p>問題如下圖:</p><p><img src="https://i.imgur.com/m2pEvA8.jpg" alt=""></p><p>解決方法:</p><p>安裝 node.js<br><a href="https://nodejs.org/en/">官方連結</a></p><hr><p>code runner 套件下載連結</p><p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner">code runner</a></p>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jquery網頁離開前向使用者確認</title>
      <link href="/2021/09/09/JS_beforeunload/"/>
      <url>/2021/09/09/JS_beforeunload/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Jquery-網頁離開前向使用者確認"><a href="#Jquery-網頁離開前向使用者確認" class="headerlink" title="Jquery 網頁離開前向使用者確認"></a>Jquery 網頁離開前向使用者確認</h1><p>窗口的 onbeforeunload 屬性可以設置為一個函數，這個函數返回一個字符串，該字符串在對話框中顯示給用戶，以確認用戶想要離開。這是為了防止用戶端在使用過程中丟失數據。不過它經常被用來欺騙用戶。</p><p>所以從 Chrome 51 開始，將不再向用戶顯示自定義字符串。Chrome 仍會顯示一個對話框以防止用戶丟失數據，但其內容將由瀏覽器設置而不是網頁設置。</p><p>通過此更改，Chrome 將與 Safari 9.1 及更高版本以及 Firefox 4 及更高版本保持一致</p><p>以下範例在大多網頁都可以執行</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).on(<span class="string">&quot;beforeunload&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">//為防止詐騙已變更為瀏覽器預設</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;你確定要離開嗎&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">window</span>).on(<span class="string">&quot;unload&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  logout();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>如果有些地方不想經過確認，需要直接跳轉可以關掉</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).unbind(<span class="string">&quot;beforeunload&quot;</span>); <span class="comment">// 關閉離開頁面提示</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
            <tag> Jquery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Laravel 使用 google place api輸入地址取得經緯度</title>
      <link href="/2021/09/08/laravel_google_place_api/"/>
      <url>/2021/09/08/laravel_google_place_api/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Laravel-使用-google-place-api-輸入地址取得經緯度"><a href="#Laravel-使用-google-place-api-輸入地址取得經緯度" class="headerlink" title="Laravel 使用 google place api 輸入地址取得經緯度"></a>Laravel 使用 google place api 輸入地址取得經緯度</h1><h2 id="註冊和啟用-PLACE-API"><a href="#註冊和啟用-PLACE-API" class="headerlink" title="註冊和啟用 PLACE API"></a>註冊和啟用 PLACE API</h2><p>先到 GCP 註冊，前三個月免費<br>到<a href="https://console.cloud.google.com/marketplace/product/google/places-backend.googleapis.com?q=search&amp;referrer=search&amp;project=master-scope-341701">這裡搜尋 PLACE API</a><br><img src="https://i.imgur.com/YTS0zid.jpg" alt=""></p><p>找到之後點選啟用<br><img src="https://i.imgur.com/c5PhDcb.jpg" alt=""></p><h2 id="創建金鑰"><a href="#創建金鑰" class="headerlink" title="創建金鑰"></a>創建金鑰</h2><p>點選 API 和服務-&gt;點選憑證-&gt;建立憑證-&gt;API 金鑰<br><img src="https://i.imgur.com/2RgNHXQ.jpg" alt=""><br>這樣子就建立成功囉</p><p>點選限制金鑰，可以將它選擇只用來使用 place api<br><img src="https://i.imgur.com/jp6Oz2t.jpg" alt=""></p><h2 id="撰寫程式碼"><a href="#撰寫程式碼" class="headerlink" title="撰寫程式碼"></a>撰寫程式碼</h2><p>創建一個 service 檔案，使用 Guzzle 來打 api</p><p><a href="https://guzzle-cn.readthedocs.io/zh_CN/latest/index.html">Guzzle Docs</a></p><p>可以按照想要搜尋資料放入<code>$inputType</code>，可以查找資料請查看文檔</p><h3 id="取得經緯度"><a href="#取得經緯度" class="headerlink" title="取得經緯度"></a>取得經緯度</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">App</span>\<span class="title">Http</span>\<span class="title">Services</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">GoogleMapService</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$client</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;client = <span class="keyword">new</span> Client();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取得經緯度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPlaceCoods</span>(<span class="params"><span class="variable">$address</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable">$input</span> = <span class="variable">$address</span>;  <span class="comment">// 輸入的地址</span></span><br><span class="line">            <span class="comment">// 搜尋取得名稱，營業時間，評價</span></span><br><span class="line">            <span class="variable">$inputType</span> = <span class="string">&quot;textquery&amp;fields=formatted_address%2Cname%2Crating%2Copening_hours%2Cgeometry&quot;</span>;</span><br><span class="line">            <span class="variable">$api_key</span> = env(<span class="string">&quot;GOOGLE_PLACE_API&quot;</span>); <span class="comment">// 將api key放到.env檔案，取出</span></span><br><span class="line">            <span class="variable">$url</span> = <span class="string">&quot;https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=<span class="subst">$input</span>&amp;inputtype=<span class="subst">$inputType</span>&amp;key=<span class="subst">$api_key</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$response</span> = <span class="keyword">$this</span>-&gt;client-&gt;request(<span class="string">&#x27;GET&#x27;</span>, <span class="variable">$url</span>); <span class="comment">// 打api</span></span><br><span class="line">            <span class="variable">$contents</span> = <span class="variable">$response</span>-&gt;getBody()-&gt;getContents();</span><br><span class="line">            <span class="variable">$contents</span> = json_decode(<span class="variable">$contents</span>, <span class="literal">TRUE</span>); <span class="comment">// 對json編碼</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Throwable</span> <span class="variable">$th</span>) &#123;</span><br><span class="line">            report(<span class="variable">$th</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$url</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判斷此地址有沒有經緯度或錯誤</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$contents</span>[<span class="string">&#x27;candidates&#x27;</span>][<span class="number">0</span>])) &#123;</span><br><span class="line">            <span class="keyword">return</span> response()-&gt;json(<span class="variable">$contents</span>[<span class="string">&#x27;candidates&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;geometry&#x27;</span>][<span class="string">&#x27;location&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="取得評論"><a href="#取得評論" class="headerlink" title="取得評論"></a>取得評論</h3><p>評論只能取到五比資料</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_reviews</span>(<span class="params"><span class="variable">$place_id</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$api_key</span> = env(<span class="string">&quot;GOOGLE_PLACE_API&quot;</span>);</span><br><span class="line">        <span class="variable">$fields</span> = <span class="string">&#x27;name%2Crating%2Cformatted_phone_number%2Creviews%2Cuser_ratings_total&#x27;</span>;</span><br><span class="line">        <span class="variable">$language</span> = <span class="string">&#x27;zh-TW&#x27;</span>;</span><br><span class="line">        <span class="variable">$url</span> = <span class="string">&quot;https://maps.googleapis.com/maps/api/place/details/json?fields=<span class="subst">$fields</span>&amp;place_id=<span class="subst">$place_id</span>&amp;key=<span class="subst">$api_key</span>&amp;language=<span class="subst">$language</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$response</span> = <span class="keyword">$this</span>-&gt;client-&gt;request(<span class="string">&#x27;GET&#x27;</span>, <span class="variable">$url</span>);</span><br><span class="line">        <span class="variable">$contents</span> = <span class="variable">$response</span>-&gt;getBody()-&gt;getContents();</span><br><span class="line">        <span class="variable">$contents</span> = json_decode(<span class="variable">$contents</span>, <span class="literal">TRUE</span>);</span><br><span class="line">        <span class="comment">// return $contents;</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$contents</span>[<span class="string">&#x27;status&#x27;</span>] == <span class="string">&#x27;OK&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable">$data</span>[<span class="string">&#x27;reviews&#x27;</span>] = <span class="variable">$contents</span>[<span class="string">&#x27;result&#x27;</span>][<span class="string">&#x27;reviews&#x27;</span>];</span><br><span class="line">            <span class="variable">$data</span>[<span class="string">&#x27;rating&#x27;</span>] = <span class="variable">$contents</span>[<span class="string">&#x27;result&#x27;</span>][<span class="string">&#x27;rating&#x27;</span>];</span><br><span class="line">            <span class="variable">$data</span>[<span class="string">&#x27;rating_count&#x27;</span>] = <span class="variable">$contents</span>[<span class="string">&#x27;result&#x27;</span>][<span class="string">&#x27;user_ratings_total&#x27;</span>];</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (\<span class="built_in">Throwable</span> <span class="variable">$th</span>) &#123;</span><br><span class="line">        report(<span class="variable">$th</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$url</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://developers.google.com/maps/documentation/places/web-service/search-find-place#maps_http_places_findplacefromtext_mca-txt">google place api docs</a></p>]]></content>
      
      
      <categories>
          
          <category> Laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL入門筆記</title>
      <link href="/2020/10/24/MySQL/"/>
      <url>/2020/10/24/MySQL/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MySQ-語法"><a href="#MySQ-語法" class="headerlink" title="MySQ 語法"></a>MySQ 語法</h1><p><hr></p><h3 id="DataBase和Table"><a href="#DataBase和Table" class="headerlink" title="DataBase和Table"></a>DataBase和Table</h3><p>刪掉database</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">drop</span> database &quot;database名稱&quot;;</span><br></pre></td></tr></table></figure><p>創建 database</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database &quot;database名稱&quot;;</span><br></pre></td></tr></table></figure><p>使用這個 database</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">use &quot;database名稱&quot;;</span><br></pre></td></tr></table></figure><h4 id="基本的-CRUD"><a href="#基本的-CRUD" class="headerlink" title="基本的 CRUD"></a>基本的 CRUD</h4><p>導入數據</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">source <span class="operator">/</span>Users<span class="operator">/</span>joe<span class="operator">/</span>Downloads<span class="operator">/</span>data.sql;</span><br></pre></td></tr></table></figure><p>data.sql<br>內容:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee(</span><br><span class="line">  id <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  first_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  last_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  title <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  salary <span class="keyword">DOUBLE</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  hire_date <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  notes TEXT,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (first_name, last_name, title, salary, hire_date) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">5500</span>, <span class="string">&#x27;2001-10-12&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;Software Architect&#x27;</span>, <span class="number">7200</span>, <span class="string">&#x27;2002-09-21&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;Database Administrator&#x27;</span>, <span class="number">6000</span>, <span class="string">&#x27;2012-08-29&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harry&#x27;</span>, <span class="string">&#x27;Clifford&#x27;</span>, <span class="string">&#x27;Database Administrator&#x27;</span>, <span class="number">6800</span>, <span class="string">&#x27;2015-12-10&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Eliza&#x27;</span>, <span class="string">&#x27;Clifford&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">4750</span>, <span class="string">&#x27;1998-10-19&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Nancy&#x27;</span>, <span class="string">&#x27;Newman&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">5100</span>, <span class="string">&#x27;2007-01-23&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Melinda&#x27;</span>, <span class="string">&#x27;Clifford&#x27;</span>, <span class="string">&#x27;Project Manager&#x27;</span>, <span class="number">8500</span>, <span class="string">&#x27;2013-10-29&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Chan&#x27;</span>, <span class="string">&#x27;Test Engineer&#x27;</span>, <span class="number">6500</span>, <span class="string">&#x27;2018-09-07&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;Software Architect&#x27;</span>, <span class="number">8000</span>, <span class="string">&#x27;2000-07-17&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="查看這個-database-有哪些-table"><a href="#查看這個-database-有哪些-table" class="headerlink" title="查看這個 database 有哪些 table"></a>查看這個 database 有哪些 table</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> tables</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_demo <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> employee       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> movie          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> test           <span class="operator">|</span></span><br></pre></td></tr></table></figure><h4 id="描述-table-有哪些屬性-desc-表格名稱"><a href="#描述-table-有哪些屬性-desc-表格名稱" class="headerlink" title="描述 table 有哪些屬性 desc 表格名稱"></a>描述 table 有哪些屬性 desc 表格名稱</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">desc</span> movie;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+--------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> Field          <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+--------------+------+-----+---------+----------------+</span></span><br><span class="line"><span class="operator">|</span> id             <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span> auto_increment <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> title          <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">100</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> title_year     <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> director_name  <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor_1_name   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> actor_2_name   <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> duration       <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> country        <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">50</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> content_rating <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>)  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gross          <span class="operator">|</span> <span class="type">bigint</span>(<span class="number">20</span>)   <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> imdb_score     <span class="operator">|</span> <span class="type">float</span>        <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>       <span class="operator">|</span>                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+--------------+------+-----+---------+----------------+</span></span><br></pre></td></tr></table></figure><h4 id="查看表格所有數據"><a href="#查看表格所有數據" class="headerlink" title="查看表格所有數據"></a>查看表格所有數據</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> Software Architect     <span class="operator">|</span>   <span class="number">7200</span> <span class="operator">|</span> <span class="number">2002</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span> <span class="number">2012</span><span class="number">-08</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span> <span class="number">2007</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer          <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> Software Architect     <span class="operator">|</span>   <span class="number">8000</span> <span class="operator">|</span> <span class="number">2000</span><span class="number">-07</span><span class="number">-17</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="WHERE-語句過濾"><a href="#WHERE-語句過濾" class="headerlink" title="WHERE 語句過濾"></a>WHERE 語句過濾</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name<span class="operator">=</span>&quot;Clifford&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="WHERE-兩個條件過濾"><a href="#WHERE-兩個條件過濾" class="headerlink" title="WHERE 兩個條件過濾"></a>WHERE 兩個條件過濾</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name<span class="operator">=</span>&quot;Clifford&quot; <span class="keyword">and</span> salary<span class="operator">=</span><span class="number">6800</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h4><p>INSERT INTO yourTABLEname (column1,column2)VALUES(新增項目 1,新增項目 2);<br>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee (first_name, last_name, title, salary, hire_date) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;Software Engineer&#x27;</span>, <span class="number">5500</span>, <span class="string">&#x27;2001-10-12&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h4><p>update 語句更新數據(先找到要更改資料，再更改比較不會亂掉)<br>!!!注意 update from “table 名子”; 是對整個 table 進行操作<br>update employee set salary=10000,(預更改 coulmn = “更改值”) where title=”Software Architect”;</p><p>更新成功</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> title<span class="operator">=</span>&quot;Software Architect&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+--------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title              <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+--------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> Software Architect <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2002</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> Software Architect <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2000</span><span class="number">-07</span><span class="number">-17</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+--------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><h4 id="刪除"><a href="#刪除" class="headerlink" title="刪除"></a>刪除</h4><p>delete 語句刪除數據<br>!!!注意 delete from “table 名子”; 是對整個 table 進行操作</p><p>刪除例句</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">delet <span class="keyword">from</span> employee <span class="keyword">where</span> title <span class="operator">=</span>&quot;Software Architect&quot;;</span><br></pre></td></tr></table></figure><h3 id="SQL-字符串相關處理方法"><a href="#SQL-字符串相關處理方法" class="headerlink" title="SQL 字符串相關處理方法"></a>SQL 字符串相關處理方法</h3><h4 id="字串拼接-SUBSTRING"><a href="#字串拼接-SUBSTRING" class="headerlink" title="字串拼接 SUBSTRING"></a>字串拼接 SUBSTRING</h4><p>字串拼接 CONCAT(“A”,”B”)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> concat(first_name,&quot;,&quot;,last_name) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> concat(first_name,&quot;,&quot;,last_name) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin,Jackman                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor,Edward                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian,Dickens                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry,Clifford                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza,Clifford                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy,Newman                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda,Clifford                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack,Chan                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley,Gilbert                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------------+</span></span><br></pre></td></tr></table></figure><p>字串合併取名為 fullname</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">select</span> concat(first_name,&quot;,&quot;,last_name) <span class="keyword">as</span> fullname <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> fullname         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin,Jackman    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor,Edward    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian,Dickens   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry,Clifford   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza,Clifford   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy,Newman     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda,Clifford <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack,Chan        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley,Gilbert   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br></pre></td></tr></table></figure><p>字串合併 CONCAT_WS CONCAT_WS(“這裡輸入拼接字符串”, first_name, last_name)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> CONCAT_WS(&quot;-&quot;,first_name,last_name) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> CONCAT_WS(&quot;-&quot;,first_name,last_name) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin<span class="operator">-</span>Jackman                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor<span class="operator">-</span>Edward                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian<span class="operator">-</span>Dickens                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry<span class="operator">-</span>Clifford                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza<span class="operator">-</span>Clifford                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy<span class="operator">-</span>Newman                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda<span class="operator">-</span>Clifford                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack<span class="operator">-</span>Chan                           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley<span class="operator">-</span>Gilbert                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------+</span></span><br></pre></td></tr></table></figure><h4 id="字串-SUBSTRING"><a href="#字串-SUBSTRING" class="headerlink" title="　字串 SUBSTRING"></a>　字串 SUBSTRING</h4><p>字串 SUBSTRING 可簡寫 SUBSTR</p><p>第一個字到第四</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">1</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">1</span>,<span class="number">4</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Hell                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br></pre></td></tr></table></figure><p>從第七個到結束</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;,<span class="number">7</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> Word                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br></pre></td></tr></table></figure><p>從後面數來三個</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;, <span class="number">-3</span>);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">SUBSTRING</span>(&quot;Hello Word&quot;, <span class="number">-3</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br><span class="line"><span class="operator">|</span> ord                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------+</span></span><br></pre></td></tr></table></figure><h4 id="REPLACE-REVERSE-and-CHAR-LENGTH"><a href="#REPLACE-REVERSE-and-CHAR-LENGTH" class="headerlink" title="REPLACE,REVERSE and CHAR_LENGTH"></a>REPLACE,REVERSE and CHAR_LENGTH</h4><h5 id="字符串取代-REPLACE"><a href="#字符串取代-REPLACE" class="headerlink" title="字符串取代 REPLACE"></a>字符串取代 REPLACE</h5><p>select REPLACE(“一段字串”,”想改變的字串”,”改變成甚麼”);</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> REPLACE(&quot;Hello World&quot;, &quot;World&quot;, &quot;MySQL&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> REPLACE(&quot;Hello World&quot;, &quot;World&quot;, &quot;MySQL&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Hello MySQL                              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------------------------+</span></span><br></pre></td></tr></table></figure><h5 id="字符反轉-REVERSE"><a href="#字符反轉-REVERSE" class="headerlink" title="字符反轉 REVERSE"></a>字符反轉 REVERSE</h5><p>select REVERSE(“要反轉字串”);</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> REVERSE(&quot;Hello World&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> REVERSE(&quot;Hello World&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> dlroW olleH            <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br></pre></td></tr></table></figure><h5 id="查看字符串幾個字-CHAR-LENGTH"><a href="#查看字符串幾個字-CHAR-LENGTH" class="headerlink" title="查看字符串幾個字 CHAR_LENGTH"></a>查看字符串幾個字 CHAR_LENGTH</h5><p>select CHAR_LENGTH(“字串”);</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">CHAR_LENGTH</span>(&quot;Hello World&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">CHAR_LENGTH</span>(&quot;Hello World&quot;) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br><span class="line"><span class="operator">|</span>                         <span class="number">11</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------------------+</span></span><br></pre></td></tr></table></figure><h5 id="大小寫轉換-LOWER-AND-UPPER"><a href="#大小寫轉換-LOWER-AND-UPPER" class="headerlink" title="大小寫轉換 LOWER AND UPPER"></a>大小寫轉換 LOWER AND UPPER</h5><p>字串變大寫 UPPER</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">UPPER</span>(&quot;Hello MySQL&quot;);</span><br></pre></td></tr></table></figure><p>字串變小寫 LOWER</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">LOWER</span>(&quot;Hello MySQL&quot;);</span><br></pre></td></tr></table></figure><p>大小寫範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">UPPER</span>(first_name) <span class="keyword">as</span> first_name, <span class="built_in">UPPER</span>(last_name) <span class="keyword">as</span> last_name <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> ROBIN      <span class="operator">|</span> JACKMAN   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> TAYLOR     <span class="operator">|</span> EDWARD    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> VIVIAN     <span class="operator">|</span> DICKENS   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HARRY      <span class="operator">|</span> CLIFFORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ELIZA      <span class="operator">|</span> CLIFFORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> NANCY      <span class="operator">|</span> NEWMAN    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> MELINDA    <span class="operator">|</span> CLIFFORD  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> JACK       <span class="operator">|</span> CHAN      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> HARLEY     <span class="operator">|</span> GILBERT   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+</span></span><br></pre></td></tr></table></figure><h3 id="select-結果的進一步處理"><a href="#select-結果的進一步處理" class="headerlink" title="select 結果的進一步處理"></a>select 結果的進一步處理</h3><h4 id="order-by-對結果進行排序"><a href="#order-by-對結果進行排序" class="headerlink" title="order by 對結果進行排序"></a>order by 對結果進行排序</h4><p>將資料庫資料依據某項要求排序 order by(默認升序) + desc(降序)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> salary;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span> <span class="number">2007</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span> <span class="number">2012</span><span class="number">-08</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer          <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> Software Architect     <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2002</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">9</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> Software Architect     <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span> <span class="number">2000</span><span class="number">-07</span><span class="number">-17</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><p>選擇第三個 column 進行排序</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> first_name, last_name , salary <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> salary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br></pre></td></tr></table></figure><p>先排二在排一</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> first_name, last_name , salary <span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span>,<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> salary <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br><span class="line"><span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span>   <span class="number">6000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span>  <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+-----------+--------+</span></span><br></pre></td></tr></table></figure><h4 id="LIMIT-限制返回結果進行排序"><a href="#LIMIT-限制返回結果進行排序" class="headerlink" title="LIMIT 限制返回結果進行排序"></a>LIMIT 限制返回結果進行排序</h4><p>限制數據返回 + limit 數量</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>限制 index 幾到幾</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit <span class="number">2</span>,<span class="number">4</span>;</span><br></pre></td></tr></table></figure><p>限制 index 多少到最後一個</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee limit <span class="number">2</span>,<span class="number">18446744073709551615</span>;</span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/doc/refman/5.7/en/select.html">MySQL limit 補充連結</a></p><h4 id="LIKE-進行字符串搜索過濾"><a href="#LIKE-進行字符串搜索過濾" class="headerlink" title="LIKE 進行字符串搜索過濾"></a>LIKE 進行字符串搜索過濾</h4><p>LIKE 模糊字串搜尋 + LIKE “字串加%” ， %=甚麼都可</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name <span class="keyword">LIKE</span> &quot;C%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title                  <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harry      <span class="operator">|</span> Clifford  <span class="operator">|</span> Database Administrator <span class="operator">|</span>   <span class="number">6800</span> <span class="operator">|</span> <span class="number">2015</span><span class="number">-12</span><span class="number">-10</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> Eliza      <span class="operator">|</span> Clifford  <span class="operator">|</span> Software Engineer      <span class="operator">|</span>   <span class="number">4750</span> <span class="operator">|</span> <span class="number">1998</span><span class="number">-10</span><span class="number">-19</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> Melinda    <span class="operator">|</span> Clifford  <span class="operator">|</span> Project Manager        <span class="operator">|</span>   <span class="number">8500</span> <span class="operator">|</span> <span class="number">2013</span><span class="number">-10</span><span class="number">-29</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer          <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+------------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name <span class="keyword">LIKE</span> &quot;%n&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title             <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> Software Engineer <span class="operator">|</span>   <span class="number">5500</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> Nancy      <span class="operator">|</span> Newman    <span class="operator">|</span> Software Engineer <span class="operator">|</span>   <span class="number">5100</span> <span class="operator">|</span> <span class="number">2007</span><span class="number">-01</span><span class="number">-23</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> Jack       <span class="operator">|</span> Chan      <span class="operator">|</span> Test Engineer     <span class="operator">|</span>   <span class="number">6500</span> <span class="operator">|</span> <span class="number">2018</span><span class="number">-09</span><span class="number">-07</span> <span class="operator">|</span> <span class="keyword">NULL</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+-------+</span></span><br></pre></td></tr></table></figure><p>當知道長度為多少可以變成 + LIKE “____“;</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> last_name <span class="keyword">LIKE</span> &quot;____&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+---------------+--------+------------+-------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> title         <span class="operator">|</span> salary <span class="operator">|</span> hire_date  <span class="operator">|</span> notes <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+-------------------+--------+------------+---+</span></span><br></pre></td></tr></table></figure><p>當要找的字串包含 “%” , “_“加上\<br>select * from 表格名 where first<em>name LIKE “%\%\</em>_“;</p><h4 id="count-對結果進行比較"><a href="#count-對結果進行比較" class="headerlink" title="count 對結果進行比較"></a>count 對結果進行比較</h4><p>計算資料表有多少筆資料 COUNT(* 或其他 column)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">9</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br></pre></td></tr></table></figure><h4 id="distinct-統計唯一値"><a href="#distinct-統計唯一値" class="headerlink" title="distinct 統計唯一値"></a>distinct 統計唯一値</h4><p>計算這個 column 有幾種 DISTINCT(不同)</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> title <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> title                  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br><span class="line"><span class="operator">|</span> Software Engineer      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Architect     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Database Administrator <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Project Manager        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Test Engineer          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+</span></span><br></pre></td></tr></table></figure><p>利用 CONUT 計算</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">COUNT</span>(<span class="keyword">distinct</span> title) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">COUNT</span>(<span class="keyword">distinct</span> title) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span>                     <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br></pre></td></tr></table></figure><h4 id="GROUP-BY-數據整合"><a href="#GROUP-BY-數據整合" class="headerlink" title="GROUP BY 數據整合"></a>GROUP BY 數據整合</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> title,<span class="built_in">count</span>(first_name) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> title;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> title                  <span class="operator">|</span> <span class="built_in">count</span>(first_name) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> Database Administrator <span class="operator">|</span>                 <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Project Manager        <span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Architect     <span class="operator">|</span>                 <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Engineer      <span class="operator">|</span>                 <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Test Engineer          <span class="operator">|</span>                 <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------------+</span></span><br></pre></td></tr></table></figure><h4 id="MAX-和-MIN-球最大最小值"><a href="#MAX-和-MIN-球最大最小值" class="headerlink" title="MAX 和 MIN 球最大最小值"></a>MAX 和 MIN 球最大最小值</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(salary) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">max</span>(salary) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br></pre></td></tr></table></figure><p>結合 group by</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> title, <span class="built_in">max</span>(salary) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> title;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> title                  <span class="operator">|</span> <span class="built_in">max</span>(salary) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------+</span></span><br><span class="line"><span class="operator">|</span> Database Administrator <span class="operator">|</span>        <span class="number">6800</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Project Manager        <span class="operator">|</span>        <span class="number">8500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Architect     <span class="operator">|</span>       <span class="number">10000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Software Engineer      <span class="operator">|</span>        <span class="number">5500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Test Engineer          <span class="operator">|</span>        <span class="number">6500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="SUM-和-AVG-求和平均值"><a href="#SUM-和-AVG-求和平均值" class="headerlink" title="SUM 和 AVG 求和平均值"></a>SUM 和 AVG 求和平均值</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(salary), <span class="built_in">avg</span>(salary) <span class="keyword">from</span> employee;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">sum</span>(salary) <span class="operator">|</span> <span class="built_in">avg</span>(salary)       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">63150</span> <span class="operator">|</span> <span class="number">7016.666666666667</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+-------------------+</span></span><br></pre></td></tr></table></figure><p>使用 max, min, sum, avg 不可這樣寫<br>select sum(salary), title from employee;<br>會報錯</p><h4 id="HAVING"><a href="#HAVING" class="headerlink" title="HAVING"></a>HAVING</h4><p>（✗）select title,count(<em>) from employee group by title where title=”Test Engineer;<br>(◯) select title,count(</em>) from employee where title=”Test Engineer group by title;</p><p>如果要想在聚合(group by)後過濾，要使用 HAVING</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> title,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> employee <span class="keyword">group</span> <span class="keyword">by</span> title <span class="keyword">having</span> title<span class="operator">=</span>&quot;Test Engineer&quot;;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+----------+</span></span><br><span class="line"><span class="operator">|</span> title         <span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+----------+</span></span><br><span class="line"><span class="operator">|</span> Test Engineer <span class="operator">|</span>        <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+----------+</span></span><br></pre></td></tr></table></figure><h3 id="DATA-TYPE-之數值類型"><a href="#DATA-TYPE-之數值類型" class="headerlink" title="DATA TYPE 之數值類型"></a>DATA TYPE 之數值類型</h3><h4 id="Numeric-Tyoe"><a href="#Numeric-Tyoe" class="headerlink" title="Numeric Tyoe"></a>Numeric Tyoe</h4><h5 id="1-整數-絕對值-Integer-Types-Exact-Value-INTEGER-INT-SMALLINT-TINYINT-MEDIUMINT-BIGINT"><a href="#1-整數-絕對值-Integer-Types-Exact-Value-INTEGER-INT-SMALLINT-TINYINT-MEDIUMINT-BIGINT" class="headerlink" title="1. 整數(絕對值) Integer Types (Exact Value) - INTEGER,INT,SMALLINT,TINYINT,MEDIUMINT,BIGINT"></a>1. 整數(絕對值) Integer Types (Exact Value) - INTEGER,INT,SMALLINT,TINYINT,MEDIUMINT,BIGINT</h5><p>如果要使用到 UNSIGNED 要在新增時加入，莫認為 Signed<br>範例:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table test(a TINYINT UNSIGNED , b SMALLINT);</span><br></pre></td></tr></table></figure><h5 id="2-定點數-小數點後位數固定-Fixed-Point-Types-Exact-Value-DECIMAL-NUMERIC"><a href="#2-定點數-小數點後位數固定-Fixed-Point-Types-Exact-Value-DECIMAL-NUMERIC" class="headerlink" title="2. 定點數(小數點後位數固定) Fixed-Point Types(Exact Value) - DECIMAL,NUMERIC"></a>2. 定點數(小數點後位數固定) Fixed-Point Types(Exact Value) - DECIMAL,NUMERIC</h5><p>salary DECIMAL(5,2)第一個參數是總共幾位數，第二個參數是指小數點後有幾位，小數點超過會四捨五入<br>範例: -999.99 ~ 999.99</p><h5 id="3-浮點數-無法精確表示-Floating-Point-Types-Approximate-Value-FLOAT-4-bytes-DOUBLE-8-bytes"><a href="#3-浮點數-無法精確表示-Floating-Point-Types-Approximate-Value-FLOAT-4-bytes-DOUBLE-8-bytes" class="headerlink" title="3. 浮點數(無法精確表示) Floating-Point Types(Approximate Value) - FLOAT(4 bytes),DOUBLE(8 bytes)"></a>3. 浮點數(無法精確表示) Floating-Point Types(Approximate Value) - FLOAT(4 bytes),DOUBLE(8 bytes)</h5><p>float(range,小數點後位數)，BIT(M),BIT 由 0 和 1 組成,M can range from 1 to 64。</p><h5 id="4-二進位數位-Bit-Value-Type-BIT"><a href="#4-二進位數位-Bit-Value-Type-BIT" class="headerlink" title="4. 二進位數位 Bit-Value Type - BIT"></a>4. 二進位數位 Bit-Value Type - BIT</h5><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> test6(a BIT(<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test6 <span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> test6 <span class="keyword">values</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--因為輸出是十進位所以不會顯示</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test6;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> a    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--用加0的方式出現</span></span><br><span class="line"><span class="keyword">select</span> a<span class="operator">+</span><span class="number">0</span> <span class="keyword">from</span> test6;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span> a<span class="operator">+</span><span class="number">0</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--這樣子就可以輸出二進制</span></span><br><span class="line"><span class="comment">--bin二進制，oct八進制，hex十六進制。</span></span><br><span class="line"><span class="keyword">select</span> bin(a<span class="operator">+</span><span class="number">0</span>) <span class="keyword">from</span> test6;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> bin(a<span class="operator">+</span><span class="number">0</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">10</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Data-and-Time-Type"><a href="#Data-and-Time-Type" class="headerlink" title="Data and Time Type"></a>Data and Time Type</h3><h5 id="1-DATE-“YYYY-MM-DD”"><a href="#1-DATE-“YYYY-MM-DD”" class="headerlink" title="1. DATE : “YYYY-MM-DD”"></a>1. DATE : “YYYY-MM-DD”</h5><h5 id="2-TIME-“HH-MM-SS”-“12-10”默認為-12-小時-10-分，”14”默認為-14-秒，”1210”默認為-12-分-10-秒"><a href="#2-TIME-“HH-MM-SS”-“12-10”默認為-12-小時-10-分，”14”默認為-14-秒，”1210”默認為-12-分-10-秒" class="headerlink" title="2. TIME : “HH:MM:SS” “12:10”默認為 12 小時 10 分，”14”默認為 14 秒，”1210”默認為 12 分 10 秒"></a>2. TIME : “HH:MM:SS” “12:10”默認為 12 小時 10 分，”14”默認為 14 秒，”1210”默認為 12 分 10 秒</h5><h5 id="3-YEAR-4-digit-string-number-in-the-range-1901-to-2155"><a href="#3-YEAR-4-digit-string-number-in-the-range-1901-to-2155" class="headerlink" title="3.YEAR : 4-digit string number in the range 1901 to 2155"></a>3.YEAR : 4-digit string number in the range 1901 to 2155</h5><h5 id="4-DATETIME-8bytes-“YYYY-MM-DD-HH-MM-SS”"><a href="#4-DATETIME-8bytes-“YYYY-MM-DD-HH-MM-SS”" class="headerlink" title="4. DATETIME(8bytes) : “YYYY-MM-DD HH:MM:SS”"></a>4. DATETIME(8bytes) : “YYYY-MM-DD HH:MM:SS”</h5><h5 id="5-TIMESTAMP-4bytes-range-“1907-01-01-00-00-01”UTC-to-“2038-01-19-03-14-07”UTC-依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改-TIMEZONE。"><a href="#5-TIMESTAMP-4bytes-range-“1907-01-01-00-00-01”UTC-to-“2038-01-19-03-14-07”UTC-依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改-TIMEZONE。" class="headerlink" title="5. TIMESTAMP(4bytes) : range “1907-01-01 00:00:01”UTC to “2038-01-19 03:14:07”UTC 依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改 TIMEZONE。"></a>5. TIMESTAMP(4bytes) : range “1907-01-01 00:00:01”UTC to “2038-01-19 03:14:07”UTC 依照時區改變，會隨著現在時間變化，可用來記錄資料修改時間，可更改 TIMEZONE。</h5><p>此時間是幾號</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select DAYOFMONYH(參數) from tablename;</span><br></pre></td></tr></table></figure><p>此時間是星期幾</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select DAYOFWEEK(參數) from tablename;</span><br></pre></td></tr></table></figure><p>此時間是此年第幾天</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select DAYOFYEAR(參數) from tablename;</span><br></pre></td></tr></table></figure><p>此時間是幾月</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select MONTHNAME(b) from demo;</span><br></pre></td></tr></table></figure><p>現在日期</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select CURDATE();</span><br></pre></td></tr></table></figure><p>現在時間</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select CURTIME();</span><br></pre></td></tr></table></figure><p>現在日期+時間</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> NOW();</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> NOW()               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span><span class="number">-10</span><span class="number">-21</span> <span class="number">15</span>:<span class="number">57</span>:<span class="number">02</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html">資料參考</a></p><p>小練習:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> CONCAT(first_name,&quot; &quot;,last_name,&quot;was hired on&quot;,DATE_FORMAT(hire_date,&quot;%D %M %Y&quot;)) <span class="keyword">as</span> title <span class="keyword">from</span> employee;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> title                                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Robin Jackmanwas hired on12th October <span class="number">2001</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Taylor Edwardwas hired on21st September <span class="number">2002</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Vivian Dickenswas hired on29th August <span class="number">2012</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harry Cliffordwas hired on10th December <span class="number">2015</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Eliza Cliffordwas hired on19th October <span class="number">1998</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Nancy Newmanwas hired on23rd January <span class="number">2007</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Melinda Cliffordwas hired on29th October <span class="number">2013</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Jack Chanwas hired on7th September <span class="number">2018</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Harley Gilbertwas hired on17th July <span class="number">2000</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------------------------------+</span></span><br></pre></td></tr></table></figure><h3 id="String-Type"><a href="#String-Type" class="headerlink" title="String Type"></a>String Type</h3><h5 id="1-CHAR-and-VARCHAR"><a href="#1-CHAR-and-VARCHAR" class="headerlink" title="1. CHAR and VARCHAR"></a>1. CHAR and VARCHAR</h5><p>VAR(可變的)</p><p>CHAR length string(0~255)<br>char 的 storage 是固定的，bytes 是固定的</p><p>VARCHAR variable-length strings(0~65535)<br>varchar 的 storage 是可變的，字符也算一個 bytes</p><h5 id="2-BINARY-and-VARBINARY"><a href="#2-BINARY-and-VARBINARY" class="headerlink" title="2. BINARY and VARBINARY"></a>2. BINARY and VARBINARY</h5><p><a href="https://dev.mysql.com/doc/refman/5.7/en/binary-varbinary.html">MySQL 文檔</a></p><h5 id="3-BLOB-and-TEXT"><a href="#3-BLOB-and-TEXT" class="headerlink" title="3. BLOB and TEXT"></a>3. BLOB and TEXT</h5><p>通常用來存取大文檔，要排序大文檔通常比較費時，可通過</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set max_sort_length = 2000;</span><br></pre></td></tr></table></figure><p>更改 sql 最大文字長度。</p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/storage-requirements.html">MySQL 文檔</a></p><h5 id="4-ENUM"><a href="#4-ENUM" class="headerlink" title="4. ENUM"></a>4. ENUM</h5><p>選擇的數據類型</p><p>範例:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> shirt(</span><br><span class="line">size ENUM(&quot;x-small&quot;,&quot;small&quot;,&quot;medium&quot;,&quot;large&quot;,&quot;x-large&quot;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><a href="https://dev.mysql.com/doc/refman/5.7/en/enum.html">補充連結</a></p><p>插入時可直接打索引值，速度比 varchar 快。</p><h5 id="5-SET"><a href="#5-SET" class="headerlink" title="5. SET"></a>5. SET</h5><p>最多八個 column(2 的 8 次方)</p><h4 id="修改數據類型，使用-ALTER"><a href="#修改數據類型，使用-ALTER" class="headerlink" title="修改數據類型，使用 ALTER"></a>修改數據類型，使用 ALTER</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(username <span class="type">VARCHAR</span>(<span class="number">10</span>), password <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">10</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">table</span> <span class="keyword">user</span> MODIFY username <span class="type">VARCHAR</span>(<span class="number">15</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">desc</span> <span class="keyword">user</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field    <span class="operator">|</span> Type        <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"><span class="operator">|</span> username <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">15</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">20</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+-------------+------+-----+---------+-------+</span></span><br><span class="line"></span><br><span class="line">成功更改。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="SQL-邏輯操作符"><a href="#SQL-邏輯操作符" class="headerlink" title="SQL 邏輯操作符"></a>SQL 邏輯操作符</h3><h4 id="Equal-和-NOT-Equal-等於不等於"><a href="#Equal-和-NOT-Equal-等於不等於" class="headerlink" title="Equal 和 NOT Equal 等於不等於"></a>Equal 和 NOT Equal 等於不等於</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--Equal範例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="operator">=</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--NOT Equal範例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="operator">!=</span> <span class="number">8000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="keyword">NOT</span> <span class="number">8000</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="LIKE-和-NOT-LIKE"><a href="#LIKE-和-NOT-LIKE" class="headerlink" title="LIKE 和 NOT LIKE"></a>LIKE 和 NOT LIKE</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--LIKE範例</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--LIKE就是模糊搜尋</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name <span class="keyword">like</span> &quot;H%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--NOT LIKE範例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name <span class="keyword">NOT</span> <span class="keyword">like</span> &quot;H%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--嚴格搜尋大小寫BINARY，也可以在創建時加入BINARY</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> first_name <span class="keyword">like</span> <span class="type">BINARY</span> &quot;H%&quot;;</span><br></pre></td></tr></table></figure><h4 id="Greate-Than-和-Less-Than-大於小於"><a href="#Greate-Than-和-Less-Than-大於小於" class="headerlink" title="Greate Than 和 Less Than 大於小於"></a>Greate Than 和 Less Than 大於小於</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--&quot; &gt; &quot;可用運算符號替換</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="operator">&gt;</span> <span class="number">6000</span>;</span><br></pre></td></tr></table></figure><h4 id="AND-和-OR"><a href="#AND-和-OR" class="headerlink" title="AND 和 OR"></a>AND 和 OR</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--AND範例，條件同時符合</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary<span class="operator">&gt;</span><span class="number">6000</span> <span class="keyword">and</span> first_name <span class="keyword">LIKE</span>&quot;H%&quot;;</span><br><span class="line"></span><br><span class="line"><span class="comment">--OR範例，條件其一符合或都符合選項</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary<span class="operator">&gt;</span><span class="number">6000</span> <span class="keyword">or</span> first_name <span class="keyword">LIKE</span>&quot;H%&quot;;</span><br></pre></td></tr></table></figure><h4 id="BETWEEN"><a href="#BETWEEN" class="headerlink" title="BETWEEN"></a>BETWEEN</h4><p>尋找一個 range 之間</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--尋找薪水在6000到8000之間</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> betweeen <span class="number">6000</span> <span class="keyword">and</span> <span class="number">8000</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="IN-和-NOT-IN"><a href="#IN-和-NOT-IN" class="headerlink" title="IN 和 NOT IN"></a>IN 和 NOT IN</h4><p>比較精確地找尋</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> employee <span class="keyword">where</span> salary <span class="keyword">in</span> (<span class="number">5000</span>,<span class="number">6000</span>,<span class="number">7000</span>,<span class="number">8000</span>);</span><br></pre></td></tr></table></figure><h4 id="CASE-Statement"><a href="#CASE-Statement" class="headerlink" title="CASE Statement"></a>CASE Statement</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">    <span class="keyword">case</span></span><br><span class="line">          <span class="keyword">when</span> salary <span class="operator">&gt;=</span><span class="number">7000</span> <span class="keyword">then</span> &quot;high&quot;</span><br><span class="line">          <span class="keyword">else</span> &quot;low&quot;</span><br><span class="line">    <span class="keyword">end</span> <span class="keyword">as</span> tag</span><br><span class="line"><span class="keyword">from</span> employee <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">desc</span>;</span><br></pre></td></tr></table></figure><h3 id="MySQL-內建函數"><a href="#MySQL-內建函數" class="headerlink" title="MySQL 內建函數"></a>MySQL 內建函數</h3><h4 id="1-字符函數"><a href="#1-字符函數" class="headerlink" title="1. 字符函數"></a>1. 字符函數</h4><p>字串拼接:CONCAT()，CONCAT_WS。</p><p>字串大小寫:UPPER()，LOWER()。</p><p>從左右邊數來:LEFT()，RIGHT()。</p><p>字串長度:LENGTH()。</p><p>去除特定字符:LTRIM()，RTRIM()，TRIM()</p><p>字串替換:REPLACE()</p><p>獲取特定字串:SUBSTRING(特定字串,起,尾,)</p><h4 id="2-數值函數"><a href="#2-數值函數" class="headerlink" title="2. 數值函數"></a>2. 數值函數</h4><p>無條件進位和捨去:CEIL()，FIOOR()</p><p>除數跟餘數:DIV()，MOD()</p><p>平方:POW()</p><p>四捨五入:ROUND()</p><h4 id="3-日期時間函數"><a href="#3-日期時間函數" class="headerlink" title="3. 日期時間函數"></a>3. 日期時間函數</h4><p>當前時間:NOE()，CURDATE()，CURTIMEE()</p><p>格式化時間:DATE_FORNAT()</p><p>日期增加減少:DASTE_ADD()</p><p>時間差:DATEDIFF(第一個時間,第二個時間)</p><h4 id="4-訊息函數"><a href="#4-訊息函數" class="headerlink" title="4. 訊息函數"></a>4. 訊息函數</h4><p>獲取當前進程 ID:CONNECTION_ID()</p><p>當前 DATABASE 名稱:DATABASE()</p><p>最後一次生成的 ID:LAST_INSERT_ID()</p><p>當前用戶:USER()</p><p>當前版本:VERSION()</p><h4 id="5-聚合函數"><a href="#5-聚合函數" class="headerlink" title="5. 聚合函數"></a>5. 聚合函數</h4><p>平均值 AVG()</p><p>計数 COUNT()</p><p>最大值 MAX()</p><p>最小值 MIN()</p><p>求和 SUM()</p><h4 id="6-加密函數"><a href="#6-加密函數" class="headerlink" title="6. 加密函數"></a>6. 加密函數</h4><p>更改密碼:PASSWORD()</p><p>存取密碼如果資料密要加密時用:MD5()</p><h3 id="RELATIONSHIP-之-ONE-TO-MANY-一對多"><a href="#RELATIONSHIP-之-ONE-TO-MANY-一對多" class="headerlink" title="RELATIONSHIP 之 ONE TO MANY(一對多)"></a>RELATIONSHIP 之 ONE TO MANY(一對多)</h3><p>先新增兩個 table</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(first_name, last_name, email) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;roj@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;taed@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;vidi@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;hgi@gmail.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    order_date <span class="type">DATE</span>,</span><br><span class="line">    amount <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">    customer_id <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> orders(order_date, amount, customer_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;2001-10-12&#x27;</span>, <span class="number">99.12</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-09-21&#x27;</span>, <span class="number">110.99</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-10-13&#x27;</span>, <span class="number">12.19</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-29&#x27;</span>, <span class="number">88.09</span>, <span class="number">3</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-11&#x27;</span>, <span class="number">205.01</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>使用 id 連結兩個 table</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> orders <span class="keyword">where</span> customer_id <span class="operator">=</span> (<span class="keyword">select</span> id <span class="keyword">from</span> customers <span class="keyword">where</span> email<span class="operator">=</span>&quot;roj@gmail.com&quot;);</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> order_date <span class="operator">|</span> amount <span class="operator">|</span> customer_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span>  <span class="number">99.12</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-13</span> <span class="operator">|</span>  <span class="number">12.19</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+--------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="使用-Foreign-Key-約束關聯"><a href="#使用-Foreign-Key-約束關聯" class="headerlink" title="使用 Foreign Key 約束關聯"></a>使用 Foreign Key 約束關聯</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(first_name, last_name, email) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;roj@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;taed@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;vidi@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;hgi@gmail.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    order_date <span class="type">DATE</span>,</span><br><span class="line">    amount <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">    customer_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (customer_id) <span class="keyword">REFERENCES</span> customers(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> orders(order_date, amount, customer_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;2001-10-12&#x27;</span>, <span class="number">99.12</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-09-21&#x27;</span>, <span class="number">110.99</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-10-13&#x27;</span>, <span class="number">12.19</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-29&#x27;</span>, <span class="number">88.09</span>, <span class="number">3</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-11&#x27;</span>, <span class="number">205.01</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><h4 id="Inner-Join-結合兩張-table"><a href="#Inner-Join-結合兩張-table" class="headerlink" title="Inner Join 結合兩張 table"></a>Inner Join 結合兩張 table</h4><p>取 table 重複部分</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> customers <span class="keyword">inner</span> <span class="keyword">join</span> orders <span class="keyword">where</span> customers.id<span class="operator">=</span>orders.customer_id;</span><br><span class="line"></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+----------------+----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> first_name <span class="operator">|</span> last_name <span class="operator">|</span> email          <span class="operator">|</span> id <span class="operator">|</span> order_date <span class="operator">|</span> amount <span class="operator">|</span> customer_id <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+----------------+----+------------+--------+-------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> roj<span class="variable">@gmail</span>.com  <span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-12</span> <span class="operator">|</span>  <span class="number">99.12</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Robin      <span class="operator">|</span> Jackman   <span class="operator">|</span> roj<span class="variable">@gmail</span>.com  <span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-10</span><span class="number">-13</span> <span class="operator">|</span>  <span class="number">12.19</span> <span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Taylor     <span class="operator">|</span> Edward    <span class="operator">|</span> taed<span class="variable">@gmail</span>.com <span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-09</span><span class="number">-21</span> <span class="operator">|</span> <span class="number">110.99</span> <span class="operator">|</span>           <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Vivian     <span class="operator">|</span> Dickens   <span class="operator">|</span> vidi<span class="variable">@gmail</span>.com <span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-11</span><span class="number">-29</span> <span class="operator">|</span>  <span class="number">88.09</span> <span class="operator">|</span>           <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> Harley     <span class="operator">|</span> Gilbert   <span class="operator">|</span> hgi<span class="variable">@gmail</span>.com  <span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> <span class="number">2001</span><span class="number">-11</span><span class="number">-11</span> <span class="operator">|</span> <span class="number">205.01</span> <span class="operator">|</span>           <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------+-----------+----------------+----+------------+--------+-------------+</span></span><br></pre></td></tr></table></figure><h4 id="ieft-join"><a href="#ieft-join" class="headerlink" title="ieft join"></a>ieft join</h4><p>過濾條件式寫在 ON 後面，代表是先針對連結前的指定資料表進行過濾</p><p>過濾條件寫在 WHERE 後面，代表是對連結後取得的資料集合再進行過濾</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--取得自己以及重複部分</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> customers <span class="keyword">left</span> <span class="keyword">join</span> orders <span class="keyword">on</span> customers.id<span class="operator">=</span>orders.customer_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--如果總和為null換成0</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> <span class="built_in">SUM</span>(amount) <span class="keyword">is</span> <span class="keyword">NULL</span> <span class="keyword">then</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">SUM</span>(amount)</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">as</span> total_amount</span><br><span class="line"><span class="keyword">from</span> customers <span class="keyword">left</span> <span class="keyword">join</span> orders <span class="keyword">on</span> customers.id<span class="operator">=</span>orders.customer_id <span class="keyword">group</span> <span class="keyword">by</span> customers.id;</span><br><span class="line"></span><br><span class="line"><span class="comment">--第二種null換成0寫法</span></span><br><span class="line"><span class="keyword">SELECT</span> first_name, last_name, IFNULL(<span class="built_in">SUM</span>(amount), <span class="number">0</span>)</span><br><span class="line"><span class="keyword">from</span> customers <span class="keyword">left</span> <span class="keyword">join</span> orders <span class="keyword">on</span> customers.id<span class="operator">=</span>orders.customer_id <span class="keyword">group</span> <span class="keyword">by</span> customers.id;</span><br></pre></td></tr></table></figure><h4 id="rigth-join"><a href="#rigth-join" class="headerlink" title="rigth join"></a>rigth join</h4><p>left join 的相反邊</p><h4 id="ON-DELETE"><a href="#ON-DELETE" class="headerlink" title="ON DELETE"></a>ON DELETE</h4><p>刪除被 FOREIGN KEY 約束的資料</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--刪除使用者資料，會連帶買的商品一起刪除</span></span><br><span class="line"><span class="comment">--建立資料表同時使用foreign key 和on delete</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> customers(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> customers(first_name, last_name, email) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Robin&#x27;</span>, <span class="string">&#x27;Jackman&#x27;</span>, <span class="string">&#x27;roj@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;Edward&#x27;</span>, <span class="string">&#x27;taed@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Vivian&#x27;</span>, <span class="string">&#x27;Dickens&#x27;</span>, <span class="string">&#x27;vidi@gmail.com&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Harley&#x27;</span>, <span class="string">&#x27;Gilbert&#x27;</span>, <span class="string">&#x27;hgi@gmail.com&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> orders(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    order_date <span class="type">DATE</span>,</span><br><span class="line">    amount <span class="type">DECIMAL</span>(<span class="number">8</span>,<span class="number">2</span>),</span><br><span class="line">    customer_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(customer_id)</span><br><span class="line">        <span class="keyword">REFERENCES</span> customers(id)</span><br><span class="line">        <span class="keyword">ON</span> <span class="keyword">DELETE</span> CASCADE</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> orders(order_date, amount, customer_id) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;2001-10-12&#x27;</span>, <span class="number">99.12</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-09-21&#x27;</span>, <span class="number">110.99</span>, <span class="number">2</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-10-13&#x27;</span>, <span class="number">12.19</span>, <span class="number">1</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-29&#x27;</span>, <span class="number">88.09</span>, <span class="number">3</span>),</span><br><span class="line">    (<span class="string">&#x27;2001-11-11&#x27;</span>, <span class="number">205.01</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><h5 id="補充"><a href="#補充" class="headerlink" title="補充"></a>補充</h5><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--兩種方法取小數點後精度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="built_in">AVG</span>(imdb_score), <span class="type">DECIMAL</span>(<span class="number">2</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">--ROUND方法去取精度</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">select</span> ROUND(<span class="number">7.83232</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">7.83232</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ROUND(<span class="number">7.83232</span>,<span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">7.83232</span>,<span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">7.8</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> ROUND(<span class="number">7.57232</span>,<span class="number">1</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> ROUND(<span class="number">7.57232</span>,<span class="number">1</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">7.6</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h3 id="RELATIONSHIP-之-MANY-to-MANY-多對多"><a href="#RELATIONSHIP-之-MANY-to-MANY-多對多" class="headerlink" title="RELATIONSHIP 之 MANY to MANY(多對多)"></a>RELATIONSHIP 之 MANY to MANY(多對多)</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">--DATA</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> reviewers (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    first_name <span class="type">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">    last_name <span class="type">VARCHAR</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> books(</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    title <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    released_year <span class="keyword">YEAR</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">language</span> <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    paperback <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> reviews (</span><br><span class="line">    id <span class="type">INT</span> AUTO_INCREMENT <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    rating <span class="type">DECIMAL</span>(<span class="number">2</span>,<span class="number">1</span>),</span><br><span class="line">    book_id <span class="type">INT</span>,</span><br><span class="line">    reviewer_id <span class="type">INT</span>,</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(book_id) <span class="keyword">REFERENCES</span> books(id),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY(reviewer_id) <span class="keyword">REFERENCES</span> reviewers(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> books(title, released_year, <span class="keyword">language</span>, paperback) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Fifty Shades of Grey Series&#x27;</span>, <span class="number">2012</span>, <span class="string">&#x27;English&#x27;</span>, <span class="number">514</span>),</span><br><span class="line">    (<span class="string">&#x27;Civilian Publishing Alif Baa Taa: Learning My Arabic Alphabet&#x27;</span>, <span class="number">2018</span>, <span class="string">&#x27;Arabic&#x27;</span>, <span class="number">30</span>),</span><br><span class="line">    (<span class="string">&#x27;The Hunger Games (Book 3)&#x27;</span>, <span class="number">2014</span>, <span class="string">&#x27;English&#x27;</span>, <span class="number">400</span>),</span><br><span class="line">    (<span class="string">&#x27;Santo Remedio&#x27;</span>, <span class="number">2017</span>, <span class="string">&#x27;Spanish&#x27;</span>, <span class="number">240</span>),</span><br><span class="line">    (<span class="string">&#x27;The Fault in Our Stars&#x27;</span>, <span class="number">2012</span>, <span class="string">&#x27;English&#x27;</span>, <span class="number">318</span>),</span><br><span class="line">    (<span class="string">&#x27;Harry Potter Und der Stein der Weisen (German Edition)&#x27;</span>, <span class="number">2005</span>, <span class="string">&#x27;German&#x27;</span>, <span class="number">334</span>),</span><br><span class="line">    (<span class="string">&#x27;Collection Folio, no. 2&#x27;</span>, <span class="number">1971</span>, <span class="string">&#x27;French&#x27;</span>, <span class="number">185</span>),</span><br><span class="line">    (<span class="string">&#x27;Santo remedio: Ilustrado y a color&#x27;</span>, <span class="number">2018</span>, <span class="string">&#x27;Spanish&#x27;</span>, <span class="number">216</span>),</span><br><span class="line">    (<span class="string">&#x27;Splatoon 2&#x27;</span>, <span class="number">2017</span>, <span class="string">&#x27;Japanese&#x27;</span>, <span class="number">384</span>),</span><br><span class="line">    (<span class="string">&#x27;Minna No Nihongo: Beginner 1, 2nd Edition&#x27;</span>, <span class="number">2012</span>, <span class="string">&#x27;Japanese&#x27;</span>, <span class="number">210</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> reviewers (first_name, last_name) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="string">&#x27;Thomas&#x27;</span>, <span class="string">&#x27;Stoneman&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Wyatt&#x27;</span>, <span class="string">&#x27;Skaggs&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Kimbra&#x27;</span>, <span class="string">&#x27;Masters&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Domingo&#x27;</span>, <span class="string">&#x27;Cortes&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Colt&#x27;</span>, <span class="string">&#x27;Steele&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Pinkie&#x27;</span>, <span class="string">&#x27;Petit&#x27;</span>),</span><br><span class="line">    (<span class="string">&#x27;Marlon&#x27;</span>, <span class="string">&#x27;Crafford&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> reviews(book_id, reviewer_id, rating) <span class="keyword">VALUES</span></span><br><span class="line">    (<span class="number">1</span>,<span class="number">1</span>,<span class="number">8.0</span>),(<span class="number">1</span>,<span class="number">2</span>,<span class="number">7.5</span>),(<span class="number">1</span>,<span class="number">3</span>,<span class="number">8.5</span>),(<span class="number">1</span>,<span class="number">4</span>,<span class="number">7.7</span>),(<span class="number">1</span>,<span class="number">5</span>,<span class="number">8.9</span>),</span><br><span class="line">    (<span class="number">2</span>,<span class="number">1</span>,<span class="number">8.1</span>),(<span class="number">2</span>,<span class="number">4</span>,<span class="number">6.0</span>),(<span class="number">2</span>,<span class="number">3</span>,<span class="number">8.0</span>),(<span class="number">2</span>,<span class="number">6</span>,<span class="number">8.4</span>),(<span class="number">2</span>,<span class="number">5</span>,<span class="number">9.9</span>),</span><br><span class="line">    (<span class="number">3</span>,<span class="number">1</span>,<span class="number">7.0</span>),(<span class="number">3</span>,<span class="number">6</span>,<span class="number">7.5</span>),(<span class="number">3</span>,<span class="number">4</span>,<span class="number">8.0</span>),(<span class="number">3</span>,<span class="number">3</span>,<span class="number">7.1</span>),(<span class="number">3</span>,<span class="number">5</span>,<span class="number">8.0</span>),</span><br><span class="line">    (<span class="number">4</span>,<span class="number">1</span>,<span class="number">7.5</span>),(<span class="number">4</span>,<span class="number">3</span>,<span class="number">7.8</span>),(<span class="number">4</span>,<span class="number">4</span>,<span class="number">8.3</span>),(<span class="number">4</span>,<span class="number">2</span>,<span class="number">7.6</span>),(<span class="number">4</span>,<span class="number">5</span>,<span class="number">8.5</span>),</span><br><span class="line">    (<span class="number">5</span>,<span class="number">1</span>,<span class="number">9.5</span>),(<span class="number">5</span>,<span class="number">3</span>,<span class="number">9.0</span>),(<span class="number">5</span>,<span class="number">4</span>,<span class="number">9.1</span>),(<span class="number">5</span>,<span class="number">2</span>,<span class="number">9.3</span>),(<span class="number">5</span>,<span class="number">5</span>,<span class="number">9.9</span>),</span><br><span class="line">    (<span class="number">6</span>,<span class="number">2</span>,<span class="number">6.5</span>),(<span class="number">6</span>,<span class="number">3</span>,<span class="number">7.8</span>),(<span class="number">6</span>,<span class="number">4</span>,<span class="number">8.8</span>),(<span class="number">6</span>,<span class="number">2</span>,<span class="number">8.4</span>),(<span class="number">6</span>,<span class="number">5</span>,<span class="number">9.1</span>),</span><br><span class="line">    (<span class="number">7</span>,<span class="number">2</span>,<span class="number">9.1</span>),(<span class="number">7</span>,<span class="number">5</span>,<span class="number">9.7</span>),</span><br><span class="line">    (<span class="number">8</span>,<span class="number">4</span>,<span class="number">8.5</span>),(<span class="number">8</span>,<span class="number">2</span>,<span class="number">7.8</span>),(<span class="number">8</span>,<span class="number">6</span>,<span class="number">8.8</span>),(<span class="number">8</span>,<span class="number">5</span>,<span class="number">9.3</span>),</span><br><span class="line">    (<span class="number">9</span>,<span class="number">2</span>,<span class="number">5.5</span>),(<span class="number">9</span>,<span class="number">3</span>,<span class="number">6.8</span>),(<span class="number">9</span>,<span class="number">4</span>,<span class="number">5.8</span>),(<span class="number">9</span>,<span class="number">6</span>,<span class="number">4.3</span>),(<span class="number">9</span>,<span class="number">5</span>,<span class="number">4.5</span>),</span><br><span class="line">    (<span class="number">10</span>,<span class="number">5</span>,<span class="number">9.9</span>);</span><br></pre></td></tr></table></figure><p>練習題</p><p>找出評論者，評論分數最小,最大,平均,次數，如果次數等於 0 設為 INACTIVE，大於 0 設為 ACTIVE</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--case語句也能用if判斷式</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    first_name,</span><br><span class="line">    last_name,</span><br><span class="line">    <span class="built_in">COUNT</span>(rating) <span class="keyword">as</span> COUNT,</span><br><span class="line">    <span class="built_in">MIN</span>(IFNULL(rating, <span class="number">0</span>)) <span class="keyword">as</span> MIN,</span><br><span class="line">    <span class="built_in">MAX</span>(IFNULL(rating, <span class="number">0</span>)) <span class="keyword">as</span> MAX,</span><br><span class="line">    <span class="keyword">CONVERT</span>(IFNULL(<span class="built_in">AVG</span>(rating), <span class="number">0</span>), <span class="type">DECIMAL</span>(<span class="number">3</span>,<span class="number">2</span>)) <span class="keyword">AS</span> AVG,</span><br><span class="line">    IF(<span class="built_in">COUNT</span>(rating)<span class="operator">&gt;</span><span class="number">0</span>, <span class="string">&#x27;ACTIVE&#x27;</span>, <span class="string">&#x27;INACTIVE&#x27;</span>) <span class="keyword">AS</span> NEW_STATUS,</span><br><span class="line">    <span class="keyword">CASE</span></span><br><span class="line">        <span class="keyword">WHEN</span> <span class="built_in">COUNT</span>(rating)<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">THEN</span> <span class="string">&#x27;ACTIVE&#x27;</span></span><br><span class="line">        <span class="keyword">ELSE</span> &quot;INACTIVE&quot;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">AS</span> STATUS</span><br><span class="line"><span class="keyword">FROM</span> reviewers</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> reviews</span><br><span class="line">    <span class="keyword">ON</span> reviewers.id<span class="operator">=</span>reviews.reviewer_id</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> reviewers.id</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> AVG <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML CSS作品</title>
      <link href="/2020/09/08/htmlcss-post/"/>
      <url>/2020/09/08/htmlcss-post/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="名片"><a href="#名片" class="headerlink" title="名片"></a>名片</h2><h5 id="codepen"><a href="#codepen" class="headerlink" title="codepen"></a><a href="https://codepen.io/joe94113/pen/zYqbEvP">codepen</a></h5><iframe height="500" style="width: 100%;" scrolling="no" title="名片" src="https://codepen.io/joe94113/embed/zYqbEvP?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/joe94113/pen/zYqbEvP">  名片</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><h2 id="個人履歷"><a href="#個人履歷" class="headerlink" title="個人履歷"></a>個人履歷</h2><h5 id="哎呀切到一半"><a href="#哎呀切到一半" class="headerlink" title="哎呀切到一半"></a>哎呀切到一半</h5><h5 id="codepen-1"><a href="#codepen-1" class="headerlink" title="codepen"></a><a href="https://codepen.io/joe94113/pen/wvGZGLz">codepen</a></h5><iframe height="500" style="width: 100%;" scrolling="no" title="我的技能簡歷" src="https://codepen.io/joe94113/embed/wvGZGLz?default-tab=html%2Cresult" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href="https://codepen.io/joe94113/pen/wvGZGLz">  我的技能簡歷</a> by 王冠智 (<a href="https://codepen.io/joe94113">@joe94113</a>)  on <a href="https://codepen.io">CodePen</a>.</iframe><hr>]]></content>
      
      
      <categories>
          
          <category> HTML &amp; CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Frontend </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python line bpt</title>
      <link href="/2020/09/08/linebot-post/"/>
      <url>/2020/09/08/linebot-post/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LineBot-小柴幫你查"><a href="#LineBot-小柴幫你查" class="headerlink" title="LineBot : 小柴幫你查"></a>LineBot : 小柴幫你查</h1><h2 id="加入好友"><a href="#加入好友" class="headerlink" title="加入好友"></a><a href="https://lin.ee/ykVmdHk">加入好友</a></h2><p><img src="https://i.imgur.com/h2vcaHJ.png" alt="Imgur"></p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><h3 id="1-普通聊天對話"><a href="#1-普通聊天對話" class="headerlink" title="1. 普通聊天對話"></a>1. 普通聊天對話</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/PiFpmSk.jpg" style="width:400px;"/></div></div><h3 id="2-按-傳送位置訊息，跑出附近餐廳"><a href="#2-按-傳送位置訊息，跑出附近餐廳" class="headerlink" title="2. 按 + 傳送位置訊息，跑出附近餐廳"></a>2. 按 + 傳送位置訊息，跑出附近餐廳</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/UFeujUl.jpg" style="width:400px;"/></div></div><h3 id="3-YAHOO-最新電影"><a href="#3-YAHOO-最新電影" class="headerlink" title="3. YAHOO 最新電影"></a>3. YAHOO 最新電影</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/RHXj0Rx.jpg" style="width:400px;"/></div></div><h3 id="4-KKBOX-隨機單曲"><a href="#4-KKBOX-隨機單曲" class="headerlink" title="4. KKBOX 隨機單曲"></a>4. KKBOX 隨機單曲</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/RZRJduW.jpg" style="width:400px;"/></div></div><h3 id="5-抽美女或。。。"><a href="#5-抽美女或。。。" class="headerlink" title="5. 抽美女或。。。"></a>5. 抽美女或。。。</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/WXuORIs.jpg" style="width:400px;"/></div></div><h3 id="6-聯合報即時新聞"><a href="#6-聯合報即時新聞" class="headerlink" title="6. 聯合報即時新聞"></a>6. 聯合報即時新聞</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/qgTS2dh.jpg" style="width:400px;"/></div></div><h3 id="7-DCARD-西斯版"><a href="#7-DCARD-西斯版" class="headerlink" title="7. DCARD 西斯版"></a>7. DCARD 西斯版</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://i.imgur.com/kvX1ZGP.jpg" style="width:400px;"/></div></div><div class="tag link"><a class="link-card" title="代碼位置" href="https://github.com/joe94113/Python_LineBot"><div class="left"><img src="https://i.imgur.com/mkn3r71.jpg"/></div><div class="right"><p class="text">代碼位置</p><p class="url">https://github.com/joe94113/Python_LineBot</p></div></a></div>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Backend </tag>
            
            <tag> Bot </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python打造自動化報表</title>
      <link href="/2020/09/06/python-post/"/>
      <url>/2020/09/06/python-post/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Python-雲端自動化動態報表"><a href="#Python-雲端自動化動態報表" class="headerlink" title="Python 雲端自動化動態報表"></a>Python 雲端自動化動態報表</h1><hr><h3 id="covid19-自動化更新動態報表"><a href="#covid19-自動化更新動態報表" class="headerlink" title="covid19 自動化更新動態報表"></a>covid19 自動化更新動態報表</h3><h5 id="爬取-github-開源的-data，每隔一天自動抓取一次資料。"><a href="#爬取-github-開源的-data，每隔一天自動抓取一次資料。" class="headerlink" title="爬取 github 開源的 data，每隔一天自動抓取一次資料。"></a>爬取 github 開源的 data，每隔一天自動抓取一次資料。</h5><h5 id="查看報表"><a href="#查看報表" class="headerlink" title="查看報表"></a><a href="https://datastudio.google.com/reporting/f198eddf-e1fd-4e96-b3f1-74e7971d40ba">查看報表</a></h5><p><img src="https://i.imgur.com/EAhImRN.jpg" alt="Imgur"></p><h3 id="貝莉梅-youtube-經營成效"><a href="#貝莉梅-youtube-經營成效" class="headerlink" title="貝莉梅 youtube 經營成效"></a>貝莉梅 youtube 經營成效</h3><h5 id="使用-youtube-api，每隔六小時自動抓取一次資料。"><a href="#使用-youtube-api，每隔六小時自動抓取一次資料。" class="headerlink" title="使用 youtube api，每隔六小時自動抓取一次資料。"></a>使用 youtube api，每隔六小時自動抓取一次資料。</h5><h5 id="查看報表-1"><a href="#查看報表-1" class="headerlink" title="查看報表"></a><a href="https://datastudio.google.com/reporting/010c6e08-4cbc-4704-a9a0-717c25d05f8b">查看報表</a></h5><p><img src="https://i.imgur.com/VIqKoN2.jpg" alt="Imgur"></p><h3 id="台積電股市新聞報表"><a href="#台積電股市新聞報表" class="headerlink" title="台積電股市新聞報表"></a>台積電股市新聞報表</h3><h5 id="利用網頁-ajax-json-檔案，爬取文章編號，只選擇標籤有台積電的新聞。"><a href="#利用網頁-ajax-json-檔案，爬取文章編號，只選擇標籤有台積電的新聞。" class="headerlink" title="利用網頁 ajax json 檔案，爬取文章編號，只選擇標籤有台積電的新聞。"></a>利用網頁 ajax json 檔案，爬取文章編號，只選擇標籤有台積電的新聞。</h5><h5 id="查看報表-2"><a href="#查看報表-2" class="headerlink" title="查看報表"></a><a href="https://datastudio.google.com/reporting/74efe628-8d4d-48d5-9ff0-33c74aee15c2">查看報表</a></h5><p><img src="https://i.imgur.com/02TOP7Y.jpg" alt="Imgur"></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
